{"version":3,"file":"testUtils.js","names":["_react","_interopRequireDefault","require","_utils","obj","__esModule","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","_toPropertyKey","key","_createClass","protoProps","staticProps","prototype","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread","arguments","source","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","value","arg","_toPrimitive","_typeof","String","input","hint","prim","Symbol","toPrimitive","undefined","res","call","Number","_slicedToArray","arr","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","o","minLen","_arrayLikeToArray","n","toString","slice","constructor","name","Array","from","test","len","arr2","_i","iterator","_s","_e","_x","_r","_arr","_n","_d","next","done","err","isArray","formatMessage","exports","msg","values","message","defaultMessage","replace","concat","mockNestedComponent","contents","fn","nestedName","mockNestedComponents","mapping","entries","reduce","_ref","_ref2","MockUseState","hooks","oldState","setState","stateVals","mock","bind","restore","mockVal","testGetter","get","StrictDict","state","_this","jest","val","mockReturnValueOnce","_this2","testValue","useState","spyOn","react","mockImplementationOnce","expect","toEqual"],"sources":["../src/testUtils.js"],"sourcesContent":["/* istanbul ignore file */\nimport react from 'react';\nimport { StrictDict } from './editors/utils';\n/**\n * Mocked formatMessage provided by react-intl\n */\nexport const formatMessage = (msg, values) => {\n  let message = msg.defaultMessage;\n  if (values === undefined) {\n    return message;\n  }\n  Object.keys(values).forEach((key) => {\n    // eslint-disable-next-line\n    message = message.replace(`{${key}}`, values[key]);\n  });\n  return message;\n};\n\n/**\n * Mock a single component, or a nested component so that its children render nicely\n * in snapshots.\n * @param {string} name - parent component name\n * @param {obj} contents - object of child components with intended component\n *   render name.\n * @return {func} - mock component with nested children.\n *\n * usage:\n *   mockNestedComponent('Card', { Body: 'Card.Body', Form: { Control: { Feedback: 'Form.Control.Feedback' }}... });\n *   mockNestedComponent('IconButton', 'IconButton');\n */\nexport const mockNestedComponent = (name, contents) => {\n  if (typeof contents !== 'object') {\n    return contents;\n  }\n  const fn = () => name;\n  Object.defineProperty(fn, 'name', { value: name });\n  Object.keys(contents).forEach((nestedName) => {\n    const value = contents[nestedName];\n    fn[nestedName] = typeof value !== 'object'\n      ? value\n      : mockNestedComponent(`${name}.${nestedName}`, value);\n  });\n  return fn;\n};\n\n/**\n * Mock a module of components.  nested components will be rendered nicely in snapshots.\n * @param {obj} mapping - component module mock config.\n * @return {obj} - module of flat and nested components that will render nicely in snapshots.\n * usage:\n *   mockNestedComponents({\n *     Card: { Body: 'Card.Body' },\n *     IconButton: 'IconButton',\n *   })\n */\nexport const mockNestedComponents = (mapping) => Object.entries(mapping).reduce(\n  (obj, [name, value]) => ({\n    ...obj,\n    [name]: mockNestedComponent(name, value),\n  }),\n  {},\n);\n\n/**\n * Mock utility for working with useState in a hooks module.\n * Expects/requires an object containing the state object in order to ensure\n * the mock behavior works appropriately.\n *\n * Expected format:\n *   hooks = { state: { <key>: (val) => React.createRef(val), ... } }\n *\n * Returns a utility for mocking useState and providing access to specific state values\n * and setState methods, as well as allowing per-test configuration of useState value returns.\n *\n * Example usage:\n *   // hooks.js\n *   import * as module from './hooks';\n *   const state = {\n *     isOpen: (val) => React.useState(val),\n *     hasDoors: (val) => React.useState(val),\n *     selected: (val) => React.useState(val),\n *   };\n *   ...\n *   export const exampleHook = () => {\n *     const [isOpen, setIsOpen] = module.state.isOpen(false);\n *     if (!isOpen) { return null; }\n *     return { isOpen, setIsOpen };\n *   }\n *   ...\n *\n *   // hooks.test.js\n *   import * as hooks from './hooks';\n *   const state = new MockUseState(hooks)\n *   ...\n *   describe('state hooks', () => {\n *     state.testGetter(state.keys.isOpen);\n *     state.testGetter(state.keys.hasDoors);\n *     state.testGetter(state.keys.selected);\n *   });\n *   describe('exampleHook', () => {\n *     beforeEach(() => { state.mock(); });\n *     it('returns null if isOpen is default value', () => {\n *       expect(hooks.exampleHook()).toEqual(null);\n *     });\n *     it('returns isOpen and setIsOpen if isOpen is not null', () => {\n *       state.mockVal(state.keys.isOpen, true);\n *       expect(hooks.exampleHook()).toEqual({\n *         isOpen: true,\n *         setIsOpen: state.setState[state.keys.isOpen],\n *       });\n *     });\n *     afterEach(() => { state.restore(); });\n *   });\n *\n * @param {obj} hooks - hooks module containing a 'state' object\n */\nexport class MockUseState {\n  constructor(hooks) {\n    this.hooks = hooks;\n    this.oldState = null;\n    this.setState = {};\n    this.stateVals = {};\n\n    this.mock = this.mock.bind(this);\n    this.restore = this.restore.bind(this);\n    this.mockVal = this.mockVal.bind(this);\n    this.testGetter = this.testGetter.bind(this);\n  }\n\n  /**\n   * @return {object} - StrictDict of state object keys\n   */\n  get keys() {\n    return StrictDict(Object.keys(this.hooks.state).reduce(\n      (obj, key) => ({ ...obj, [key]: key }),\n      {},\n    ));\n  }\n\n  /**\n   * Replace the hook module's state object with a mocked version, initialized to default values.\n   */\n  mock() {\n    this.oldState = this.hooks.state;\n    Object.keys(this.keys).forEach(key => {\n      this.hooks.state[key] = jest.fn(val => {\n        this.stateVals[key] = val;\n        return [val, this.setState[key]];\n      });\n    });\n    this.setState = Object.keys(this.keys).reduce(\n      (obj, key) => ({\n        ...obj,\n        [key]: jest.fn(val => {\n          this.hooks.state[key] = val;\n        }),\n      }),\n      {},\n    );\n  }\n\n  /**\n   * Restore the hook module's state object to the actual code.\n   */\n  restore() {\n    this.hooks.state = this.oldState;\n  }\n\n  /**\n   * Mock the state getter associated with a single key to return a specific value one time.\n   * @param {string} key - state key (from this.keys)\n   * @param {any} val - new value to be returned by the useState call.\n   */\n  mockVal(key, val) {\n    this.hooks.state[key].mockReturnValueOnce([val, this.setState[key]]);\n  }\n\n  testGetter(key) {\n    test(`${key} state getter should return useState passthrough`, () => {\n      const testValue = 'some value';\n      const useState = (val) => ({ useState: val });\n      jest.spyOn(react, 'useState').mockImplementationOnce(useState);\n      expect(this.hooks.state[key](testValue)).toEqual(useState(testValue));\n    });\n  }\n}\n"],"mappings":"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"}