{"version":3,"file":"LanguageSelector.js","names":["_react","_interopRequireDefault","require","_propTypes","_paragon","_icons","_reactRedux","_i18n","_redux","_video","_FileInput","_messages","_module","_interopRequireWildcard","_jsxRuntime","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","_typeof","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","TypeError","o","minLen","_arrayLikeToArray","n","toString","slice","constructor","name","Array","from","test","len","length","arr2","_i","Symbol","iterator","_s","_e","_x","_r","_arr","_n","_d","next","done","push","value","err","isArray","hooks","exports","onSelectLanguage","_ref","dispatch","languageBeforeChange","triggerupload","setLocalLang","_ref2","newLang","thunkActions","video","updateTranscriptLanguage","newLanguageCode","addFileCallback","_ref3","localLang","file","uploadTranscript","filename","language","LanguageSelector","_ref4","index","openLanguages","intl","_React$useState","React","useState","_React$useState2","input","fileInput","onAddFile","useDispatch","onLanguageChange","module","click","getTitle","videoTranscriptLanguages","jsxs","ActionRow","children","jsx","Spacer","Icon","className","src","Check","formatMessage","messages","languageSelectPlaceholder","Fragment","Dropdown","Toggle","iconAs","Button","languageSelectLabel","block","id","concat","variant","Menu","entries","map","_ref5","_ref6","lang","text","Item","some","row","includes","onClick","FileInput","acceptedFiles","defaultProps","propTypes","PropTypes","arrayOf","string","number","isRequired","intlShape","mapStateToProps","state","selectors","mapDispatchToProps","_default","injectIntl","connect"],"sources":["../../../../../../../../src/editors/containers/VideoEditor/components/VideoSettingsModal/components/TranscriptWidget/LanguageSelector.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  ActionRow,\n  Dropdown,\n  Button,\n  Icon,\n} from '@edx/paragon';\n\nimport { Check } from '@edx/paragon/icons';\nimport { connect, useDispatch } from 'react-redux';\nimport { injectIntl, intlShape } from '@edx/frontend-platform/i18n';\nimport { thunkActions, selectors } from '../../../../../../data/redux';\nimport { videoTranscriptLanguages } from '../../../../../../data/constants/video';\nimport { FileInput, fileInput } from '../../../../../../sharedComponents/FileInput';\nimport messages from './messages';\nimport * as module from './LanguageSelector';\n\nexport const hooks = {\n  onSelectLanguage: ({\n    dispatch, languageBeforeChange, triggerupload, setLocalLang,\n  }) => ({ newLang }) => {\n    // IF Language is unset, set language and begin upload prompt.\n    setLocalLang(newLang);\n    if (languageBeforeChange === '') {\n      triggerupload();\n      return;\n    }\n    // Else: update language\n    dispatch(\n      thunkActions.video.updateTranscriptLanguage({\n        newLanguageCode: newLang, languageBeforeChange,\n      }),\n    );\n  },\n\n  addFileCallback: ({ dispatch, localLang }) => (file) => {\n    dispatch(thunkActions.video.uploadTranscript({\n      file,\n      filename: file.name,\n      language: localLang,\n    }));\n  },\n\n};\n\nexport const LanguageSelector = ({\n  index, // For a unique id for the form control\n  language,\n  // Redux\n  openLanguages, // Only allow those languages not already associated with a transcript to be selected\n  // intl\n  intl,\n\n}) => {\n  const [localLang, setLocalLang] = React.useState(language);\n  const input = fileInput({ onAddFile: hooks.addFileCallback({ dispatch: useDispatch(), localLang }) });\n  const onLanguageChange = module.hooks.onSelectLanguage({\n    dispatch: useDispatch(), languageBeforeChange: localLang, setLocalLang, triggerupload: input.click,\n  });\n\n  const getTitle = () => {\n    if (Object.prototype.hasOwnProperty.call(videoTranscriptLanguages, language)) {\n      return (\n        <ActionRow>\n          {videoTranscriptLanguages[language]}\n          <ActionRow.Spacer />\n          <Icon className=\"text-primary-500\" src={Check} />\n        </ActionRow>\n\n      );\n    }\n    return (\n      <ActionRow>\n        {intl.formatMessage(messages.languageSelectPlaceholder)}\n        <ActionRow.Spacer />\n      </ActionRow>\n    );\n  };\n\n  return (\n    <>\n\n      <Dropdown\n        className=\"w-100 mb-2\"\n      >\n        <Dropdown.Toggle\n          iconAs={Button}\n          aria-label={intl.formatMessage(messages.languageSelectLabel)}\n          block\n          id={`selectLanguage-form-${index}`}\n          className=\"w-100\"\n          variant=\"outline-primary\"\n        >\n          {getTitle()}\n        </Dropdown.Toggle>\n        <Dropdown.Menu>\n          {Object.entries(videoTranscriptLanguages).map(([lang, text]) => {\n            if (language === lang) {\n              return (<Dropdown.Item>{text}<Icon className=\"text-primary-500\" src={Check} /></Dropdown.Item>);\n            }\n            if (openLanguages.some(row => row.includes(lang))) {\n              return (<Dropdown.Item onClick={() => onLanguageChange({ newLang: lang })}>{text}</Dropdown.Item>);\n            }\n            return (<Dropdown.Item className=\"disabled\">{text}</Dropdown.Item>);\n          })}\n        </Dropdown.Menu>\n      </Dropdown>\n      <FileInput fileInput={input} acceptedFiles=\".srt\" />\n    </>\n  );\n};\n\nLanguageSelector.defaultProps = {\n  openLanguages: [],\n};\n\nLanguageSelector.propTypes = {\n  openLanguages: PropTypes.arrayOf(PropTypes.string),\n  index: PropTypes.number.isRequired,\n  language: PropTypes.string.isRequired,\n  intl: intlShape.isRequired,\n};\n\nexport const mapStateToProps = (state) => ({\n  openLanguages: selectors.video.openLanguages(state),\n});\n\nexport const mapDispatchToProps = {};\n\nexport default injectIntl(connect(mapStateToProps, mapDispatchToProps)(LanguageSelector));\n"],"mappings":"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"}