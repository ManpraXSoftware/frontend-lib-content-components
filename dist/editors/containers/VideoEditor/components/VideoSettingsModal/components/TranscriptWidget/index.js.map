{"version":3,"file":"index.js","names":["_react","_interopRequireDefault","require","_reactRedux","_propTypes","_i18n","_paragon","_icons","_redux","_messages","_requests","_video","_ErrorAlert","_CollapsibleFormWidget","_ImportTranscriptCard","_Transcript","_hooks","_module","_interopRequireWildcard","_jsxRuntime","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","_typeof","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","TypeError","iter","Symbol","iterator","Array","from","isArray","_arrayLikeToArray","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","value","_toPropertyKey","configurable","writable","arg","_toPrimitive","String","input","hint","prim","toPrimitive","undefined","res","Number","_slicedToArray","_arrayWithHoles","_iterableToArrayLimit","_nonIterableRest","o","minLen","n","toString","slice","constructor","name","test","len","arr2","_i","_s","_e","_x","_r","_arr","_n","_d","next","done","err","hooks","exports","updateErrors","_ref","isUploadError","isDeleteError","_React$useContext$tra","React","useContext","ErrorContext","transcripts","error","setError","uploadError","messages","uploadTranscriptError","defaultMessage","deleteError","deleteTranscriptError","transcriptLanguages","intl","languages","fullTextTranslatedStrings","in8lTranscriptLanguages","transcript","join","hasTranscripts","onAddNewTranscript","_ref2","updateField","newTranscripts","concat","TranscriptWidget","_ref3","allowTranscriptDownloads","showTranscriptByDefault","allowTranscriptImport","_React$useContext$tra2","_React$useState","useState","_React$useState2","showImportCard","setShowImportCard","fullTextLanguages","module","jsxs","fontSize","isError","subtitle","title","formatMessage","children","jsx","hideHeading","FormattedMessage","Stack","gap","Form","Group","className","map","language","index","ActionRow","Checkbox","checked","onChange","e","allowDownloadCheckboxLabel","OverlayTrigger","placement","overlay","Tooltip","id","tooltipMessage","Icon","src","InfoOutline","style","height","width","Spacer","showByDefaultCheckboxLabel","Fragment","addFirstTranscript","setOpen","Button","size","iconBefore","Add","variant","onClick","uploadButtonLabel","defaultProps","propTypes","PropTypes","arrayOf","string","isRequired","bool","func","shape","intlShape","mapStateToProps","state","selectors","video","requests","isFailed","requestKey","RequestKeys","uploadTranscript","deleteTranscript","mapDispatchToProps","dispatch","stateUpdate","actions","_default","injectIntl","connect"],"sources":["../../../../../../../../src/editors/containers/VideoEditor/components/VideoSettingsModal/components/TranscriptWidget/index.jsx"],"sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {\n  FormattedMessage,\n  injectIntl,\n  intlShape,\n} from '@edx/frontend-platform/i18n';\nimport {\n  Form,\n  Button,\n  Stack,\n  Icon,\n  OverlayTrigger,\n  Tooltip,\n  ActionRow,\n} from '@edx/paragon';\nimport { Add, InfoOutline } from '@edx/paragon/icons';\n\nimport { actions, selectors } from '../../../../../../data/redux';\nimport messages from './messages';\n\nimport { RequestKeys } from '../../../../../../data/constants/requests';\nimport { in8lTranscriptLanguages } from '../../../../../../data/constants/video';\n\nimport ErrorAlert from '../../../../../../sharedComponents/ErrorAlerts/ErrorAlert';\nimport CollapsibleFormWidget from '../CollapsibleFormWidget';\n\nimport ImportTranscriptCard from './ImportTranscriptCard';\nimport Transcript from './Transcript';\nimport { ErrorContext } from '../../../../hooks';\nimport * as module from './index';\n\nexport const hooks = {\n  updateErrors: ({ isUploadError, isDeleteError }) => {\n    const [error, setError] = React.useContext(ErrorContext).transcripts;\n    if (isUploadError) {\n      setError({ ...error, uploadError: messages.uploadTranscriptError.defaultMessage });\n    }\n    if (isDeleteError) {\n      setError({ ...error, deleteError: messages.deleteTranscriptError.defaultMessage });\n    }\n  },\n  transcriptLanguages: (transcripts, intl) => {\n    const languages = [];\n    if (transcripts && transcripts.length > 0) {\n      const fullTextTranslatedStrings = in8lTranscriptLanguages(intl);\n      transcripts.forEach(transcript => {\n        if (!(transcript === '')) {\n          languages.push(fullTextTranslatedStrings[transcript]);\n        }\n      });\n\n      return languages.join(', ');\n    }\n    return 'None';\n  },\n  hasTranscripts: (transcripts) => {\n    if (transcripts && transcripts.length > 0) {\n      return true;\n    }\n    return false;\n  },\n  onAddNewTranscript: ({ transcripts, updateField }) => {\n    // keep blank lang code for now, will be updated once lang is selected.\n    if (!transcripts) {\n      updateField({ transcripts: [''] });\n      return;\n    }\n    const newTranscripts = [...transcripts, ''];\n    updateField({ transcripts: newTranscripts });\n  },\n};\n\n/**\n * Collapsible Form widget controlling video transcripts\n */\nexport const TranscriptWidget = ({\n  // redux\n  transcripts,\n  allowTranscriptDownloads,\n  showTranscriptByDefault,\n  allowTranscriptImport,\n  updateField,\n  isUploadError,\n  isDeleteError,\n  // injected\n  intl,\n}) => {\n  const [error] = React.useContext(ErrorContext).transcripts;\n  const [showImportCard, setShowImportCard] = React.useState(true);\n  const fullTextLanguages = module.hooks.transcriptLanguages(transcripts, intl);\n  const hasTranscripts = module.hooks.hasTranscripts(transcripts);\n\n  return (\n    <CollapsibleFormWidget\n      fontSize=\"x-small\"\n      isError={Object.keys(error).length !== 0}\n      subtitle={fullTextLanguages}\n      title={intl.formatMessage(messages.title)}\n    >\n      <ErrorAlert\n        hideHeading\n        isError={isUploadError}\n      >\n        <FormattedMessage {...messages.uploadTranscriptError} />\n      </ErrorAlert>\n      <ErrorAlert\n        hideHeading\n        isError={isDeleteError}\n      >\n        <FormattedMessage {...messages.deleteTranscriptError} />\n      </ErrorAlert>\n      <Stack gap={3}>\n        {hasTranscripts ? (\n          <Form.Group className=\"border-primary-100 border-bottom\">\n            {transcripts.map((language, index) => (\n              <Transcript\n                language={language}\n                index={index}\n              />\n            ))}\n            <ActionRow className=\"mt-3.5\">\n              <Form.Checkbox\n                checked={allowTranscriptDownloads}\n                className=\"decorative-control-label\"\n                onChange={(e) => updateField({ allowTranscriptDownloads: e.target.checked })}\n              >\n                <div className=\"small text-gray-700\">\n                  <FormattedMessage {...messages.allowDownloadCheckboxLabel} />\n                </div>\n              </Form.Checkbox>\n              <OverlayTrigger\n                key=\"top\"\n                placement=\"top\"\n                overlay={(\n                  <Tooltip id=\"tooltip-top\">\n                    <FormattedMessage {...messages.tooltipMessage} />\n                  </Tooltip>\n                )}\n              >\n                <Icon src={InfoOutline} style={{ height: '16px', width: '16px' }} />\n              </OverlayTrigger>\n              <ActionRow.Spacer />\n            </ActionRow>\n            <Form.Checkbox\n              checked={showTranscriptByDefault}\n              className=\"mt-3 decorative-control-label\"\n              onChange={(e) => updateField({ showTranscriptByDefault: e.target.checked })}\n            >\n              <div className=\"small text-gray-700\">\n                <FormattedMessage {...messages.showByDefaultCheckboxLabel} />\n              </div>\n            </Form.Checkbox>\n          </Form.Group>\n        ) : (\n          <>\n            <FormattedMessage {...messages.addFirstTranscript} />\n            {showImportCard && allowTranscriptImport\n              ? <ImportTranscriptCard setOpen={setShowImportCard} />\n              : null}\n          </>\n        )}\n        <div className=\"mt-2\">\n          <Button\n            className=\"text-primary-500 font-weight-bold justify-content-start pl-0\"\n            size=\"sm\"\n            iconBefore={Add}\n            variant=\"link\"\n            onClick={() => module.hooks.onAddNewTranscript({ transcripts, updateField })}\n          >\n            <FormattedMessage {...messages.uploadButtonLabel} />\n          </Button>\n        </div>\n      </Stack>\n    </CollapsibleFormWidget>\n  );\n};\n\nTranscriptWidget.defaultProps = {\n};\nTranscriptWidget.propTypes = {\n  // redux\n  transcripts: PropTypes.arrayOf(PropTypes.string).isRequired,\n  allowTranscriptDownloads: PropTypes.bool.isRequired,\n  showTranscriptByDefault: PropTypes.bool.isRequired,\n  allowTranscriptImport: PropTypes.bool.isRequired,\n  updateField: PropTypes.func.isRequired,\n  isUploadError: PropTypes.bool.isRequired,\n  isDeleteError: PropTypes.bool.isRequired,\n  intl: PropTypes.shape(intlShape).isRequired,\n};\nexport const mapStateToProps = (state) => ({\n  transcripts: selectors.video.transcripts(state),\n  allowTranscriptDownloads: selectors.video.allowTranscriptDownloads(state),\n  showTranscriptByDefault: selectors.video.showTranscriptByDefault(state),\n  allowTranscriptImport: selectors.video.allowTranscriptImport(state),\n  isUploadError: selectors.requests.isFailed(state, { requestKey: RequestKeys.uploadTranscript }),\n  isDeleteError: selectors.requests.isFailed(state, { requestKey: RequestKeys.deleteTranscript }),\n});\n\nexport const mapDispatchToProps = (dispatch) => ({\n  updateField: (stateUpdate) => dispatch(actions.video.updateField(stateUpdate)),\n});\n\nexport default injectIntl(connect(mapStateToProps, mapDispatchToProps)(TranscriptWidget));\n"],"mappings":"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"}