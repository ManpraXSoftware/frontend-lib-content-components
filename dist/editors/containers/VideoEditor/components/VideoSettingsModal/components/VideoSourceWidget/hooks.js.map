{"version":3,"file":"hooks.js","names":["_react","_interopRequireDefault","require","_redux","_api","requests","_interopRequireWildcard","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","_typeof","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","TypeError","_i","Symbol","iterator","_s","_e","_x","_r","_arr","_n","_d","next","done","push","value","length","err","Array","isArray","_toConsumableArray","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","o","minLen","_arrayLikeToArray","n","toString","slice","constructor","name","from","test","iter","len","arr2","state","exports","showVideoIdChangeAlert","args","React","useState","sourceHooks","_ref","dispatch","previousVideoId","setAlert","updateVideoURL","e","videoId","videoUrl","target","actions","video","updateField","videoSource","youTubeId","parseYoutubeId","checkTranscriptsForImport","onSuccess","response","data","command","allowTranscriptImport","updateVideoId","updatedVideoId","fallbackHooks","_ref2","fallbackVideos","addFallbackVideo","concat","deleteFallbackVideo","updatedFallbackVideos","splice","indexOf","videoIdChangeAlert","_state$showVideoIdCha","_state$showVideoIdCha2","setShowVideoIdChangeAlert","show","dismiss","_default"],"sources":["../../../../../../../../src/editors/containers/VideoEditor/components/VideoSettingsModal/components/VideoSourceWidget/hooks.jsx"],"sourcesContent":["import React from 'react';\nimport { actions } from '../../../../../../data/redux';\nimport { parseYoutubeId } from '../../../../../../data/services/cms/api';\nimport * as requests from '../../../../../../data/redux/thunkActions/requests';\n\nexport const state = {\n  showVideoIdChangeAlert: (args) => React.useState(args),\n};\n\nexport const sourceHooks = ({ dispatch, previousVideoId, setAlert }) => ({\n  updateVideoURL: (e, videoId) => {\n    const videoUrl = e.target.value;\n    dispatch(actions.video.updateField({ videoSource: videoUrl }));\n\n    const youTubeId = parseYoutubeId(videoUrl);\n    if (youTubeId) {\n      dispatch(requests.checkTranscriptsForImport({\n        videoId,\n        youTubeId,\n        onSuccess: (response) => {\n          if (response.data.command === 'import') {\n            dispatch(actions.video.updateField({\n              allowTranscriptImport: true,\n            }));\n          }\n        },\n      }));\n    }\n  },\n  updateVideoId: (e) => {\n    const updatedVideoId = e.target.value;\n    if (previousVideoId !== updatedVideoId && updatedVideoId) {\n      setAlert();\n    }\n    dispatch(actions.video.updateField({ videoId: updatedVideoId }));\n  },\n});\n\nexport const fallbackHooks = ({ fallbackVideos, dispatch }) => ({\n  addFallbackVideo: () => dispatch(actions.video.updateField({ fallbackVideos: [...fallbackVideos, ''] })),\n  deleteFallbackVideo: (videoUrl) => {\n    const updatedFallbackVideos = fallbackVideos.splice(fallbackVideos.indexOf(videoUrl), 1);\n    dispatch(actions.video.updateField({ fallbackVideos: updatedFallbackVideos }));\n  },\n});\n\nexport const videoIdChangeAlert = () => {\n  const [showVideoIdChangeAlert, setShowVideoIdChangeAlert] = state.showVideoIdChangeAlert(false);\n  return {\n    videoIdChangeAlert: {\n      show: showVideoIdChangeAlert,\n      set: () => setShowVideoIdChangeAlert(true),\n      dismiss: () => setShowVideoIdChangeAlert(false),\n    },\n  };\n};\n\nexport default {\n  videoIdChangeAlert,\n  sourceHooks,\n  fallbackHooks,\n};\n"],"mappings":";;;;;;;AAAA,IAAAA,MAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,MAAA,GAAAD,OAAA;AACA,IAAAE,IAAA,GAAAF,OAAA;AACA,IAAAG,QAAA,GAAAC,uBAAA,CAAAJ,OAAA;AAA+E,SAAAK,yBAAAC,WAAA,eAAAC,OAAA,kCAAAC,iBAAA,OAAAD,OAAA,QAAAE,gBAAA,OAAAF,OAAA,YAAAF,wBAAA,YAAAA,yBAAAC,WAAA,WAAAA,WAAA,GAAAG,gBAAA,GAAAD,iBAAA,KAAAF,WAAA;AAAA,SAAAF,wBAAAM,GAAA,EAAAJ,WAAA,SAAAA,WAAA,IAAAI,GAAA,IAAAA,GAAA,CAAAC,UAAA,WAAAD,GAAA,QAAAA,GAAA,aAAAE,OAAA,CAAAF,GAAA,yBAAAA,GAAA,uCAAAA,GAAA,UAAAG,KAAA,GAAAR,wBAAA,CAAAC,WAAA,OAAAO,KAAA,IAAAA,KAAA,CAAAC,GAAA,CAAAJ,GAAA,YAAAG,KAAA,CAAAE,GAAA,CAAAL,GAAA,SAAAM,MAAA,WAAAC,qBAAA,GAAAC,MAAA,CAAAC,cAAA,IAAAD,MAAA,CAAAE,wBAAA,WAAAC,GAAA,IAAAX,GAAA,QAAAW,GAAA,kBAAAH,MAAA,CAAAI,SAAA,CAAAC,cAAA,CAAAC,IAAA,CAAAd,GAAA,EAAAW,GAAA,SAAAI,IAAA,GAAAR,qBAAA,GAAAC,MAAA,CAAAE,wBAAA,CAAAV,GAAA,EAAAW,GAAA,cAAAI,IAAA,KAAAA,IAAA,CAAAV,GAAA,IAAAU,IAAA,CAAAC,GAAA,KAAAR,MAAA,CAAAC,cAAA,CAAAH,MAAA,EAAAK,GAAA,EAAAI,IAAA,YAAAT,MAAA,CAAAK,GAAA,IAAAX,GAAA,CAAAW,GAAA,SAAAL,MAAA,cAAAN,GAAA,MAAAG,KAAA,IAAAA,KAAA,CAAAa,GAAA,CAAAhB,GAAA,EAAAM,MAAA,YAAAA,MAAA;AAAA,SAAAjB,uBAAAW,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,gBAAAA,GAAA;AAAA,SAAAiB,eAAAC,GAAA,EAAAC,CAAA,WAAAC,eAAA,CAAAF,GAAA,KAAAG,qBAAA,CAAAH,GAAA,EAAAC,CAAA,KAAAG,2BAAA,CAAAJ,GAAA,EAAAC,CAAA,KAAAI,gBAAA;AAAA,SAAAA,iBAAA,cAAAC,SAAA;AAAA,SAAAH,sBAAAH,GAAA,EAAAC,CAAA,QAAAM,EAAA,WAAAP,GAAA,gCAAAQ,MAAA,IAAAR,GAAA,CAAAQ,MAAA,CAAAC,QAAA,KAAAT,GAAA,4BAAAO,EAAA,QAAAG,EAAA,EAAAC,EAAA,EAAAC,EAAA,EAAAC,EAAA,EAAAC,IAAA,OAAAC,EAAA,OAAAC,EAAA,iBAAAJ,EAAA,IAAAL,EAAA,GAAAA,EAAA,CAAAX,IAAA,CAAAI,GAAA,GAAAiB,IAAA,QAAAhB,CAAA,QAAAX,MAAA,CAAAiB,EAAA,MAAAA,EAAA,UAAAQ,EAAA,uBAAAA,EAAA,IAAAL,EAAA,GAAAE,EAAA,CAAAhB,IAAA,CAAAW,EAAA,GAAAW,IAAA,MAAAJ,IAAA,CAAAK,IAAA,CAAAT,EAAA,CAAAU,KAAA,GAAAN,IAAA,CAAAO,MAAA,KAAApB,CAAA,GAAAc,EAAA,iBAAAO,GAAA,IAAAN,EAAA,OAAAL,EAAA,GAAAW,GAAA,yBAAAP,EAAA,YAAAR,EAAA,eAAAM,EAAA,GAAAN,EAAA,cAAAjB,MAAA,CAAAuB,EAAA,MAAAA,EAAA,2BAAAG,EAAA,QAAAL,EAAA,aAAAG,IAAA;AAAA,SAAAZ,gBAAAF,GAAA,QAAAuB,KAAA,CAAAC,OAAA,CAAAxB,GAAA,UAAAA,GAAA;AAAA,SAAAyB,mBAAAzB,GAAA,WAAA0B,kBAAA,CAAA1B,GAAA,KAAA2B,gBAAA,CAAA3B,GAAA,KAAAI,2BAAA,CAAAJ,GAAA,KAAA4B,kBAAA;AAAA,SAAAA,mBAAA,cAAAtB,SAAA;AAAA,SAAAF,4BAAAyB,CAAA,EAAAC,MAAA,SAAAD,CAAA,qBAAAA,CAAA,sBAAAE,iBAAA,CAAAF,CAAA,EAAAC,MAAA,OAAAE,CAAA,GAAA1C,MAAA,CAAAI,SAAA,CAAAuC,QAAA,CAAArC,IAAA,CAAAiC,CAAA,EAAAK,KAAA,aAAAF,CAAA,iBAAAH,CAAA,CAAAM,WAAA,EAAAH,CAAA,GAAAH,CAAA,CAAAM,WAAA,CAAAC,IAAA,MAAAJ,CAAA,cAAAA,CAAA,mBAAAT,KAAA,CAAAc,IAAA,CAAAR,CAAA,OAAAG,CAAA,+DAAAM,IAAA,CAAAN,CAAA,UAAAD,iBAAA,CAAAF,CAAA,EAAAC,MAAA;AAAA,SAAAH,iBAAAY,IAAA,eAAA/B,MAAA,oBAAA+B,IAAA,CAAA/B,MAAA,CAAAC,QAAA,aAAA8B,IAAA,+BAAAhB,KAAA,CAAAc,IAAA,CAAAE,IAAA;AAAA,SAAAb,mBAAA1B,GAAA,QAAAuB,KAAA,CAAAC,OAAA,CAAAxB,GAAA,UAAA+B,iBAAA,CAAA/B,GAAA;AAAA,SAAA+B,kBAAA/B,GAAA,EAAAwC,GAAA,QAAAA,GAAA,YAAAA,GAAA,GAAAxC,GAAA,CAAAqB,MAAA,EAAAmB,GAAA,GAAAxC,GAAA,CAAAqB,MAAA,WAAApB,CAAA,MAAAwC,IAAA,OAAAlB,KAAA,CAAAiB,GAAA,GAAAvC,CAAA,GAAAuC,GAAA,EAAAvC,CAAA,IAAAwC,IAAA,CAAAxC,CAAA,IAAAD,GAAA,CAAAC,CAAA,UAAAwC,IAAA;AAExE,IAAMC,KAAK,GAAAC,OAAA,CAAAD,KAAA,GAAG;EACnBE,sBAAsB,EAAE,SAAAA,uBAACC,IAAI;IAAA,OAAKC,iBAAK,CAACC,QAAQ,CAACF,IAAI,CAAC;EAAA;AACxD,CAAC;AAEM,IAAMG,WAAW,GAAAL,OAAA,CAAAK,WAAA,GAAG,SAAdA,WAAWA,CAAAC,IAAA;EAAA,IAAMC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;IAAEC,eAAe,GAAAF,IAAA,CAAfE,eAAe;IAAEC,QAAQ,GAAAH,IAAA,CAARG,QAAQ;EAAA,OAAQ;IACvEC,cAAc,EAAE,SAAAA,eAACC,CAAC,EAAEC,OAAO,EAAK;MAC9B,IAAMC,QAAQ,GAAGF,CAAC,CAACG,MAAM,CAACrC,KAAK;MAC/B8B,QAAQ,CAACQ,cAAO,CAACC,KAAK,CAACC,WAAW,CAAC;QAAEC,WAAW,EAAEL;MAAS,CAAC,CAAC,CAAC;MAE9D,IAAMM,SAAS,GAAG,IAAAC,mBAAc,EAACP,QAAQ,CAAC;MAC1C,IAAIM,SAAS,EAAE;QACbZ,QAAQ,CAAC3E,QAAQ,CAACyF,yBAAyB,CAAC;UAC1CT,OAAO,EAAPA,OAAO;UACPO,SAAS,EAATA,SAAS;UACTG,SAAS,EAAE,SAAAA,UAACC,QAAQ,EAAK;YACvB,IAAIA,QAAQ,CAACC,IAAI,CAACC,OAAO,KAAK,QAAQ,EAAE;cACtClB,QAAQ,CAACQ,cAAO,CAACC,KAAK,CAACC,WAAW,CAAC;gBACjCS,qBAAqB,EAAE;cACzB,CAAC,CAAC,CAAC;YACL;UACF;QACF,CAAC,CAAC,CAAC;MACL;IACF,CAAC;IACDC,aAAa,EAAE,SAAAA,cAAChB,CAAC,EAAK;MACpB,IAAMiB,cAAc,GAAGjB,CAAC,CAACG,MAAM,CAACrC,KAAK;MACrC,IAAI+B,eAAe,KAAKoB,cAAc,IAAIA,cAAc,EAAE;QACxDnB,QAAQ,CAAC,CAAC;MACZ;MACAF,QAAQ,CAACQ,cAAO,CAACC,KAAK,CAACC,WAAW,CAAC;QAAEL,OAAO,EAAEgB;MAAe,CAAC,CAAC,CAAC;IAClE;EACF,CAAC;AAAA,CAAC;AAEK,IAAMC,aAAa,GAAA7B,OAAA,CAAA6B,aAAA,GAAG,SAAhBA,aAAaA,CAAAC,KAAA;EAAA,IAAMC,cAAc,GAAAD,KAAA,CAAdC,cAAc;IAAExB,QAAQ,GAAAuB,KAAA,CAARvB,QAAQ;EAAA,OAAQ;IAC9DyB,gBAAgB,EAAE,SAAAA,iBAAA;MAAA,OAAMzB,QAAQ,CAACQ,cAAO,CAACC,KAAK,CAACC,WAAW,CAAC;QAAEc,cAAc,KAAAE,MAAA,CAAAnD,kBAAA,CAAMiD,cAAc,IAAE,EAAE;MAAE,CAAC,CAAC,CAAC;IAAA;IACxGG,mBAAmB,EAAE,SAAAA,oBAACrB,QAAQ,EAAK;MACjC,IAAMsB,qBAAqB,GAAGJ,cAAc,CAACK,MAAM,CAACL,cAAc,CAACM,OAAO,CAACxB,QAAQ,CAAC,EAAE,CAAC,CAAC;MACxFN,QAAQ,CAACQ,cAAO,CAACC,KAAK,CAACC,WAAW,CAAC;QAAEc,cAAc,EAAEI;MAAsB,CAAC,CAAC,CAAC;IAChF;EACF,CAAC;AAAA,CAAC;AAEK,IAAMG,kBAAkB,GAAAtC,OAAA,CAAAsC,kBAAA,GAAG,SAArBA,kBAAkBA,CAAA,EAAS;EACtC,IAAAC,qBAAA,GAA4DxC,KAAK,CAACE,sBAAsB,CAAC,KAAK,CAAC;IAAAuC,sBAAA,GAAApF,cAAA,CAAAmF,qBAAA;IAAxFtC,sBAAsB,GAAAuC,sBAAA;IAAEC,yBAAyB,GAAAD,sBAAA;EACxD,OAAO;IACLF,kBAAkB,EAAE;MAClBI,IAAI,EAAEzC,sBAAsB;MAC5B9C,GAAG,EAAE,SAAAA,IAAA;QAAA,OAAMsF,yBAAyB,CAAC,IAAI,CAAC;MAAA;MAC1CE,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAMF,yBAAyB,CAAC,KAAK,CAAC;MAAA;IACjD;EACF,CAAC;AACH,CAAC;AAAC,IAAAG,QAAA,GAAA5C,OAAA,cAEa;EACbsC,kBAAkB,EAAlBA,kBAAkB;EAClBjC,WAAW,EAAXA,WAAW;EACXwB,aAAa,EAAbA;AACF,CAAC"}