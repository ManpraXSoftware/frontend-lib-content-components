{"version":3,"file":"hooks.test.js","names":["_react","_interopRequireDefault","require","hooks","_interopRequireWildcard","_messages","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","_typeof","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","Symbol","iterator","constructor","_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","TypeError","o","minLen","_arrayLikeToArray","n","toString","slice","name","Array","from","test","len","length","arr2","_i","_s","_e","_x","_r","_arr","_n","_d","next","done","push","value","err","isArray","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","enumerable","apply","_objectSpread","target","arguments","source","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","_toPropertyKey","configurable","writable","arg","_toPrimitive","String","input","hint","prim","toPrimitive","undefined","res","Number","jest","mock","updateState","fn","requireActual","useState","val","state","newVal","useCallback","cb","prereqs","useEffect","testMethod","intl","formatMessage","h","m","s","durationPairs","trickyDurations","props","e","describe","afterEach","restoreAllMocks","duration","startTime","stopTime","updateField","beforeEach","durationWidget","expect","React","toHaveBeenCalled","calls","toEqual","unsavedDuration","durationString","spyOn","mockImplementation","onBlur","updateDuration","onChange","onKeyDown","getTotalLabel","subtitle","messages","fullVideoLength","startsAt","total","custom","it","testDuration","other","durationStringFromValue","badChecks","_ref","_ref2","dur","testValidIndex","testStopIndex","testValidDuration","testValidValue","testInvalidDuration","setDuration","setUnsavedDuration","index","inputString","toHaveBeenCalledWith","onDurationChange","document","activeElement","selectionStart","event","onDurationKeyDown","blurSpy","valueFromDuration","_ref3","_ref4","_ref5","_ref6"],"sources":["../../../../../../../../src/editors/containers/VideoEditor/components/VideoSettingsModal/components/DurationWidget/hooks.test.js"],"sourcesContent":["import React from 'react';\n\nimport * as hooks from './hooks';\nimport messages from '../messages';\n\njest.mock('react', () => {\n  const updateState = jest.fn();\n  return {\n    ...jest.requireActual('react'),\n    updateState,\n    useState: jest.fn(val => ([{ state: val }, (newVal) => updateState({ val, newVal })])),\n    useCallback: (cb, prereqs) => ({ useCallback: { cb, prereqs } }),\n    useEffect: jest.fn(),\n  };\n});\n\nlet testMethod;\nconst intl = {\n  formatMessage: jest.fn(val => val),\n};\n\nconst [h, m, s] = [3600000, 60000, 1000];\nconst durationPairs = [\n  [0, '00:00:00'],\n  [5000, '00:00:05'],\n  [60000, '00:01:00'],\n  [3600000, '01:00:00'],\n  [3665000, '01:01:05'],\n];\nconst trickyDurations = [\n  ['10:00', 600000],\n  ['23', 23000],\n  ['99:99:99', 99 * (m + s + h)],\n  ['23:42:81', 23 * h + 42 * m + 81 * s],\n];\nlet props;\nconst e = {\n  target: {\n    value: 'vAlUE',\n  },\n};\n\ndescribe('Video Settings DurationWidget hooks', () => {\n  afterEach(() => {\n    jest.restoreAllMocks();\n  });\n  describe('durationWidget', () => {\n    const duration = {\n      startTime: '00:00:00',\n      stopTime: '00:00:10',\n    };\n    const updateField = jest.fn();\n    beforeEach(() => {\n      testMethod = hooks.durationWidget({ duration, updateField });\n    });\n    describe('behavior', () => {\n      describe('initialization', () => {\n        test('useEffect memoized on duration', () => {\n          hooks.durationWidget({ duration, updateField });\n          expect(React.useEffect).toHaveBeenCalled();\n          expect(React.useEffect.mock.calls[0][1]).toEqual([duration]);\n        });\n        test('calls setUnsavedDuration with durationString(duration)', () => {\n          hooks.durationWidget({ duration, updateField });\n          React.useEffect.mock.calls[0][0]();\n          expect(React.updateState).toHaveBeenCalled();\n        });\n      });\n    });\n    describe('returns', () => {\n      testMethod = hooks.durationWidget({ duration, updateField });\n      afterEach(() => {\n        jest.restoreAllMocks();\n      });\n      describe('unsavedDuration, defaulted to duration', () => {\n        expect(testMethod.unsavedDuration).toEqual({ state: hooks.durationString(duration) });\n      });\n      describe('onBlur, calls updateDuration', () => {\n        jest.spyOn(hooks, 'updateDuration').mockImplementation(jest.fn());\n        testMethod.onBlur('IndEX')(e);\n        expect(hooks.updateDuration).toHaveBeenCalled();\n      });\n      describe('onChange', () => {\n        testMethod.onChange('IndEX')(e);\n        expect(React.updateState).toHaveBeenCalled();\n      });\n      describe('onKeyDown', () => {\n        testMethod.onKeyDown('iNDex')(e);\n        expect(React.updateState).toHaveBeenCalled();\n      });\n      describe('getTotalLabel', () => {\n        describe('returns fullVideoLength message when no startTime and no stop Time are set', () => {\n          expect(testMethod.getTotalLabel({\n            durationString: {},\n            subtitle: true,\n            intl,\n          })).toEqual(messages.fullVideoLength);\n        });\n        describe('returns startAt message for subtitle when only startTime is set', () => {\n          expect(testMethod.getTotalLabel({\n            durationString: {\n              startTime: '00:00:00',\n            },\n            subtitle: true,\n            intl,\n          })).toEqual(messages.startsAt);\n        });\n        describe('returns null for widget (not subtitle) when there only startTime is set', () => {\n          expect(testMethod.getTotalLabel({\n            durationString: {\n              startTime: '00:00:00',\n            },\n            subtitle: false,\n            intl,\n          })).toEqual(null);\n        });\n        describe('returns total message when at least stopTime is set', () => {\n          expect(testMethod.getTotalLabel({\n            durationString: {\n              startTime: '00:00:00',\n              stopTime: '00:00:10',\n            },\n            subtitle: false,\n            intl,\n          })).toEqual(messages.total);\n        });\n        describe('returns custom message when at least stopTime is set and subtitle is true', () => {\n          expect(testMethod.getTotalLabel({\n            durationString: {\n              startTime: '00:00:00',\n              stopTime: '00:00:10',\n            },\n            subtitle: true,\n            intl,\n          })).toEqual(messages.custom);\n        });\n      });\n    });\n  });\n  describe('durationString', () => {\n    beforeEach(() => {\n      testMethod = hooks.durationString;\n    });\n    it('returns an object that maps durationStringFromValue to the passed duration keys', () => {\n      const testDuration = { startTime: 1000, stopTime: 2000, other: 'values' };\n      expect(testMethod(testDuration)).toEqual({\n        startTime: '00:00:01',\n        stopTime: '00:00:02',\n      });\n    });\n  });\n  describe('durationStringFromValue', () => {\n    beforeEach(() => {\n      testMethod = hooks.durationStringFromValue;\n    });\n    it('returns 00:00:00 if given a bad value', () => {\n      const badChecks = ['a', '', null, -1];\n      badChecks.forEach(val => expect(testMethod(val)).toEqual('00:00:00'));\n    });\n    it('translates milliseconds into hh:mm:ss format', () => {\n      durationPairs.forEach(\n        ([val, dur]) => expect(testMethod(val)).toEqual(dur),\n      );\n    });\n  });\n  describe('updateDuration', () => {\n    const testValidIndex = 'startTime';\n    const testStopIndex = 'stopTime';\n    const testValidDuration = '00:00:00';\n    const testValidValue = 0;\n    const testInvalidDuration = 'abc';\n    beforeEach(() => {\n      testMethod = hooks.updateDuration;\n      props = {\n        duration: { startTime: 23000, stopTime: 600000 },\n        unsavedDuration: { startTime: '00:00:23', stopTime: '00:10:00' },\n        setDuration: jest.fn(),\n        setUnsavedDuration: jest.fn(),\n        index: 'startTime',\n        inputString: '01:23:45',\n      };\n    });\n    describe('if the passed durationString is valid', () => {\n      it('sets the unsavedDuration to updated strings and duration to new timestamp value', () => {\n        testMethod({\n          ...props,\n          index: testValidIndex,\n          inputString: testValidDuration,\n        });\n        expect(props.setUnsavedDuration).toHaveBeenCalledWith({\n          ...props.unsavedDuration,\n          [testValidIndex]: testValidDuration,\n        });\n        expect(props.setDuration).toHaveBeenCalledWith({\n          ...props.duration,\n          [testValidIndex]: testValidValue,\n        });\n      });\n    });\n    describe('if the passed durationString is not valid', () => {\n      it('updates unsavedDuration values to 0 (the default)', () => {\n        testMethod({\n          ...props,\n          index: testValidIndex,\n          inputString: testInvalidDuration,\n        });\n        expect(props.setUnsavedDuration).toHaveBeenCalledWith({\n          ...props.unsavedDuration,\n          [testValidIndex]: testValidDuration,\n        });\n        expect(props.setDuration).toHaveBeenCalledWith({\n          ...props.duration,\n          [testValidIndex]: testValidValue,\n        });\n      });\n    });\n    describe('if the passed startTime is after (or equal to) the stored non-zero stopTime', () => {\n      it('updates unsavedDuration startTime values to 1 second before stopTime', () => {\n        testMethod({\n          ...props,\n          index: testValidIndex,\n          inputString: '00:10:00',\n        });\n        expect(props.setUnsavedDuration).toHaveBeenCalledWith({\n          ...props.unsavedDuration,\n          [testValidIndex]: '00:09:59',\n        });\n        expect(props.setDuration).toHaveBeenCalledWith({\n          ...props.duration,\n          [testValidIndex]: 599000,\n        });\n      });\n    });\n    describe('if the passed stopTime is before (or equal to) the stored startTime', () => {\n      it('updates unsavedDuration stopTime values to 1 second after startTime', () => {\n        testMethod({\n          ...props,\n          index: testStopIndex,\n          inputString: '00:00:22',\n        });\n        expect(props.setUnsavedDuration).toHaveBeenCalledWith({\n          ...props.unsavedDuration,\n          [testStopIndex]: '00:00:24',\n        });\n        expect(props.setDuration).toHaveBeenCalledWith({\n          ...props.duration,\n          [testStopIndex]: 24000,\n        });\n      });\n    });\n  });\n  describe('onDurationChange', () => {\n    beforeEach(() => {\n      props = {\n        duration: { startTime: '00:00:00' },\n        index: 'startTime',\n        val: 'vAl',\n      };\n      testMethod = hooks.onDurationChange;\n    });\n    it('returns duration with no change if duration[index] does not match HH:MM:SS format', () => {\n      const badChecks = [\n        'ab:cd:ef', // non-digit characters\n        '12:34:567', // characters past max length\n      ];\n      badChecks.forEach(val => expect(testMethod(props.duration, props.index, val)).toEqual(props.duration));\n    });\n    it('returns duration with an added \\':\\' after 2 characters when caret is at end', () => {\n      props.duration = { startTime: '0' };\n      props.val = '00';\n      document.activeElement.selectionStart = props.duration[props.index].length + 1;\n      expect(testMethod(props.duration, props.index, props.val)).toEqual({ startTime: '00:' });\n    });\n    it('returns duration with an added \\':\\' after 5 characters when caret is at end', () => {\n      props.duration = { startTime: '00:0' };\n      props.val = '00:00';\n      document.activeElement.selectionStart = props.duration[props.index].length + 1;\n      expect(testMethod(props.duration, props.index, props.val)).toEqual({ startTime: '00:00:' });\n    });\n  });\n  describe('onDurationKeyDown', () => {\n    beforeEach(() => {\n      props = {\n        duration: { startTime: '00:00:00' },\n        index: 'startTime',\n        event: 'eVeNt',\n      };\n      testMethod = hooks.onDurationKeyDown;\n    });\n    it('enter event: calls blur()', () => {\n      props.event = { key: 'Enter' };\n      const blurSpy = jest.spyOn(document.activeElement, 'blur');\n      testMethod(props.duration, props.index, props.event);\n      expect(blurSpy).toHaveBeenCalled();\n    });\n    it('backspace event: returns duration with deleted end character when that character is \\':\\' and caret is at end', () => {\n      props.duration = { startTime: '00:' };\n      props.event = { key: 'Backspace' };\n      document.activeElement.selectionStart = props.duration[props.index].length;\n      expect(testMethod(props.duration, props.index, props.event)).toEqual({ startTime: '00' });\n    });\n  });\n  describe('valueFromDuration', () => {\n    beforeEach(() => {\n      testMethod = hooks.valueFromDuration;\n    });\n    it('returns 0 if given a bad duration string', () => {\n      const badChecks = ['a', '00:00:1f', '0adg:00:04'];\n      badChecks.forEach(dur => expect(testMethod(dur)).toEqual(0));\n    });\n    it('returns simple durations', () => {\n      durationPairs.forEach(([val, dur]) => expect(testMethod(dur)).toEqual(val));\n    });\n    it('returns tricky durations, prepending zeros and expanding out sections', () => {\n      trickyDurations.forEach(([dur, val]) => expect(testMethod(dur)).toEqual(val));\n    });\n  });\n});\n"],"mappings":"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"}