{"version":3,"file":"SettingsParser.js","names":["_lodashEs","_interopRequireDefault","require","_problem","obj","__esModule","_typeof","Symbol","iterator","constructor","prototype","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","value","_toPropertyKey","configurable","writable","arg","_toPrimitive","String","input","hint","prim","toPrimitive","undefined","res","call","TypeError","Number","popuplateItem","exports","parentObject","itemName","statekey","metadata","parent","item","_","get","isNil","parseScoringSettings","scoring","attempts","isEmpty","isNaN","number","unlimited","parseShowAnswer","showAnswer","showAnswerType","ShowAnswerTypes","on","parseSettings","settings","randomizationType","values","RandomizationTypesKeys","includes"],"sources":["../../../../../src/editors/containers/ProblemEditor/data/SettingsParser.js"],"sourcesContent":["import _ from 'lodash-es';\n\nimport { ShowAnswerTypes, RandomizationTypesKeys } from '../../../data/constants/problem';\n\nexport const popuplateItem = (parentObject, itemName, statekey, metadata) => {\n  let parent = parentObject;\n  const item = _.get(metadata, itemName, null);\n  if (!_.isNil(item)) {\n    parent = { ...parentObject, [statekey]: item };\n  }\n  return parent;\n};\n\nexport const parseScoringSettings = (metadata) => {\n  let scoring = {};\n\n  let attempts = popuplateItem({}, 'max_attempts', 'number', metadata);\n  if (_.isEmpty(attempts) || _.isNaN(attempts.number)) {\n    attempts = { unlimited: true, number: '' };\n  } else {\n    attempts.unlimited = false;\n    if (attempts.number < 0) {\n      attempts.number = 0;\n    }\n  }\n  scoring = { ...scoring, attempts };\n\n  scoring = popuplateItem(scoring, 'weight', 'weight', metadata);\n\n  return scoring;\n};\n\nexport const parseShowAnswer = (metadata) => {\n  let showAnswer = {};\n\n  const showAnswerType = _.get(metadata, 'showanswer', {});\n  if (!_.isNil(showAnswerType) && showAnswerType in ShowAnswerTypes) {\n    showAnswer = { ...showAnswer, on: showAnswerType };\n  }\n\n  showAnswer = popuplateItem(showAnswer, 'attempts_before_showanswer_button', 'afterAttempts', metadata);\n\n  return showAnswer;\n};\n\nexport const parseSettings = (metadata) => {\n  let settings = {};\n\n  if (_.isNil(metadata) || _.isEmpty(metadata)) {\n    return settings;\n  }\n\n  settings = popuplateItem(settings, 'matlab_api_key', 'matLabApiKey', metadata);\n\n  const scoring = parseScoringSettings(metadata);\n  if (!_.isEmpty(scoring)) {\n    settings = { ...settings, scoring };\n  }\n\n  const showAnswer = parseShowAnswer(metadata);\n  if (!_.isEmpty(showAnswer)) {\n    settings = { ...settings, showAnswer };\n  }\n\n  const randomizationType = _.get(metadata, 'rerandomize', {});\n  if (!_.isEmpty(randomizationType) && Object.values(RandomizationTypesKeys).includes(randomizationType)) {\n    settings = popuplateItem(settings, 'rerandomize', 'randomization', metadata);\n  }\n\n  settings = popuplateItem(settings, 'show_reset_button', 'showResetButton', metadata);\n  settings = popuplateItem(settings, 'submission_wait_seconds', 'timeBetween', metadata);\n  return settings;\n};\n"],"mappings":"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"}