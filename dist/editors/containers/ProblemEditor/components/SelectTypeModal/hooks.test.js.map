{"version":3,"file":"hooks.test.js","names":["_react","_interopRequireDefault","require","_testUtils","_module","_interopRequireWildcard","_problem","_OLXParser","_excluded","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","_typeof","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","Symbol","iterator","constructor","_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","TypeError","o","minLen","_arrayLikeToArray","n","toString","slice","name","Array","from","test","len","length","arr2","_i","_s","_e","_x","_r","_arr","_n","_d","next","done","push","value","err","isArray","_objectWithoutProperties","source","excluded","target","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","indexOf","propertyIsEnumerable","sourceKeys","keys","ownKeys","object","enumerableOnly","symbols","filter","sym","enumerable","apply","_objectSpread","arguments","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","_toPropertyKey","configurable","writable","arg","_toPrimitive","String","input","hint","prim","toPrimitive","undefined","res","Number","jest","mock","requireActual","useState","val","useEffect","fn","state","MockUseState","module","mockUpdateField","mockName","mockSelected","mockAdvancedSelected","mockSetSelected","mocksetBlockTitle","hook","describe","beforeEach","afterEach","restore","clearAllMocks","selectHooks","expect","selected","toEqual","ProblemTypeKeys","SINGLESELECT","expectedArg","mockVal","setSelected","setState","toHaveBeenCalledWith","onSelect","updateField","setBlockTitle","problemType","ADVANCED","rawOLX","AdvanceProblems","template","title","testOlXParser","OLXParser","ProblemTypes","_testOlXParser$getPar","getParsedOLXData","settings","testState","document","body","innerHTML","mockKeyUp","KeyboardEvent","mockKeyDown","cb","prereqs","useArrowNav","_React$useEffect$mock","React","calls","toStrictEqual","dispatchEvent","TEXTINPUT","MULTISELECT","_React$useEffect$mock2","DROPDOWN","_React$useEffect$mock3","NUMERIC","_React$useEffect$mock4","_React$useEffect$mock5"],"sources":["../../../../../../src/editors/containers/ProblemEditor/components/SelectTypeModal/hooks.test.js"],"sourcesContent":["/* eslint-disable prefer-destructuring */\nimport React from 'react';\nimport { MockUseState } from '../../../../../testUtils';\nimport * as module from './hooks';\nimport { AdvanceProblems, ProblemTypeKeys, ProblemTypes } from '../../../../data/constants/problem';\nimport { OLXParser } from '../../data/OLXParser';\n\njest.mock('react', () => ({\n  ...jest.requireActual('react'),\n  useState: (val) => ({ useState: val }),\n  useEffect: jest.fn(),\n}));\n\nconst state = new MockUseState(module);\nconst mockUpdateField = jest.fn().mockName('updateField');\nconst mockSelected = 'multiplechoiceresponse';\nconst mockAdvancedSelected = 'circuitschematic';\nconst mockSetSelected = jest.fn().mockName('setSelected');\nconst mocksetBlockTitle = jest.fn().mockName('setBlockTitle');\n\nlet hook;\n\ndescribe('SelectTypeModal hooks', () => {\n  beforeEach(() => {\n    state.mock();\n  });\n  afterEach(() => {\n    state.restore();\n    jest.clearAllMocks();\n  });\n\n  describe('selectHooks', () => {\n    beforeEach(() => {\n      hook = module.selectHooks();\n    });\n    test('selected defaults to SINGLESELECT', () => {\n      expect(hook.selected).toEqual(ProblemTypeKeys.SINGLESELECT);\n    });\n    test('setSelected sets state as expected', () => {\n      const expectedArg = 'neWvAl';\n      state.mockVal(state.keys.selected, 'mOcKvAl');\n      hook.setSelected(expectedArg);\n      expect(state.setState.selected).toHaveBeenCalledWith(expectedArg);\n    });\n  });\n\n  describe('onSelect', () => {\n    test('updateField is called with selected templated if selected is an Advanced Problem', () => {\n      module.onSelect({\n        selected: mockAdvancedSelected,\n        updateField: mockUpdateField,\n        setBlockTitle: mocksetBlockTitle,\n      })();\n      expect(mockUpdateField).toHaveBeenCalledWith({\n        problemType: ProblemTypeKeys.ADVANCED,\n        rawOLX: AdvanceProblems[mockAdvancedSelected].template,\n      });\n      expect(mocksetBlockTitle).toHaveBeenCalledWith(AdvanceProblems[mockAdvancedSelected].title);\n    });\n    test('updateField is called with selected on visual propblems', () => {\n      module.onSelect({ selected: mockSelected, updateField: mockUpdateField, setBlockTitle: mocksetBlockTitle })();\n      const testOlXParser = new OLXParser(ProblemTypes[mockSelected].template);\n      const { settings, ...testState } = testOlXParser.getParsedOLXData();\n      expect(mockUpdateField).toHaveBeenCalledWith({\n        ...testState,\n        rawOLX: ProblemTypes[mockSelected].template,\n      });\n      expect(mocksetBlockTitle).toHaveBeenCalledWith(ProblemTypes[mockSelected].title);\n    });\n  });\n\n  describe('useArrowNav', () => {\n    document.body.innerHTML = `\n      <div id=\"multiplechoiceresponse\" />\n      <div id=\"choiceresponse\" />\n      <div id=\"optionresponse\" />\n      <div id=\"numericalresponse\" />\n      <div id=\"stringresponse\" />\n    `;\n    const mockKeyUp = new KeyboardEvent('keydown', { key: 'ArrowUp' });\n    const mockKeyDown = new KeyboardEvent('keydown', { key: 'ArrowDown' });\n    let cb;\n    let prereqs;\n\n    describe('SINGLESELECT', () => {\n      beforeEach(() => {\n        module.useArrowNav(ProblemTypeKeys.SINGLESELECT, mockSetSelected);\n        [cb, prereqs] = React.useEffect.mock.calls[0];\n        cb();\n      });\n      test('pressing up arrow sets MULTISELECT', () => {\n        expect(React.useEffect.mock.calls.length).toEqual(1);\n        expect(prereqs).toStrictEqual([ProblemTypeKeys.SINGLESELECT, mockSetSelected]);\n        document.dispatchEvent(mockKeyUp);\n        expect(mockSetSelected).toHaveBeenCalledWith(ProblemTypeKeys.TEXTINPUT);\n      });\n      test('pressing down arrow sets MULTISELECT', () => {\n        expect(React.useEffect.mock.calls.length).toEqual(1);\n        expect(prereqs).toStrictEqual([ProblemTypeKeys.SINGLESELECT, mockSetSelected]);\n        document.dispatchEvent(mockKeyDown);\n        expect(mockSetSelected).toHaveBeenCalledWith(ProblemTypeKeys.MULTISELECT);\n      });\n    });\n    describe('MULTISELECT', () => {\n      beforeEach(() => {\n        module.useArrowNav(ProblemTypeKeys.MULTISELECT, mockSetSelected);\n        [cb, prereqs] = React.useEffect.mock.calls[0];\n        cb();\n      });\n      test('pressing up arrow sets SINGLESELECT', () => {\n        expect(React.useEffect.mock.calls.length).toEqual(1);\n        expect(prereqs).toStrictEqual([ProblemTypeKeys.MULTISELECT, mockSetSelected]);\n        document.dispatchEvent(mockKeyUp);\n        expect(mockSetSelected).toHaveBeenCalledWith(ProblemTypeKeys.SINGLESELECT);\n      });\n      test('pressing down arrow sets DROPDOWN', () => {\n        expect(React.useEffect.mock.calls.length).toEqual(1);\n        expect(prereqs).toStrictEqual([ProblemTypeKeys.MULTISELECT, mockSetSelected]);\n        document.dispatchEvent(mockKeyDown);\n        expect(mockSetSelected).toHaveBeenCalledWith(ProblemTypeKeys.DROPDOWN);\n      });\n    });\n    describe('DROPDOWN', () => {\n      beforeEach(() => {\n        module.useArrowNav(ProblemTypeKeys.DROPDOWN, mockSetSelected);\n        [cb, prereqs] = React.useEffect.mock.calls[0];\n        cb();\n      });\n      test('pressing up arrow sets MULTISELECT', () => {\n        expect(React.useEffect.mock.calls.length).toEqual(1);\n        expect(prereqs).toStrictEqual([ProblemTypeKeys.DROPDOWN, mockSetSelected]);\n        document.dispatchEvent(mockKeyUp);\n        expect(mockSetSelected).toHaveBeenCalledWith(ProblemTypeKeys.MULTISELECT);\n      });\n      test('pressing down arrow sets NUMERIC', () => {\n        expect(React.useEffect.mock.calls.length).toEqual(1);\n        expect(prereqs).toStrictEqual([ProblemTypeKeys.DROPDOWN, mockSetSelected]);\n        document.dispatchEvent(mockKeyDown);\n        expect(mockSetSelected).toHaveBeenCalledWith(ProblemTypeKeys.NUMERIC);\n      });\n    });\n    describe('NUMERIC', () => {\n      beforeEach(() => {\n        module.useArrowNav(ProblemTypeKeys.NUMERIC, mockSetSelected);\n        [cb, prereqs] = React.useEffect.mock.calls[0];\n        cb();\n      });\n      test('pressing up arrow sets DROPDOWN', () => {\n        expect(React.useEffect.mock.calls.length).toEqual(1);\n        expect(prereqs).toStrictEqual([ProblemTypeKeys.NUMERIC, mockSetSelected]);\n        document.dispatchEvent(mockKeyUp);\n        expect(mockSetSelected).toHaveBeenCalledWith(ProblemTypeKeys.DROPDOWN);\n      });\n      test('pressing down arrow sets TEXTINPUT', () => {\n        expect(React.useEffect.mock.calls.length).toEqual(1);\n        expect(prereqs).toStrictEqual([ProblemTypeKeys.NUMERIC, mockSetSelected]);\n        document.dispatchEvent(mockKeyDown);\n        expect(mockSetSelected).toHaveBeenCalledWith(ProblemTypeKeys.TEXTINPUT);\n      });\n    });\n    describe('TEXTINPUT', () => {\n      beforeEach(() => {\n        module.useArrowNav(ProblemTypeKeys.TEXTINPUT, mockSetSelected);\n        [cb, prereqs] = React.useEffect.mock.calls[0];\n        cb();\n      });\n      test('pressing up arrow sets NUMERIC', () => {\n        expect(React.useEffect.mock.calls.length).toEqual(1);\n        expect(prereqs).toStrictEqual([ProblemTypeKeys.TEXTINPUT, mockSetSelected]);\n        document.dispatchEvent(mockKeyUp);\n        expect(mockSetSelected).toHaveBeenCalledWith(ProblemTypeKeys.NUMERIC);\n      });\n      test('pressing down arrow sets SINGLESELECT', () => {\n        expect(React.useEffect.mock.calls.length).toEqual(1);\n        expect(prereqs).toStrictEqual([ProblemTypeKeys.TEXTINPUT, mockSetSelected]);\n        document.dispatchEvent(mockKeyDown);\n        expect(mockSetSelected).toHaveBeenCalledWith(ProblemTypeKeys.SINGLESELECT);\n      });\n    });\n  });\n});\n"],"mappings":"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"}