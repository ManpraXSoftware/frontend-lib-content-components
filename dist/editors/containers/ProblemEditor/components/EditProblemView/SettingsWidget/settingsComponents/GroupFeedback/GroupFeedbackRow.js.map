{"version":3,"file":"GroupFeedbackRow.js","names":["_react","_interopRequireDefault","require","_i18n","_paragon","_icons","_propTypes","_messages","_jsxRuntime","obj","__esModule","GroupFeedbackRow","exports","_ref","value","handleAnswersSelectedChange","handleFeedbackChange","handleDelete","answers","intl","jsxs","className","children","ActionRow","jsx","Form","Control","feedback","onChange","IconButton","src","DeleteOutline","iconAs","Icon","alt","formatMessage","messages","settingsDeleteIconAltText","onClick","variant","CheckboxSet","Row","map","letter","Checkbox","id","checked","indexOf","isValid","propTypes","PropTypes","arrayOf","shape","correct","bool","string","selectedFeedback","title","unselectedFeedback","isRequired","func","number","intlShape","_default","injectIntl"],"sources":["../../../../../../../../../src/editors/containers/ProblemEditor/components/EditProblemView/SettingsWidget/settingsComponents/GroupFeedback/GroupFeedbackRow.jsx"],"sourcesContent":["import React from 'react';\nimport { injectIntl, intlShape } from '@edx/frontend-platform/i18n';\nimport {\n  ActionRow, Form, Icon, IconButton, Row,\n} from '@edx/paragon';\nimport { DeleteOutline } from '@edx/paragon/icons';\nimport PropTypes from 'prop-types';\nimport messages from '../../messages';\n\nexport const GroupFeedbackRow = ({\n  value,\n  handleAnswersSelectedChange,\n  handleFeedbackChange,\n  handleDelete,\n  answers,\n  // injected\n  intl,\n}) => (\n\n  <div className=\"mb-4\">\n    <ActionRow className=\"mb-2\">\n      <Form.Control\n        value={value.feedback}\n        onChange={handleFeedbackChange}\n      />\n      <div className=\"d-flex flex-row flex-nowrap\">\n        <IconButton\n          src={DeleteOutline}\n          iconAs={Icon}\n          alt={intl.formatMessage(messages.settingsDeleteIconAltText)}\n          onClick={handleDelete}\n          variant=\"primary\"\n        />\n      </div>\n    </ActionRow>\n    <Form.CheckboxSet\n      onChange={handleAnswersSelectedChange}\n      value={value.answers}\n    >\n      <Row className=\"mx-0\">\n        {answers.map((letter) => (\n          <Form.Checkbox\n            className=\"mr-4 mt-1\"\n            value={letter.id}\n            checked={value.answers.indexOf(letter.id)}\n            isValid={value.answers.indexOf(letter.id) >= 0}\n          >{letter.id}\n          </Form.Checkbox>\n        ))}\n      </Row>\n    </Form.CheckboxSet>\n  </div>\n\n);\n\nGroupFeedbackRow.propTypes = {\n  answers: PropTypes.arrayOf(PropTypes.shape({\n    correct: PropTypes.bool,\n    id: PropTypes.string,\n    selectedFeedback: PropTypes.string,\n    title: PropTypes.string,\n    unselectedFeedback: PropTypes.string,\n  })).isRequired,\n  handleAnswersSelectedChange: PropTypes.func.isRequired,\n  handleFeedbackChange: PropTypes.func.isRequired,\n  handleDelete: PropTypes.func.isRequired,\n  value: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    answers: PropTypes.arrayOf(PropTypes.string),\n    feedback: PropTypes.string,\n  }).isRequired,\n  // injected\n  intl: intlShape.isRequired,\n};\n\nexport default injectIntl(GroupFeedbackRow);\n"],"mappings":"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"}