{"version":3,"file":"HintsCard.js","names":["_react","_interopRequireDefault","require","_propTypes","_i18n","_SettingsOption","_problem","_messages","_hooks","_HintRow","_Button","_jsxRuntime","obj","__esModule","_typeof","Symbol","iterator","constructor","prototype","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","value","_toPropertyKey","configurable","writable","arg","_toPrimitive","String","input","hint","prim","toPrimitive","undefined","res","call","TypeError","Number","HintsCard","exports","_ref","hints","problemType","updateSettings","intl","_hintsCardHooks","hintsCardHooks","summary","handleAdd","ProblemTypeKeys","ADVANCED","jsxs","title","formatMessage","messages","hintSettingTitle","message","values","none","hasExpandableTextArea","children","map","jsx","id","hintsRowHooks","className","variant","onClick","size","FormattedMessage","addHintButtonText","propTypes","intlShape","isRequired","PropTypes","arrayOf","shape","string","func","_default","injectIntl"],"sources":["../../../../../../../../src/editors/containers/ProblemEditor/components/EditProblemView/SettingsWidget/settingsComponents/HintsCard.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { injectIntl, FormattedMessage, intlShape } from '@edx/frontend-platform/i18n';\nimport SettingsOption from '../SettingsOption';\nimport { ProblemTypeKeys } from '../../../../../../data/constants/problem';\nimport messages from '../messages';\nimport { hintsCardHooks, hintsRowHooks } from '../hooks';\nimport HintRow from './HintRow';\nimport Button from '../../../../../../sharedComponents/Button';\n\nexport const HintsCard = ({\n  hints,\n  problemType,\n  updateSettings,\n  // inject\n  intl,\n}) => {\n  const { summary, handleAdd } = hintsCardHooks(hints, updateSettings);\n\n  if (problemType === ProblemTypeKeys.ADVANCED) { return null; }\n\n  return (\n    <SettingsOption\n      title={intl.formatMessage(messages.hintSettingTitle)}\n      summary={intl.formatMessage(summary.message, { ...summary.values })}\n      none={!hints.length}\n      hasExpandableTextArea\n    >\n      {hints.map((hint) => (\n        <HintRow\n          key={hint.id}\n          id={hint.id}\n          value={hint.value}\n          {...hintsRowHooks(hint.id, hints, updateSettings)}\n        />\n      ))}\n      <Button\n        className=\"m-0 p-0 font-weight-bold\"\n        variant=\"add\"\n        onClick={handleAdd}\n        size=\"sm\"\n      >\n        <FormattedMessage {...messages.addHintButtonText} />\n      </Button>\n    </SettingsOption>\n  );\n};\n\nHintsCard.propTypes = {\n  intl: intlShape.isRequired,\n  hints: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired,\n  })).isRequired,\n  problemType: PropTypes.string.isRequired,\n  updateSettings: PropTypes.func.isRequired,\n};\n\nexport default injectIntl(HintsCard);\n"],"mappings":"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"}