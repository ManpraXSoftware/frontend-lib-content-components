{"version":3,"file":"TypeCard.js","names":["_react","_interopRequireDefault","require","_propTypes","_i18n","_SettingsOption","_problem","_messages","_TypeRow","_jsxRuntime","obj","__esModule","TypeCard","exports","_ref","answers","blockTitle","correctAnswerCount","problemType","setBlockTitle","updateField","updateAnswer","intl","problemTypeKeysArray","Object","values","ProblemTypeKeys","filter","key","ADVANCED","jsx","title","formatMessage","messages","typeSettingTitle","summary","ProblemTypes","children","map","typeKey","i","label","selected","lastRow","length","propTypes","PropTypes","arrayOf","shape","correct","bool","id","string","selectedFeedback","unselectedFeedback","isRequired","number","func","intlShape","_default","injectIntl"],"sources":["../../../../../../../../src/editors/containers/ProblemEditor/components/EditProblemView/SettingsWidget/settingsComponents/TypeCard.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { injectIntl, intlShape } from '@edx/frontend-platform/i18n';\nimport SettingsOption from '../SettingsOption';\nimport { ProblemTypeKeys, ProblemTypes } from '../../../../../../data/constants/problem';\nimport messages from '../messages';\nimport TypeRow from './TypeRow';\n\nexport const TypeCard = ({\n  answers,\n  blockTitle,\n  correctAnswerCount,\n  problemType,\n  setBlockTitle,\n  updateField,\n  updateAnswer,\n  // inject\n  intl,\n}) => {\n  const problemTypeKeysArray = Object.values(ProblemTypeKeys).filter(key => key !== ProblemTypeKeys.ADVANCED);\n\n  if (problemType === ProblemTypeKeys.ADVANCED) { return null; }\n\n  return (\n    <SettingsOption\n      title={intl.formatMessage(messages.typeSettingTitle)}\n      summary={ProblemTypes[problemType].title}\n    >\n      {problemTypeKeysArray.map((typeKey, i) => (\n        <TypeRow\n          answers={answers}\n          blockTitle={blockTitle}\n          correctAnswerCount={correctAnswerCount}\n          key={typeKey}\n          typeKey={typeKey}\n          label={ProblemTypes[typeKey].title}\n          selected={typeKey !== problemType}\n          problemType={problemType}\n          lastRow={(i + 1) === problemTypeKeysArray.length}\n          setBlockTitle={setBlockTitle}\n          updateField={updateField}\n          updateAnswer={updateAnswer}\n        />\n      ))}\n    </SettingsOption>\n  );\n};\n\nTypeCard.propTypes = {\n  answers: PropTypes.arrayOf(PropTypes.shape({\n    correct: PropTypes.bool,\n    id: PropTypes.string,\n    selectedFeedback: PropTypes.string,\n    title: PropTypes.string,\n    unselectedFeedback: PropTypes.string,\n  })).isRequired,\n  blockTitle: PropTypes.string.isRequired,\n  correctAnswerCount: PropTypes.number.isRequired,\n  problemType: PropTypes.string.isRequired,\n  setBlockTitle: PropTypes.func.isRequired,\n  updateField: PropTypes.func.isRequired,\n  updateAnswer: PropTypes.func.isRequired,\n  // injected\n  intl: intlShape.isRequired,\n};\n\nexport default injectIntl(TypeCard);\n"],"mappings":"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"}