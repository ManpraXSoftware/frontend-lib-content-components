{"version":3,"file":"index.js","names":["_react","_interopRequireDefault","require","_propTypes","_i18n","_SettingsOption","_messages","_hooks","_GroupFeedbackRow","_Button","_jsxRuntime","obj","__esModule","_typeof","Symbol","iterator","constructor","prototype","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","value","_toPropertyKey","configurable","writable","arg","_toPrimitive","String","input","hint","prim","toPrimitive","undefined","res","call","TypeError","Number","GroupFeedbackCard","exports","_ref","groupFeedbacks","updateSettings","answers","intl","_groupFeedbackCardHoo","groupFeedbackCardHooks","summary","handleAdd","jsxs","title","formatMessage","messages","groupFeedbackSettingTitle","message","values","none","hasExpandableTextArea","children","jsx","className","FormattedMessage","groupFeedbackInputLabel","map","groupFeedback","id","groupFeedbackRowHooks","variant","onClick","size","addGroupFeedbackButtonText","propTypes","intlShape","isRequired","PropTypes","arrayOf","shape","number","feedback","string","correct","bool","selectedFeedback","unselectedFeedback","func","_default","injectIntl"],"sources":["../../../../../../../../../src/editors/containers/ProblemEditor/components/EditProblemView/SettingsWidget/settingsComponents/GroupFeedback/index.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { injectIntl, FormattedMessage, intlShape } from '@edx/frontend-platform/i18n';\nimport SettingsOption from '../../SettingsOption';\nimport messages from './messages';\nimport { groupFeedbackCardHooks, groupFeedbackRowHooks } from './hooks';\nimport GroupFeedbackRow from './GroupFeedbackRow';\nimport Button from '../../../../../../../sharedComponents/Button';\n\nexport const GroupFeedbackCard = ({\n  groupFeedbacks,\n  updateSettings,\n  answers,\n  // inject\n  intl,\n}) => {\n  const { summary, handleAdd } = groupFeedbackCardHooks(groupFeedbacks, updateSettings, answers);\n  return (\n    <SettingsOption\n      title={intl.formatMessage(messages.groupFeedbackSettingTitle)}\n      summary={intl.formatMessage(summary.message, { ...summary.values })}\n      none={!groupFeedbacks.length}\n      hasExpandableTextArea\n    >\n      <div className=\"py-3\">\n        <FormattedMessage {...messages.groupFeedbackInputLabel} />\n      </div>\n      {groupFeedbacks.map((groupFeedback) => (\n        <GroupFeedbackRow\n          key={groupFeedback.id}\n          id={groupFeedback.id}\n          value={groupFeedback}\n          answers={answers}\n          {...groupFeedbackRowHooks({ id: groupFeedback.id, groupFeedbacks, updateSettings })}\n        />\n      ))}\n      <Button\n        className=\"m-0 p-0 font-weight-bold\"\n        variant=\"add\"\n        onClick={handleAdd}\n        size=\"sm\"\n      >\n        <FormattedMessage {...messages.addGroupFeedbackButtonText} />\n      </Button>\n    </SettingsOption>\n  );\n};\n\nGroupFeedbackCard.propTypes = {\n  intl: intlShape.isRequired,\n  groupFeedbacks: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    feedback: PropTypes.string.isRequired,\n    answers: PropTypes.arrayOf(PropTypes.string).isRequired,\n  })).isRequired,\n  answers: PropTypes.arrayOf(PropTypes.shape({\n    correct: PropTypes.bool,\n    id: PropTypes.string,\n    selectedFeedback: PropTypes.string,\n    title: PropTypes.string,\n    unselectedFeedback: PropTypes.string,\n  })).isRequired,\n  updateSettings: PropTypes.func.isRequired,\n};\n\nexport default injectIntl(GroupFeedbackCard);\n"],"mappings":"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"}