{"version":3,"file":"AnswerOption.js","names":["_react","_interopRequireWildcard","require","_reactRedux","_propTypes","_interopRequireDefault","_paragon","_icons","_i18n","_messages","_redux","_types","_Checker","_Feedback","hooks","_problem","_ExpandableTextArea","_jsxRuntime","obj","__esModule","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","_typeof","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","Symbol","iterator","constructor","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","value","_toPropertyKey","configurable","writable","arg","_toPrimitive","String","input","hint","prim","toPrimitive","undefined","res","TypeError","Number","AnswerOption","exports","_ref","answer","hasSingleAnswer","intl","problemType","dispatch","useDispatch","removeAnswer","setAnswer","setAnswerTitle","setSelectedFeedback","setUnselectedFeedback","_hooks$useFeedback","useFeedback","isFeedbackVisible","toggleFeedback","getInputArea","ProblemTypeKeys","SINGLESELECT","MULTISELECT","includes","jsx","title","setContent","placeholder","formatMessage","messages","answerTextboxPlaceholder","id","concat","NUMERIC","isAnswerRange","Form","Control","as","className","autoResize","rows","onChange","jsxs","children","answerRangeTextboxPlaceholder","FormattedMessage","answerRangeHelperText","Collapsible","Advanced","open","onToggle","disabled","Body","FeedbackBox","Trigger","IconButton","src","FeedbackOutline","iconAs","Icon","alt","feedbackToggleIconAltText","variant","DeleteOutline","answerDeleteIconAltText","onClick","propTypes","answerOptionProps","isRequired","PropTypes","bool","intlShape","string","mapStateToProps","state","selectors","problem","mapDispatchToProps","_default","injectIntl","connect","memo"],"sources":["../../../../../../../src/editors/containers/ProblemEditor/components/EditProblemView/AnswerWidget/AnswerOption.jsx"],"sourcesContent":["import React, { memo } from 'react';\nimport { connect, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {\n  Collapsible,\n  Icon,\n  IconButton,\n  Form,\n} from '@edx/paragon';\nimport { FeedbackOutline, DeleteOutline } from '@edx/paragon/icons';\nimport { FormattedMessage, injectIntl, intlShape } from '@edx/frontend-platform/i18n';\nimport messages from './messages';\nimport { selectors } from '../../../../../data/redux';\nimport { answerOptionProps } from '../../../../../data/services/cms/types';\nimport Checker from './components/Checker';\nimport { FeedbackBox } from './components/Feedback';\nimport * as hooks from './hooks';\nimport { ProblemTypeKeys } from '../../../../../data/constants/problem';\nimport ExpandableTextArea from '../../../../../sharedComponents/ExpandableTextArea';\n\nexport const AnswerOption = ({\n  answer,\n  hasSingleAnswer,\n  // injected\n  intl,\n  // redux\n  problemType,\n}) => {\n  const dispatch = useDispatch();\n  const removeAnswer = hooks.removeAnswer({ answer, dispatch });\n  const setAnswer = hooks.setAnswer({ answer, hasSingleAnswer, dispatch });\n  const setAnswerTitle = hooks.setAnswerTitle({\n    answer,\n    hasSingleAnswer,\n    dispatch,\n    problemType,\n  });\n  const setSelectedFeedback = hooks.setSelectedFeedback({ answer, hasSingleAnswer, dispatch });\n  const setUnselectedFeedback = hooks.setUnselectedFeedback({ answer, hasSingleAnswer, dispatch });\n  const { isFeedbackVisible, toggleFeedback } = hooks.useFeedback(answer);\n\n  const getInputArea = () => {\n    if ([ProblemTypeKeys.SINGLESELECT, ProblemTypeKeys.MULTISELECT].includes(problemType)) {\n      return (\n        <ExpandableTextArea\n          value={answer.title}\n          setContent={setAnswerTitle}\n          placeholder={intl.formatMessage(messages.answerTextboxPlaceholder)}\n          id={`answer-${answer.id}`}\n        />\n      );\n    }\n    if (problemType !== ProblemTypeKeys.NUMERIC || !answer.isAnswerRange) {\n      return (\n        <Form.Control\n          as=\"textarea\"\n          className=\"answer-option-textarea text-gray-500 small\"\n          autoResize\n          rows={1}\n          value={answer.title}\n          onChange={setAnswerTitle}\n          placeholder={intl.formatMessage(messages.answerTextboxPlaceholder)}\n        />\n      );\n    }\n    // Return Answer Range View\n    return (\n      <div>\n        <Form.Control\n          as=\"textarea\"\n          className=\"answer-option-textarea text-gray-500 small\"\n          autoResize\n          rows={1}\n          value={answer.title}\n          onChange={setAnswerTitle}\n          placeholder={intl.formatMessage(messages.answerRangeTextboxPlaceholder)}\n        />\n        <div className=\"pgn__form-switch-helper-text\">\n          <FormattedMessage {...messages.answerRangeHelperText} />\n        </div>\n      </div>\n\n    );\n  };\n\n  return (\n    <Collapsible.Advanced\n      open={isFeedbackVisible}\n      onToggle={toggleFeedback}\n      className=\"answer-option d-flex flex-row justify-content-between flex-nowrap pb-2 pt-2\"\n    >\n      <div className=\"mr-1 d-flex\">\n        <Checker\n          hasSingleAnswer={hasSingleAnswer}\n          answer={answer}\n          setAnswer={setAnswer}\n          disabled={problemType === ProblemTypeKeys.NUMERIC}\n        />\n      </div>\n      <div className=\"ml-1 flex-grow-1\">\n        {getInputArea()}\n        <Collapsible.Body>\n          <FeedbackBox\n            problemType={problemType}\n            answer={answer}\n            setSelectedFeedback={setSelectedFeedback}\n            setUnselectedFeedback={setUnselectedFeedback}\n            intl={intl}\n          />\n        </Collapsible.Body>\n      </div>\n      <div className=\"d-flex flex-row flex-nowrap\">\n        <Collapsible.Trigger>\n          <IconButton\n            src={FeedbackOutline}\n            iconAs={Icon}\n            alt={intl.formatMessage(messages.feedbackToggleIconAltText)}\n            variant=\"primary\"\n          />\n        </Collapsible.Trigger>\n        <IconButton\n          src={DeleteOutline}\n          iconAs={Icon}\n          alt={intl.formatMessage(messages.answerDeleteIconAltText)}\n          onClick={removeAnswer}\n          variant=\"primary\"\n        />\n      </div>\n    </Collapsible.Advanced>\n  );\n};\n\nAnswerOption.propTypes = {\n  answer: answerOptionProps.isRequired,\n  hasSingleAnswer: PropTypes.bool.isRequired,\n  // injected\n  intl: intlShape.isRequired,\n  // redux\n  problemType: PropTypes.string.isRequired,\n};\n\nexport const mapStateToProps = (state) => ({\n  problemType: selectors.problem.problemType(state),\n});\n\nexport const mapDispatchToProps = {};\nexport default injectIntl(connect(mapStateToProps, mapDispatchToProps)(memo(AnswerOption)));\n"],"mappings":"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"}