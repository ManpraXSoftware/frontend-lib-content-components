{"version":3,"file":"hooks.js","names":["require","_ReactStateSettingsParser","_interopRequireDefault","_ReactStateOLXParser","_hooks","obj","__esModule","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","value","_toPropertyKey","configurable","writable","arg","_toPrimitive","_typeof","String","input","hint","prim","Symbol","toPrimitive","undefined","res","call","TypeError","Number","_slicedToArray","arr","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","o","minLen","_arrayLikeToArray","n","prototype","toString","slice","constructor","name","Array","from","test","len","arr2","_i","iterator","_s","_e","_x","_r","_arr","_n","_d","next","done","err","isArray","fetchEditorContent","exports","_ref","format","editorObject","hints","EditorsArray","window","tinymce","editors","entries","_ref2","_ref3","id","editor","isNaN","parseInt","startsWith","answers","answerId","substring","indexOf","getContent","includes","selectedFeedback","unselectedFeedback","groupFeedback","feedbackId","parseState","_ref4","problem","isAdvanced","ref","assets","lmsEndpointUrl","_ref$current","reactSettingsParser","ReactStateSettingsParser","reactOLXParser","ReactStateOLXParser","reactBuiltOlx","setAssetToStaticUrl","editorValue","buildOLX","rawOLX","current","state","doc","settings","getSettings","olx"],"sources":["../../../../../../src/editors/containers/ProblemEditor/components/EditProblemView/hooks.js"],"sourcesContent":["import 'tinymce';\nimport ReactStateSettingsParser from '../../data/ReactStateSettingsParser';\nimport ReactStateOLXParser from '../../data/ReactStateOLXParser';\nimport { setAssetToStaticUrl } from '../../../../sharedComponents/TinyMceWidget/hooks';\n\nexport const fetchEditorContent = ({ format }) => {\n  const editorObject = { hints: [] };\n  const EditorsArray = window.tinymce.editors;\n  Object.entries(EditorsArray).forEach(([id, editor]) => {\n    if (Number.isNaN(parseInt(id))) {\n      if (id.startsWith('answer')) {\n        const { answers } = editorObject;\n        const answerId = id.substring(id.indexOf('-') + 1);\n        editorObject.answers = { ...answers, [answerId]: editor.getContent({ format }) };\n      } else if (id.includes('Feedback')) {\n        const { selectedFeedback, unselectedFeedback, groupFeedback } = editorObject;\n        const feedbackId = id.substring(id.indexOf('-') + 1);\n        if (id.startsWith('selected')) {\n          editorObject.selectedFeedback = { ...selectedFeedback, [feedbackId]: editor.getContent({ format }) };\n        }\n        if (id.startsWith('unselected')) {\n          editorObject.unselectedFeedback = { ...unselectedFeedback, [feedbackId]: editor.getContent({ format }) };\n        }\n        if (id.startsWith('group')) {\n          editorObject.groupFeedback = { ...groupFeedback, [feedbackId]: editor.getContent({ format }) };\n        }\n      } else if (id.startsWith('hint')) {\n        const { hints } = editorObject;\n        hints.push(editor.getContent({ format }));\n      } else {\n        editorObject[id] = editor.getContent();\n      }\n    }\n  });\n  return editorObject;\n};\n\nexport const parseState = ({\n  problem,\n  isAdvanced,\n  ref,\n  assets,\n  lmsEndpointUrl,\n}) => () => {\n  const editorObject = fetchEditorContent({ format: '' });\n  const reactSettingsParser = new ReactStateSettingsParser(problem);\n  const reactOLXParser = new ReactStateOLXParser({ problem, editorObject });\n  const reactBuiltOlx = setAssetToStaticUrl({ editorValue: reactOLXParser.buildOLX(), assets, lmsEndpointUrl });\n  const rawOLX = ref?.current?.state.doc.toString();\n  return {\n    settings: reactSettingsParser.getSettings(),\n    olx: isAdvanced ? rawOLX : reactBuiltOlx,\n  };\n};\n"],"mappings":"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"}