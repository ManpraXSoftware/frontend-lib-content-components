{"version":3,"file":"selectors.test.js","names":["_utils","require","urls","_interopRequireWildcard","selectors","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","_typeof","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","Symbol","iterator","constructor","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","TypeError","iter","Array","from","isArray","_arrayLikeToArray","_slicedToArray","i","_arrayWithHoles","_iterableToArrayLimit","_nonIterableRest","o","minLen","n","toString","slice","name","test","len","length","arr2","_i","_s","_e","_x","_r","_arr","_n","_d","next","done","push","value","err","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","enumerable","apply","_objectSpread","target","arguments","source","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","_toPropertyKey","configurable","writable","arg","_toPrimitive","String","input","hint","prim","toPrimitive","undefined","res","Number","jest","mock","createSelector","fn","preSelectors","cb","returnUrl","args","testState","some","testValue","describe","appSelector","simpleSelectors","it","expect","app","toEqual","testSimpleSelector","concat","_simpleSelectors$key","simpleKeys","keyStore","blockContent","blockId","blockTitle","blockType","blockValue","learningContextId","editorInitialized","saveResponse","lmsEndpointUrl","studioEndpointUrl","unitUrl","studioView","assets","map","isInitialized","truthy","url","block","_ref","_ref2","expected","title","displayTitle","studioViewRaw","data","html","studioViewVisual","isRaw","learningContextIdLibrary","learningContextIdCourse","isLibrary"],"sources":["../../../../../src/editors/data/redux/app/selectors.test.js"],"sourcesContent":["// import * in order to mock in-file references\nimport { keyStore } from '../../../utils';\nimport * as urls from '../../services/cms/urls';\nimport * as selectors from './selectors';\n\njest.mock('reselect', () => ({\n  createSelector: jest.fn((preSelectors, cb) => ({ preSelectors, cb })),\n}));\njest.mock('../../services/cms/urls', () => ({\n  returnUrl: (args) => ({ returnUrl: args }),\n}));\n\nconst testState = { some: 'arbitraryValue' };\nconst testValue = 'my VALUE';\n\ndescribe('app selectors unit tests', () => {\n  const {\n    appSelector,\n    simpleSelectors,\n  } = selectors;\n  describe('appSelector', () => {\n    it('returns the app data', () => {\n      expect(appSelector({ ...testState, app: testValue })).toEqual(testValue);\n    });\n  });\n  describe('simpleSelectors', () => {\n    const testSimpleSelector = (key) => {\n      test(`${key} simpleSelector returns its value from the app store`, () => {\n        const { preSelectors, cb } = simpleSelectors[key];\n        expect(preSelectors).toEqual([appSelector]);\n        expect(cb({ ...testState, [key]: testValue })).toEqual(testValue);\n      });\n    };\n    const simpleKeys = keyStore(simpleSelectors);\n    describe('simple selectors link their values from app store', () => {\n      [\n        simpleKeys.blockContent,\n        simpleKeys.blockId,\n        simpleKeys.blockTitle,\n        simpleKeys.blockType,\n        simpleKeys.blockValue,\n        simpleKeys.learningContextId,\n        simpleKeys.editorInitialized,\n        simpleKeys.saveResponse,\n        simpleKeys.lmsEndpointUrl,\n        simpleKeys.studioEndpointUrl,\n        simpleKeys.unitUrl,\n        simpleKeys.blockTitle,\n        simpleKeys.studioView,\n        simpleKeys.assets,\n      ].map(testSimpleSelector);\n    });\n  });\n  describe('returnUrl', () => {\n    it('is memoized based on unitUrl and studioEndpointUrl', () => {\n      expect(selectors.returnUrl.preSelectors).toEqual([\n        simpleSelectors.unitUrl,\n        simpleSelectors.studioEndpointUrl,\n        simpleSelectors.learningContextId,\n      ]);\n    });\n    it('returns urls.returnUrl with the returnUrl', () => {\n      const { cb } = selectors.returnUrl;\n      const studioEndpointUrl = 'baseURL';\n      const unitUrl = 'some unit url';\n      const learningContextId = 'some learning context';\n      expect(\n        cb(unitUrl, studioEndpointUrl, learningContextId),\n      ).toEqual(\n        urls.returnUrl({ unitUrl, studioEndpointUrl, learningContextId }),\n      );\n    });\n  });\n  describe('isInitialized selector', () => {\n    it('is memoized based on unitUrl, editorInitialized, and blockValue', () => {\n      expect(selectors.isInitialized.preSelectors).toEqual([\n        simpleSelectors.unitUrl,\n        simpleSelectors.blockValue,\n      ]);\n    });\n    it('returns true iff unitUrl, blockValue, and editorInitialized are all truthy', () => {\n      const { cb } = selectors.isInitialized;\n      const truthy = {\n        url: { url: 'data' },\n        blockValue: { block: 'value' },\n      };\n\n      [\n        [[null, truthy.blockValue], false],\n        [[truthy.url, null], false],\n        [[truthy.url, truthy.blockValue], true],\n      ].map(([args, expected]) => expect(cb(...args)).toEqual(expected));\n    });\n  });\n  describe('displayTitle', () => {\n    const title = 'tItLe';\n    it('is memoized based on blockType and blockTitle', () => {\n      expect(selectors.displayTitle.preSelectors).toEqual([\n        simpleSelectors.blockType,\n        simpleSelectors.blockTitle,\n      ]);\n    });\n    it('returns null if blockType is null', () => {\n      expect(selectors.displayTitle.cb(null, title)).toEqual(null);\n    });\n    it('returns blockTitle if blockTitle is not null', () => {\n      expect(selectors.displayTitle.cb('html', title)).toEqual(title);\n    });\n    it('returns Text if the blockType is html', () => {\n      expect(selectors.displayTitle.cb('html', null)).toEqual('Text');\n    });\n    it('returns the blockType capitalized if not html', () => {\n      expect(selectors.displayTitle.cb('video', null)).toEqual('Video');\n      expect(selectors.displayTitle.cb('random', null)).toEqual('Random');\n    });\n  });\n\n  describe('isRaw', () => {\n    const studioViewRaw = {\n      data: {\n        html: 'data-editor=\"raw\"',\n      },\n    };\n    const studioViewVisual = {\n      data: {\n        html: 'sOmEthIngElse',\n      },\n    };\n    it('is memoized based on studioView', () => {\n      expect(selectors.isRaw.preSelectors).toEqual([\n        simpleSelectors.studioView,\n      ]);\n    });\n    it('returns null if studioView is null', () => {\n      expect(selectors.isRaw.cb(null)).toEqual(null);\n    });\n    it('returns true if studioView is raw', () => {\n      expect(selectors.isRaw.cb(studioViewRaw)).toEqual(true);\n    });\n    it('returns false if the studioView is not Raw', () => {\n      expect(selectors.isRaw.cb(studioViewVisual)).toEqual(false);\n    });\n  });\n\n  describe('isLibrary', () => {\n    const learningContextIdLibrary = 'library-v1:name';\n    const learningContextIdCourse = 'course-v1:name';\n    it('is memoized based on studioView', () => {\n      expect(selectors.isLibrary.preSelectors).toEqual([\n        simpleSelectors.learningContextId,\n      ]);\n    });\n    it('returns null if blockId is null', () => {\n      expect(selectors.isLibrary.cb(null)).toEqual(null);\n    });\n    it('returns true if blockId starts with lib', () => {\n      expect(selectors.isLibrary.cb(learningContextIdLibrary)).toEqual(true);\n    });\n    it('returns false if the blockId does not start with lib', () => {\n      expect(selectors.isLibrary.cb(learningContextIdCourse)).toEqual(false);\n    });\n  });\n});\n"],"mappings":"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"}