{"version":3,"file":"reducers.js","names":["_lodashEs","_interopRequireDefault","require","_toolkit","_OLXParser","_utils","_problem","_constants","_excluded","_excluded2","_excluded3","obj","__esModule","_typeof","Symbol","iterator","constructor","prototype","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","TypeError","o","minLen","_arrayLikeToArray","n","Object","toString","call","slice","name","Array","from","test","iter","isArray","len","length","i","arr2","_objectWithoutProperties","source","excluded","target","_objectWithoutPropertiesLoose","key","getOwnPropertySymbols","sourceSymbolKeys","indexOf","propertyIsEnumerable","sourceKeys","keys","ownKeys","object","enumerableOnly","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","value","_toPropertyKey","configurable","writable","arg","_toPrimitive","String","input","hint","prim","toPrimitive","undefined","res","Number","nextAlphaId","lastId","fromCharCode","charCodeAt","initialState","exports","rawOLX","problemType","question","answers","correctAnswerCount","groupFeedbackList","generalFeedback","additionalAttributes","defaultSettings","settings","randomization","scoring","weight","attempts","unlimited","number","hints","timeBetween","matLabApiKey","showAnswer","on","ShowAnswerTypesKeys","FINISHED","afterAttempts","showResetButton","solutionExplanation","tolerance","type","ToleranceTypes","none","problem","createSlice","reducers","updateField","state","_ref","payload","updateQuestion","_ref2","updateAnswer","_ref3","id","hasSingleAnswer","answer","map","_","has","correct","deleteAnswer","_ref4","isAnswerRange","title","selectedFeedback","unselectedFeedback","ProblemTypeKeys","NUMERIC","index","newId","indexToLetterMap","addAnswer","currAnswers","newOption","concat","addAnswerRange","updateSettings","_ref5","load","_ref6","_ref6$payload","_ref6$payload$setting","setEnableTypeSelection","_ref7","maxAttempts","showanswer","actions","StrictDict","reducer"],"sources":["../../../../../src/editors/data/redux/problem/reducers.js"],"sourcesContent":["import _ from 'lodash-es';\nimport { createSlice } from '@reduxjs/toolkit';\nimport { indexToLetterMap } from '../../../containers/ProblemEditor/data/OLXParser';\nimport { StrictDict } from '../../../utils';\nimport { ProblemTypeKeys, ShowAnswerTypesKeys } from '../../constants/problem';\nimport { ToleranceTypes } from '../../../containers/ProblemEditor/components/EditProblemView/SettingsWidget/settingsComponents/Tolerance/constants';\n\nconst nextAlphaId = (lastId) => String.fromCharCode(lastId.charCodeAt(0) + 1);\nconst initialState = {\n  rawOLX: '',\n  problemType: null,\n  question: '',\n  answers: [],\n  correctAnswerCount: 0,\n  groupFeedbackList: [],\n  generalFeedback: '',\n  additionalAttributes: {},\n  defaultSettings: {},\n  settings: {\n    randomization: null,\n    scoring: {\n      weight: 1,\n      attempts: {\n        unlimited: true,\n        number: '',\n      },\n    },\n    hints: [],\n    timeBetween: 0,\n    matLabApiKey: '',\n    showAnswer: {\n      on: ShowAnswerTypesKeys.FINISHED,\n      afterAttempts: 0,\n    },\n    showResetButton: false,\n    solutionExplanation: '',\n    tolerance: {\n      value: null,\n      type: ToleranceTypes.none.type,\n    },\n  },\n};\n\n// eslint-disable-next-line no-unused-vars\nconst problem = createSlice({\n  name: 'problem',\n  initialState,\n  reducers: {\n    updateField: (state, { payload }) => ({\n      ...state,\n      ...payload,\n    }),\n    updateQuestion: (state, { payload }) => ({\n      ...state,\n      question: payload,\n    }),\n    updateAnswer: (state, { payload }) => {\n      const { id, hasSingleAnswer, ...answer } = payload;\n      let { correctAnswerCount } = state;\n      const answers = state.answers.map(obj => {\n        if (obj.id === id) {\n          if (_.has(answer, 'correct') && payload.correct) {\n            correctAnswerCount += 1;\n            return { ...obj, ...answer };\n          }\n          if (_.has(answer, 'correct') && payload.correct === false) {\n            correctAnswerCount -= 1;\n            return { ...obj, ...answer };\n          }\n          return { ...obj, ...answer };\n        }\n        // set other answers as incorrect if problem only has one answer correct\n        // and changes object include correct key change\n        if (hasSingleAnswer && _.has(answer, 'correct') && obj.correct) {\n          return { ...obj, correct: false };\n        }\n        return obj;\n      });\n      return {\n        ...state,\n        correctAnswerCount,\n        answers,\n      };\n    },\n    deleteAnswer: (state, { payload }) => {\n      const { id, correct } = payload;\n      if (state.answers.length <= 1) {\n        if (state.answers.length > 0 && state.answers[0].isAnswerRange) {\n          return {\n            ...state,\n            correctAnswerCount: 1,\n            answers: [{\n              id: 'A',\n              title: '',\n              selectedFeedback: '',\n              unselectedFeedback: '',\n              correct: state.problemType === ProblemTypeKeys.NUMERIC,\n              isAnswerRange: false,\n            },\n            ],\n          };\n        }\n        return state;\n      }\n\n      let { correctAnswerCount } = state;\n      if (correct) {\n        correctAnswerCount -= 1;\n      }\n      const answers = state.answers.filter(obj => obj.id !== id).map((answer, index) => {\n        const newId = indexToLetterMap[index];\n        if (answer.id === newId) {\n          return answer;\n        }\n        return { ...answer, id: newId };\n      });\n      return {\n        ...state,\n        correctAnswerCount,\n        answers,\n      };\n    },\n    addAnswer: (state) => {\n      const currAnswers = state.answers;\n      if (currAnswers.length >= indexToLetterMap.length) {\n        return state;\n      }\n      const newOption = {\n        id: currAnswers.length ? nextAlphaId(currAnswers[currAnswers.length - 1].id) : 'A',\n        title: '',\n        selectedFeedback: '',\n        unselectedFeedback: '',\n        correct: state.problemType === ProblemTypeKeys.NUMERIC,\n        isAnswerRange: false,\n      };\n      let { correctAnswerCount } = state;\n      if (state.problemType === ProblemTypeKeys.NUMERIC) {\n        correctAnswerCount += 1;\n      }\n\n      const answers = [\n        ...currAnswers,\n        newOption,\n      ];\n      return {\n        ...state,\n        correctAnswerCount,\n        answers,\n      };\n    },\n    addAnswerRange: (state) => {\n      // As you may only have one answer range at a time, overwrite the answer object.\n      const newOption = {\n        id: 'A',\n        title: '',\n        selectedFeedback: '',\n        unselectedFeedback: '',\n        correct: state.problemType === ProblemTypeKeys.NUMERIC,\n        isAnswerRange: true,\n      };\n      const correctAnswerCount = 1;\n      return {\n        ...state,\n        correctAnswerCount,\n        answers: [newOption],\n      };\n    },\n\n    updateSettings: (state, { payload }) => ({\n      ...state,\n      settings: {\n        ...state.settings,\n        ...payload,\n      },\n    }),\n    load: (state, { payload: { settings: { scoring, showAnswer, ...settings }, ...payload } }) => ({\n      ...state,\n      settings: {\n        ...state.settings,\n        scoring: { ...state.settings.scoring, ...scoring },\n        showAnswer: { ...state.settings.showAnswer, ...showAnswer },\n        ...settings,\n      },\n      ...payload,\n    }),\n    setEnableTypeSelection: (state, { payload }) => {\n      const { maxAttempts, showanswer, showResetButton } = payload;\n      const attempts = { number: maxAttempts, unlimited: false };\n      if (!maxAttempts) {\n        attempts.unlimited = true;\n      }\n      return {\n        ...state,\n        settings: {\n          ...state.settings,\n          scoring: { ...state.settings.scoring, attempts },\n          showAnswer: { ...state.settings.showAnswer, on: showanswer },\n          ...showResetButton,\n        },\n        problemType: null,\n      };\n    },\n  },\n});\n\nconst actions = StrictDict(problem.actions);\n\nconst { reducer } = problem;\n\nexport {\n  actions,\n  initialState,\n  reducer,\n};\n"],"mappings":"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"}