{"version":3,"file":"selectors.test.js","names":["_utils","require","selectors","_interopRequireWildcard","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","_typeof","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","Symbol","iterator","constructor","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","value","_toPropertyKey","configurable","writable","arg","_toPrimitive","String","input","hint","prim","toPrimitive","undefined","res","TypeError","Number","jest","mock","createSelector","fn","preSelectors","cb","testState","some","testValue","describe","problemState","simpleSelectors","it","expect","problem","toEqual","testSimpleSelector","test","concat","_simpleSelectors$key","simpleKeys","keyStore","problemType","answers","correctAnswerCount","settings","question","defaultSettings","map","_simpleSelectors$simp","completeState"],"sources":["../../../../../src/editors/data/redux/problem/selectors.test.js"],"sourcesContent":["// import * in order to mock in-file references\nimport { keyStore } from '../../../utils';\nimport * as selectors from './selectors';\n\njest.mock('reselect', () => ({\n  createSelector: jest.fn((preSelectors, cb) => ({ preSelectors, cb })),\n}));\n\nconst testState = { some: 'arbitraryValue' };\nconst testValue = 'my VALUE';\n\ndescribe('problem selectors unit tests', () => {\n  const {\n    problemState,\n    simpleSelectors,\n  } = selectors;\n  describe('problemState', () => {\n    it('returns the problem data', () => {\n      expect(problemState({ ...testState, problem: testValue })).toEqual(testValue);\n    });\n  });\n  describe('simpleSelectors', () => {\n    const testSimpleSelector = (key) => {\n      test(`${key} simpleSelector returns its value from the problem store`, () => {\n        const { preSelectors, cb } = simpleSelectors[key];\n        expect(preSelectors).toEqual([problemState]);\n        expect(cb({ ...testState, [key]: testValue })).toEqual(testValue);\n      });\n    };\n    const simpleKeys = keyStore(simpleSelectors);\n    describe('simple selectors link their values from problem store', () => {\n      [\n        simpleKeys.problemType,\n        simpleKeys.answers,\n        simpleKeys.correctAnswerCount,\n        simpleKeys.settings,\n        simpleKeys.question,\n        simpleKeys.defaultSettings,\n      ].map(testSimpleSelector);\n    });\n    test('simple selector completeState equals the entire state', () => {\n      const { preSelectors, cb } = simpleSelectors[simpleKeys.completeState];\n      expect(preSelectors).toEqual([problemState]);\n      expect(cb({\n        ...testState,\n        [simpleKeys.completeState]: testValue,\n      })).toEqual({\n        ...testState,\n        [simpleKeys.completeState]: testValue,\n      });\n    });\n  });\n});\n"],"mappings":"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"}