{"version":3,"file":"reducer.test.js","names":["_reducer","require","_requests","_typeof","obj","Symbol","iterator","constructor","prototype","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","value","_toPropertyKey","configurable","writable","arg","_toPrimitive","String","input","hint","prim","toPrimitive","undefined","res","call","TypeError","Number","describe","test","expect","reducer","toEqual","initialState","arbitraryKey","requestsList","RequestKeys","fetchUnit","fetchBlock","saveBlock","requestKey","concat","testAction","action","args","expected","testingState","arbitraryField","arbitrary","actions","status","RequestStates","pending","completed","failed"],"sources":["../../../../../src/editors/data/redux/requests/reducer.test.js"],"sourcesContent":["import { initialState, actions, reducer } from './reducer';\nimport { RequestStates, RequestKeys } from '../../constants/requests';\n\ndescribe('requests reducer', () => {\n  test('intial state generated on create', () => {\n    expect(reducer(undefined, {})).toEqual(initialState);\n  });\n\n  describe('handling actions', () => {\n    const arbitraryKey = 'ArbItrAryKey';\n    const requestsList = [RequestKeys.fetchUnit, RequestKeys.fetchBlock, RequestKeys.saveBlock, arbitraryKey];\n\n    requestsList.forEach(requestKey => {\n      describe(`${requestKey} lifecycle`, () => {\n        const testAction = (action, args, expected) => {\n          const testingState = {\n            ...initialState,\n            arbitraryField: 'arbitrary',\n            [requestKey]: { arbitrary: 'state' },\n          };\n          expect(reducer(testingState, actions[action](args))).toEqual({\n            ...testingState,\n            [requestKey]: expected,\n          });\n        };\n        test('startRequest sets pending status', () => {\n          testAction('startRequest', requestKey, { status: RequestStates.pending });\n        });\n        test('completeRequest sets completed status and loads response', () => {\n          testAction(\n            'completeRequest',\n            { requestKey },\n            { status: RequestStates.completed },\n          );\n        });\n        test('failRequest sets failed state and loads error', () => {\n          testAction(\n            'failRequest',\n            { requestKey },\n            { status: RequestStates.failed },\n          );\n        });\n        test('clearRequest clears request state', () => {\n          testAction('clearRequest', { requestKey }, {});\n        });\n      });\n    });\n  });\n});\n"],"mappings":"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"}