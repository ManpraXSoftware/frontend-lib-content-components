{"version":3,"file":"selectors.test.js","names":["_requests3","require","selectors","_interopRequireWildcard","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","_typeof","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","Symbol","iterator","constructor","_defineProperty","value","_toPropertyKey","enumerable","configurable","writable","arg","_toPrimitive","String","input","hint","prim","toPrimitive","undefined","res","TypeError","Number","jest","mock","createSelector","fn","preSelectors","cb","testValue","testKey","describe","it","expect","requestStatus","requests","requestKey","toEqual","myMethod","_ref","data","myData","statusSelector","testStateSelector","selector","expected","concat","status","RequestStates","inactive","pending","completed","failed","isFinished","error","errorStatus","response","errorCode","test","connectedSelectors","beforeEach","connectedStatusSelectors","afterEach","testStatusSelector","name","map"],"sources":["../../../../../src/editors/data/redux/requests/selectors.test.js"],"sourcesContent":["import { RequestStates } from '../../constants/requests';\n\n// import * in order to mock in-file references\nimport * as selectors from './selectors';\n\njest.mock('reselect', () => ({\n  createSelector: jest.fn((preSelectors, cb) => ({ preSelectors, cb })),\n}));\n\nconst testValue = 'my test VALUE';\nconst testKey = 'MY test key';\n\ndescribe('request selectors', () => {\n  describe('basic selectors', () => {\n    describe('requestStatus', () => {\n      it('returns the state associated with the given requestKey', () => {\n        expect(\n          selectors.requestStatus(\n            { requests: { [testKey]: testValue } },\n            { requestKey: testKey },\n          ),\n        ).toEqual(testValue);\n      });\n    });\n    describe('statusSelector', () => {\n      it('returns a state selector that applies a fn against request state by requestKey', () => {\n        const myMethod = ({ data }) => ({ myData: data });\n        expect(selectors.statusSelector(myMethod)(\n          { requests: { [testKey]: { data: testValue } } },\n          { requestKey: testKey },\n        )).toEqual({ myData: testValue });\n      });\n    });\n    describe('state selectors', () => {\n      const testStateSelector = (selector, expected) => {\n        describe(selector, () => {\n          it(`returns true iff the request status equals ${expected}`, () => {\n            expect(selectors[selector]({ status: expected })).toEqual(true);\n            expect(selectors[selector]({ status: 'other' })).toEqual(false);\n          });\n        });\n      };\n      testStateSelector('isInactive', RequestStates.inactive);\n      testStateSelector('isPending', RequestStates.pending);\n      testStateSelector('isCompleted', RequestStates.completed);\n      testStateSelector('isFailed', RequestStates.failed);\n      describe('isFinished', () => {\n        it('returns true iff the request is completed or failed', () => {\n          expect(selectors.isFinished({ status: RequestStates.completed })).toEqual(true);\n          expect(selectors.isFinished({ status: RequestStates.failed })).toEqual(true);\n          expect(selectors.isFinished({ status: 'other' })).toEqual(false);\n        });\n      });\n    });\n    describe('error selectors', () => {\n      describe('error', () => {\n        it('returns the error for the request', () => {\n          expect(selectors.error({ error: testValue })).toEqual(testValue);\n        });\n      });\n      describe('errorStatus', () => {\n        it('returns the status the error response iff one exists', () => {\n          expect(selectors.errorStatus({})).toEqual(undefined);\n          expect(selectors.errorStatus({ error: {} })).toEqual(undefined);\n          expect(selectors.errorStatus({ error: { response: {} } })).toEqual(undefined);\n          expect(selectors.errorStatus(\n            { error: { response: { status: testValue } } },\n          )).toEqual(testValue);\n        });\n      });\n      describe('errorCode', () => {\n        it('returns the status the error code iff one exists', () => {\n          expect(selectors.errorCode({})).toEqual(undefined);\n          expect(selectors.errorCode({ error: {} })).toEqual(undefined);\n          expect(selectors.errorCode({ error: { response: {} } })).toEqual(undefined);\n          expect(selectors.errorCode(\n            { error: { response: { data: testValue } } },\n          )).toEqual(testValue);\n        });\n      });\n    });\n    describe('data', () => {\n      it('returns the data from the request', () => {\n        expect(selectors.data({ data: testValue })).toEqual(testValue);\n      });\n    });\n  });\n  describe('exported selectors', () => {\n    test('requestStatus forwards basic selector', () => {\n      expect(selectors.default.requestStatus).toEqual(selectors.requestStatus);\n    });\n    describe('statusSelector selectors', () => {\n      let statusSelector;\n      let connectedSelectors;\n      beforeEach(() => {\n        statusSelector = selectors.statusSelector;\n        selectors.statusSelector = jest.fn(key => ({ statusSelector: key }));\n        connectedSelectors = selectors.connectedStatusSelectors();\n      });\n      afterEach(() => {\n        selectors.statusSelector = statusSelector;\n      });\n      const testStatusSelector = (name) => {\n        describe(name, () => {\n          it(`returns a status selector keyed to the ${name} selector`, () => {\n            expect(connectedSelectors[name].statusSelector).toEqual(selectors[name]);\n          });\n        });\n      };\n      [\n        'isInactive',\n        'isPending',\n        'isCompleted',\n        'isFailed',\n        'error',\n        'errorCode',\n        'errorStatus',\n        'data',\n      ].map(testStatusSelector);\n    });\n  });\n});\n"],"mappings":"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"}