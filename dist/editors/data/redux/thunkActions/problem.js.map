{"version":3,"file":"problem.js","names":["_lodashEs","_interopRequireDefault","require","_2","requests","_interopRequireWildcard","_OLXParser","_SettingsParser","_problem","_ReactStateOLXParser","_olxTestData","_utils","_hooks","_excluded","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","_typeof","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","TypeError","o","minLen","_arrayLikeToArray","n","toString","slice","constructor","name","Array","from","test","len","length","arr2","_i","Symbol","iterator","_s","_e","_x","_r","_arr","_n","_d","next","done","push","value","err","isArray","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","enumerable","apply","_objectSpread","target","arguments","source","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","_toPropertyKey","configurable","writable","arg","_toPrimitive","String","input","hint","prim","toPrimitive","undefined","res","Number","_objectWithoutProperties","excluded","_objectWithoutPropertiesLoose","sourceSymbolKeys","indexOf","propertyIsEnumerable","sourceKeys","switchToAdvancedEditor","exports","dispatch","getState","state","editorObject","fetchEditorContent","format","reactOLXParser","ReactStateOLXParser","problem","rawOLX","buildOLX","actions","updateField","problemType","ProblemTypeKeys","ADVANCED","isBlankProblem","_ref","blankProblemOLX","getDataFromOlx","_ref2","_parsedProblem","rawSettings","olxParser","parsedProblem","OLXParser","getParsedOLXData","error","console","settings","parseSettings","_parsedProblem2","data","parsedSettings","_","isEmpty","loadProblem","_ref3","defaultSettings","setEnableTypeSelection","camelizeKeys","load","fetchAdvancedSettings","_ref4","advancedProblemSettingKeys","onSuccess","response","entries","_ref5","_ref6","includes","onFailure","initializeProblem","blockValue","_default"],"sources":["../../../../../src/editors/data/redux/thunkActions/problem.js"],"sourcesContent":["import _ from 'lodash-es';\nimport { actions } from '..';\nimport * as requests from './requests';\nimport { OLXParser } from '../../../containers/ProblemEditor/data/OLXParser';\nimport { parseSettings } from '../../../containers/ProblemEditor/data/SettingsParser';\nimport { ProblemTypeKeys } from '../../constants/problem';\nimport ReactStateOLXParser from '../../../containers/ProblemEditor/data/ReactStateOLXParser';\nimport { blankProblemOLX } from '../../../containers/ProblemEditor/data/mockData/olxTestData';\nimport { camelizeKeys } from '../../../utils';\nimport { fetchEditorContent } from '../../../containers/ProblemEditor/components/EditProblemView/hooks';\n\nexport const switchToAdvancedEditor = () => (dispatch, getState) => {\n  const state = getState();\n  const editorObject = fetchEditorContent({ format: '' });\n  const reactOLXParser = new ReactStateOLXParser({ problem: state.problem, editorObject });\n  const rawOLX = reactOLXParser.buildOLX();\n  dispatch(actions.problem.updateField({ problemType: ProblemTypeKeys.ADVANCED, rawOLX }));\n};\n\nexport const isBlankProblem = ({ rawOLX }) => {\n  if (rawOLX === blankProblemOLX.rawOLX) {\n    return true;\n  }\n  return false;\n};\n\nexport const getDataFromOlx = ({ rawOLX, rawSettings }) => {\n  let olxParser;\n  let parsedProblem;\n  try {\n    olxParser = new OLXParser(rawOLX);\n    parsedProblem = olxParser.getParsedOLXData();\n  } catch (error) {\n    console.error('The Problem Could Not Be Parsed from OLX. redirecting to Advanced editor.', error);\n    return { problemType: ProblemTypeKeys.ADVANCED, rawOLX, settings: parseSettings(rawSettings) };\n  }\n  if (parsedProblem?.problemType === ProblemTypeKeys.ADVANCED) {\n    return { problemType: ProblemTypeKeys.ADVANCED, rawOLX, settings: parseSettings(rawSettings) };\n  }\n  const { settings, ...data } = parsedProblem;\n  const parsedSettings = { ...settings, ...parseSettings(rawSettings) };\n  if (!_.isEmpty(rawOLX) && !_.isEmpty(data)) {\n    return { ...data, rawOLX, settings: parsedSettings };\n  }\n  return {};\n};\n\nexport const loadProblem = ({ rawOLX, rawSettings, defaultSettings }) => (dispatch) => {\n  if (isBlankProblem({ rawOLX })) {\n    dispatch(actions.problem.setEnableTypeSelection(camelizeKeys(defaultSettings)));\n  } else {\n    dispatch(actions.problem.load(getDataFromOlx({ rawOLX, rawSettings })));\n  }\n};\n\nexport const fetchAdvancedSettings = ({ rawOLX, rawSettings }) => (dispatch) => {\n  const advancedProblemSettingKeys = ['max_attempts', 'showanswer', 'show_reset_button'];\n  dispatch(requests.fetchAdvancedSettings({\n    onSuccess: (response) => {\n      const defaultSettings = {};\n      Object.entries(response.data).forEach(([key, value]) => {\n        if (advancedProblemSettingKeys.includes(key)) {\n          defaultSettings[key] = value.value;\n        }\n      });\n      dispatch(actions.problem.updateField({ defaultSettings: camelizeKeys(defaultSettings) }));\n      loadProblem({ rawOLX, rawSettings, defaultSettings })(dispatch);\n    },\n    onFailure: () => { loadProblem({ rawOLX, rawSettings, defaultSettings: {} })(dispatch); },\n  }));\n};\n\nexport const initializeProblem = (blockValue) => (dispatch) => {\n  const rawOLX = _.get(blockValue, 'data.data', {});\n  const rawSettings = _.get(blockValue, 'data.metadata', {});\n  dispatch(fetchAdvancedSettings({ rawOLX, rawSettings }));\n};\n\nexport default { initializeProblem, switchToAdvancedEditor, fetchAdvancedSettings };\n"],"mappings":"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"}