{"version":3,"file":"video.test.js","names":["_","require","_keyStore","_interopRequireDefault","thunkActions","_interopRequireWildcard","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","_typeof","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","Symbol","iterator","constructor","_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","TypeError","o","minLen","_arrayLikeToArray","n","toString","slice","name","Array","from","test","len","length","arr2","_i","_s","_e","_x","_r","_arr","_n","_d","next","done","push","value","err","isArray","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","enumerable","apply","_objectSpread","target","arguments","source","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","_toPropertyKey","configurable","writable","arg","_toPrimitive","String","input","hint","prim","toPrimitive","undefined","res","Number","jest","mock","actions","video","load","args","updateField","selectors","app","courseDetails","state","videoId","videoSettings","getTranscriptDownloadUrl","uploadAsset","allowThumbnailUpload","uploadThumbnail","deleteTranscript","uploadTranscript","getTranscriptFile","updateTranscriptLanguage","checkTranscriptsForImport","importTranscript","fetchVideoFeatures","removeItemOnce","parseYoutubeId","thunkActionsKeys","keyStore","mockLanguage","mockFile","mockFilename","mockThumbnail","mockThumbnailResponse","data","image_url","thumbnailUrl","mockAllowTranscriptImport","command","mockVideoFeatures","videoSharingEnabled","testMetadata","download_track","download_video","edx_video_id","end_time","handout","html5_sources","license","show_captions","start_time","transcripts","thumbnail","testState","originalThumbnail","testUpload","testReplaceUpload","file","language","filename","describe","dispatch","getState","dispatchedAction","beforeEach","fn","action","blockId","blockValue","metadata","studioEndpointUrl","studioView","html","dispatchedLoad","dispatchedAction1","dispatchedAction2","spyOn","determineVideoSources","mockReturnValue","videoUrl","fallbackVideos","parseLicense","by","nc","nd","sa","parseTranscripts","loadVideoData","_dispatch$mock$calls","calls","_dispatch$mock$calls$","_dispatch$mock$calls$2","_dispatch$mock$calls$3","afterEach","restoreAllMocks","it","expect","not","toEqual","videoSource","allowVideoDownloads","allowTranscriptDownloads","showTranscriptByDefault","duration","startTime","stopTime","total","licenseType","licenseDetails","attribution","noncommercial","noDerivatives","shareAlike","courseLicenseType","courseLicenseDetails","mockClear","onSuccess","toHaveBeenCalledWith","videoSharingEnabledForCourse","allowTranscriptImport","edxVideoId","youtubeId","youtubeUrl","concat","html5Sources","testStudioViewDataWithTranscripts","testStudioViewData","testBadStudioViewData","transcriptsData","emptyLicenseData","noLicense","licenseData","level","uploadHandout","_dispatch$mock$calls2","_dispatch$mock$calls3","toBe","asset","url","_dispatch$mock$calls4","_dispatch$mock$calls5","emptyCanvas","_dispatch$mock$calls6","_dispatch$mock$calls7","_dispatch$mock$calls8","_dispatch$mock$calls9","_dispatch$mock$calls10","_dispatch$mock$calls11","_dispatch$mock$calls12","_dispatch$mock$calls13","newLanguageCode","languageBeforeChange","_dispatch$mock$calls14","_dispatch$mock$calls15","toHaveBeenCalled","spies","mockName","replaceTranscript","newFile","newFilename","_dispatch$mock$calls16","_dispatch$mock$calls17"],"sources":["../../../../../src/editors/data/redux/thunkActions/video.test.js"],"sourcesContent":["import { actions } from '..';\nimport keyStore from '../../../utils/keyStore';\nimport * as thunkActions from './video';\n\njest.mock('..', () => ({\n  actions: {\n    video: {\n      load: (args) => ({ load: args }),\n      updateField: (args) => ({ updateField: args }),\n    },\n  },\n  selectors: {\n    app: {\n      courseDetails: (state) => ({ courseDetails: state }),\n    },\n    video: {\n      videoId: (state) => ({ videoId: state }),\n      videoSettings: (state) => ({ videoSettings: state }),\n      getTranscriptDownloadUrl: (state) => ({ getTranscriptDownloadUrl: state }),\n    },\n  },\n}));\njest.mock('./requests', () => ({\n  uploadAsset: (args) => ({ uploadAsset: args }),\n  allowThumbnailUpload: (args) => ({ allowThumbnailUpload: args }),\n  uploadThumbnail: (args) => ({ uploadThumbnail: args }),\n  deleteTranscript: (args) => ({ deleteTranscript: args }),\n  uploadTranscript: (args) => ({ uploadTranscript: args }),\n  getTranscriptFile: (args) => ({ getTranscriptFile: args }),\n  updateTranscriptLanguage: (args) => ({ updateTranscriptLanguage: args }),\n  checkTranscriptsForImport: (args) => ({ checkTranscriptsForImport: args }),\n  importTranscript: (args) => ({ importTranscript: args }),\n  fetchVideoFeatures: (args) => ({ fetchVideoFeatures: args }),\n}));\n\njest.mock('../../../utils', () => ({\n  removeItemOnce: (args) => (args),\n}));\n\njest.mock('../../services/cms/api', () => ({\n  parseYoutubeId: (args) => (args),\n}));\n\nconst thunkActionsKeys = keyStore(thunkActions);\n\nconst mockLanguage = 'en';\nconst mockFile = 'soMEtRANscRipT';\nconst mockFilename = 'soMEtRANscRipT.srt';\nconst mockThumbnail = 'sOMefILE';\nconst mockThumbnailResponse = { data: { image_url: 'soMEimAGEUrL' } };\nconst thumbnailUrl = 'soMEimAGEUrL';\nconst mockAllowTranscriptImport = { data: { command: 'import' } };\nconst mockVideoFeatures = {\n  data: {\n    allowThumbnailUpload: 'soMEbOolEAn',\n    videoSharingEnabled: 'someBOoOoOlean',\n  },\n};\n\nconst testMetadata = {\n  download_track: 'dOWNlOAdTraCK',\n  download_video: 'downLoaDViDEo',\n  edx_video_id: 'soMEvIDEo',\n  end_time: 0,\n  handout: 'hANdoUT',\n  html5_sources: [],\n  license: 'liCENse',\n  show_captions: 'shOWcapTIONS',\n  start_time: 0,\n  transcripts: ['do', 're', 'mi'],\n  thumbnail: 'thuMBNaIl',\n};\nconst testState = {\n  transcripts: ['la'],\n  thumbnail: 'sOMefILE',\n  originalThumbnail: null,\n  videoId: 'soMEvIDEo',\n};\nconst testUpload = { transcripts: ['la', 'en'] };\nconst testReplaceUpload = {\n  file: mockFile,\n  language: mockLanguage,\n  filename: mockFilename,\n};\n\ndescribe('video thunkActions', () => {\n  let dispatch;\n  let getState;\n  let dispatchedAction;\n  beforeEach(() => {\n    dispatch = jest.fn((action) => ({ dispatch: action }));\n    getState = jest.fn(() => ({\n      app: {\n        blockId: 'soMEBloCk',\n        blockValue: { data: { metadata: { ...testMetadata } } },\n        studioEndpointUrl: 'soMEeNDPoiNT',\n        courseDetails: { data: { license: null } },\n        studioView: { data: { html: 'sOMeHTml' } },\n      },\n      video: testState,\n    }));\n  });\n  describe('loadVideoData', () => {\n    let dispatchedLoad;\n    let dispatchedAction1;\n    let dispatchedAction2;\n    beforeEach(() => {\n      jest.spyOn(thunkActions, thunkActionsKeys.determineVideoSources).mockReturnValue({\n        videoUrl: 'videOsOurce',\n        videoId: 'videOiD',\n        fallbackVideos: 'fALLbACKvIDeos',\n      });\n      jest.spyOn(thunkActions, thunkActionsKeys.parseLicense).mockReturnValue([\n        'liCENSEtyPe',\n        {\n          by: true,\n          nc: true,\n          nd: true,\n          sa: false,\n        },\n      ]);\n      jest.spyOn(thunkActions, thunkActionsKeys.parseTranscripts).mockReturnValue(\n        testMetadata.transcripts,\n      );\n      thunkActions.loadVideoData()(dispatch, getState);\n      [\n        [dispatchedLoad],\n        [dispatchedAction1],\n        [dispatchedAction2],\n      ] = dispatch.mock.calls;\n    });\n    afterEach(() => {\n      jest.restoreAllMocks();\n    });\n    it('dispatches fetchVideoFeatures action', () => {\n      expect(dispatchedLoad).not.toEqual(undefined);\n      expect(dispatchedAction1.fetchVideoFeatures).not.toEqual(undefined);\n    });\n    it('dispatches checkTranscriptsForImport action', () => {\n      expect(dispatchedLoad).not.toEqual(undefined);\n      expect(dispatchedAction2.checkTranscriptsForImport).not.toEqual(undefined);\n    });\n    it('dispatches actions.video.load', () => {\n      expect(dispatchedLoad.load).toEqual({\n        videoSource: 'videOsOurce',\n        videoId: 'videOiD',\n        fallbackVideos: 'fALLbACKvIDeos',\n        allowVideoDownloads: testMetadata.download_video,\n        transcripts: testMetadata.transcripts,\n        allowTranscriptDownloads: testMetadata.download_track,\n        showTranscriptByDefault: testMetadata.show_captions,\n        duration: {\n          startTime: testMetadata.start_time,\n          stopTime: testMetadata.end_time,\n          total: 0,\n        },\n        handout: testMetadata.handout,\n        licenseType: 'liCENSEtyPe',\n        licenseDetails: {\n          attribution: true,\n          noncommercial: true,\n          noDerivatives: true,\n          shareAlike: false,\n        },\n        courseLicenseType: 'liCENSEtyPe',\n        courseLicenseDetails: {\n          attribution: true,\n          noncommercial: true,\n          noDerivatives: true,\n          shareAlike: false,\n        },\n        thumbnail: testMetadata.thumbnail,\n      });\n    });\n    it('dispatches actions.video.updateField on success', () => {\n      dispatch.mockClear();\n      dispatchedAction1.fetchVideoFeatures.onSuccess(mockVideoFeatures);\n      expect(dispatch).toHaveBeenCalledWith(actions.video.updateField({\n        allowThumbnailUpload: mockVideoFeatures.data.allowThumbnailUpload,\n        videoSharingEnabledForCourse: mockVideoFeatures.data.videoSharingEnabled,\n      }));\n      dispatch.mockClear();\n\n      dispatchedAction2.checkTranscriptsForImport.onSuccess(mockAllowTranscriptImport);\n      expect(dispatch).toHaveBeenCalledWith(actions.video.updateField({\n        allowTranscriptImport: true,\n      }));\n    });\n  });\n  describe('determineVideoSources', () => {\n    const edxVideoId = 'EDxviDEoiD';\n    const youtubeId = 'yOuTuBEiD';\n    const youtubeUrl = `https://youtu.be/${youtubeId}`;\n    const html5Sources = ['htmLOne', 'hTMlTwo', 'htMLthrEE'];\n    describe('when edx id, youtube id and source values are null', () => {\n      it('returns empty strings for ids and an empty array for sources', () => {\n        expect(thunkActions.determineVideoSources({\n          edxVideoId: null,\n          youtubeId: null,\n          html5Sources: null,\n        })).toEqual({\n          videoUrl: '',\n          videoId: '',\n          fallbackVideos: [],\n        });\n      });\n    });\n    describe('when there is an edx video id, youtube id and html5 sources', () => {\n      it('returns all three with the youtube id wrapped in url', () => {\n        expect(thunkActions.determineVideoSources({\n          edxVideoId,\n          youtubeId,\n          html5Sources,\n        })).toEqual({\n          videoUrl: youtubeUrl,\n          videoId: edxVideoId,\n          fallbackVideos: html5Sources,\n        });\n      });\n    });\n    describe('when there is only an edx video id', () => {\n      it('returns the edx video id for video source', () => {\n        expect(thunkActions.determineVideoSources({\n          edxVideoId,\n          youtubeId: '',\n          html5Sources: '',\n        })).toEqual({\n          videoUrl: '',\n          videoId: edxVideoId,\n          fallbackVideos: [],\n        });\n      });\n    });\n    describe('when there is no edx video id', () => {\n      it('returns the youtube url for video source and html5 sources for fallback videos', () => {\n        expect(thunkActions.determineVideoSources({\n          edxVideoId: '',\n          youtubeId,\n          html5Sources,\n        })).toEqual({\n          videoUrl: youtubeUrl,\n          videoId: '',\n          fallbackVideos: html5Sources,\n        });\n      });\n    });\n    describe('when there is no edx video id and no youtube id', () => {\n      it('returns the first html5 source for video url and the rest for fallback videos', () => {\n        expect(thunkActions.determineVideoSources({\n          edxVideoId: '',\n          youtubeId: '',\n          html5Sources,\n        })).toEqual({\n          videoUrl: 'htmLOne',\n          videoId: '',\n          fallbackVideos: ['hTMlTwo', 'htMLthrEE'],\n        });\n      });\n      it('returns the html5 source for video source and an array with 2 empty values for fallback videos', () => {\n        expect(thunkActions.determineVideoSources({\n          edxVideoId: '',\n          youtubeId: '',\n          html5Sources: ['htmlOne'],\n        })).toEqual({\n          videoUrl: 'htmlOne',\n          videoId: '',\n          fallbackVideos: [],\n        });\n      });\n    });\n    describe('when there is no edx video id, no youtube id and no html5 sources', () => {\n      it('returns an empty string for video source and an array with 2 empty values for fallback videos', () => {\n        expect(thunkActions.determineVideoSources({\n          edxVideoId: '',\n          youtubeId: '',\n          html5Sources: [],\n        })).toEqual({\n          videoUrl: '',\n          videoId: '',\n          fallbackVideos: [],\n        });\n      });\n    });\n  });\n  describe('parseTranscripts', () => {\n    const testStudioViewDataWithTranscripts = 'de descarga debajo del video.&#34;, &#34;value&#34;: &#34;&#34;, &#34;type&#34;: &#34;Generic&#34;, &#34;options&#34;: []}, &#34;transcripts&#34;: {&#34;explicitly_set&#34;: false, &#34;default_value&#34;: {}, &#34;field_name&#34;: &#34;transcripts&#34;, &#34;display_name&#34;: &#34;Idiomas de transcripci\\\\u00f3n&#34;, &#34;help&#34;: &#34;A\\\\u00f1ada transcripciones en diferentes idiomas. Haga clic a continuaci\\\\u00f3n para especificar un idioma y subir un archivo .srt de transcripci\\\\u00f3n para dicho idioma.&#34;, &#34;value&#34;: {&#34;aa&#34;: &#34;non_existent_dummy_file_name&#34;, &#34;ab&#34;: &#34;non_existent_dummy_file_name&#34;, &#34;ba&#34;: &#34;non_existent_dummy_file_name&#34;, &#34;en&#34;: &#34;external video-en.txt&#34;}, &#34;type&#34;: &#34;VideoTranslations&#34;, &#34;options&#34;: [], &#34;custom&#34;: true, &#34;languages&#34;: [{&#34;label&#34;: &#34;Abkhazian&#34;, &#34;code&#34;: &#34;ab&#34;}], &#34;urlRoot&#34;: &#34;/xblock/block-v1:GalileoX+XS_Mate001+3T2022+type@video+block@20bc09f5522d430f8e43c2bc377b348c/handler/studio_transcript/translation&#34;}, &#34;youtube_id_0_75&#34;: {';\n    const testStudioViewData = 'de descarga debajo del video.&#34;, &#34;value&#34;: &#34;&#34;, &#34;type&#34;: &#34;Generic&#34;, &#34;options&#34;: []}, &#34;transcripts&#34;: {&#34;explicitly_set&#34;: false, &#34;default_value&#34;: {}, &#34;field_name&#34;: &#34;transcripts&#34;, &#34;display_name&#34;: &#34;Idiomas de transcripci\\\\u00f3n&#34;, &#34;help&#34;: &#34;A\\\\u00f1ada transcripciones en diferentes idiomas. Haga clic a continuaci\\\\u00f3n para especificar un idioma y subir un archivo .srt de transcripci\\\\u00f3n para dicho idioma.&#34;, &#34;value&#34;: {}, &#34;type&#34;: &#34;VideoTranslations&#34;, &#34;options&#34;: [], &#34;custom&#34;: true, &#34;languages&#34;: [{&#34;label&#34;: &#34;Abkhazian&#34;, &#34;code&#34;: &#34;ab&#34;}], &#34;urlRoot&#34;: &#34;/xblock/block-v1:GalileoX+XS_Mate001+3T2022+type@video+block@20bc09f5522d430f8e43c2bc377b348c/handler/studio_transcript/translation&#34;}, &#34;youtube_id_0_75&#34;: {';\n    const testBadStudioViewData = 'tHiSiSaBAdDaTa';\n    it('returns an array of languages given a JSON string', () => {\n      expect(thunkActions.parseTranscripts({\n        transcriptsData: testStudioViewDataWithTranscripts,\n      })).toEqual(['aa', 'ab', 'ba', 'en']);\n    });\n    it('returns an empty array when there are no transcripts', () => {\n      expect(thunkActions.parseTranscripts({\n        transcriptsData: testStudioViewData,\n      })).toEqual([]);\n    });\n    it('returns an empty array given an unparsable JSON string', () => {\n      expect(thunkActions.parseTranscripts({\n        transcriptsData: testBadStudioViewData,\n      })).toEqual([]);\n    });\n  });\n  describe('parseLicense', () => {\n    const emptyLicenseData = null;\n    const noLicense = 'sOMeHTml data-metadata &#34;license&#34; &#34;value&#34;= null, &#34;type&#34;';\n    it('returns expected values for a license with no course license', () => {\n      expect(thunkActions.parseLicense({\n        licenseData: emptyLicenseData,\n        level: 'sOMElevEL',\n      })).toEqual([\n        null,\n        {},\n      ]);\n    });\n    it('returns expected values for a license with no block license', () => {\n      expect(thunkActions.parseLicense({\n        licenseData: noLicense,\n        level: 'block',\n      })).toEqual([\n        null,\n        {},\n      ]);\n    });\n    it('returns expected values for a license with all rights reserved', () => {\n      const license = 'sOMeHTml data-metadata &#34;license&#34; &#34;value&#34;: &#34;all-rights-reserved&#34;, &#34;type&#34;';\n      expect(thunkActions.parseLicense({\n        licenseData: license,\n        level: 'block',\n      })).toEqual([\n        'all-rights-reserved',\n        {},\n      ]);\n    });\n    it('returns expected type and options for creative commons', () => {\n      const license = 'sOMeHTml data-metadata &#34;license&#34; &#34;value&#34;: &#34;creative-commons: ver=4.0 BY NC ND&#34;, &#34;type&#34;';\n      expect(thunkActions.parseLicense({\n        licenseData: license,\n        level: 'block',\n      })).toEqual([\n        'creative-commons',\n        {\n          by: true,\n          nc: true,\n          nd: true,\n        },\n        '4.0',\n      ]);\n    });\n  });\n  describe('uploadHandout', () => {\n    beforeEach(() => {\n      thunkActions.uploadHandout({ file: mockFilename })(dispatch);\n      [[dispatchedAction]] = dispatch.mock.calls;\n    });\n    it('dispatches uploadAsset action', () => {\n      expect(dispatchedAction.uploadAsset).not.toBe(undefined);\n    });\n    test('passes file as image prop', () => {\n      expect(dispatchedAction.uploadAsset.asset).toEqual(mockFilename);\n    });\n    test('onSuccess: calls setSelection with camelized response.data.asset', () => {\n      const handout = mockFilename;\n      dispatchedAction.uploadAsset.onSuccess({ data: { asset: { url: mockFilename } } });\n      expect(dispatch).toHaveBeenCalledWith(actions.video.updateField({ handout }));\n    });\n  });\n  describe('uploadThumbnail', () => {\n    beforeEach(() => {\n      thunkActions.uploadThumbnail({ thumbnail: mockThumbnail })(dispatch, getState);\n      [[dispatchedAction]] = dispatch.mock.calls;\n    });\n    it('dispatches uploadThumbnail action', () => {\n      expect(dispatchedAction.uploadThumbnail).not.toEqual(undefined);\n    });\n    it('dispatches actions.video.updateField on success', () => {\n      dispatch.mockClear();\n      dispatchedAction.uploadThumbnail.onSuccess(mockThumbnailResponse);\n      expect(dispatch).toHaveBeenCalledWith(\n        actions.video.updateField({\n          thumbnail: thumbnailUrl,\n        }),\n      );\n    });\n  });\n  describe('uploadThumbnail - emptyCanvas', () => {\n    beforeEach(() => {\n      thunkActions.uploadThumbnail({ thumbnail: mockThumbnail, emptyCanvas: true })(dispatch, getState);\n      [[dispatchedAction]] = dispatch.mock.calls;\n    });\n    it('dispatches uploadThumbnail action', () => {\n      expect(dispatchedAction.uploadThumbnail).not.toEqual(undefined);\n    });\n  });\n  describe('importTranscript', () => {\n    beforeEach(() => {\n      thunkActions.importTranscript()(dispatch, getState);\n      [[dispatchedAction]] = dispatch.mock.calls;\n    });\n    it('dispatches uploadTranscript action', () => {\n      expect(dispatchedAction.importTranscript).not.toEqual(undefined);\n    });\n    it('dispatches actions.video.updateField on success', () => {\n      dispatch.mockClear();\n      dispatchedAction.importTranscript.onSuccess();\n      expect(dispatch).toHaveBeenCalledWith(actions.video.updateField(testUpload));\n    });\n  });\n  describe('deleteTranscript', () => {\n    beforeEach(() => {\n      thunkActions.deleteTranscript({ language: 'la' })(dispatch, getState);\n      [[dispatchedAction]] = dispatch.mock.calls;\n    });\n    it('dispatches deleteTranscript action', () => {\n      expect(dispatchedAction.deleteTranscript).not.toEqual(undefined);\n    });\n    it('dispatches actions.video.updateField on success', () => {\n      dispatch.mockClear();\n      dispatchedAction.deleteTranscript.onSuccess();\n      expect(dispatch).toHaveBeenCalledWith(actions.video.updateField({ transcripts: [] }));\n    });\n  });\n  describe('uploadTranscript', () => {\n    beforeEach(() => {\n      thunkActions.uploadTranscript({\n        language: mockLanguage,\n        filename: mockFilename,\n        file: mockFile,\n      })(dispatch, getState);\n      [[dispatchedAction]] = dispatch.mock.calls;\n    });\n    it('dispatches uploadTranscript action', () => {\n      expect(dispatchedAction.uploadTranscript).not.toEqual(undefined);\n    });\n    it('dispatches actions.video.updateField on success', () => {\n      dispatch.mockClear();\n      dispatchedAction.uploadTranscript.onSuccess();\n      expect(dispatch).toHaveBeenCalledWith(actions.video.updateField(testUpload));\n    });\n  });\n  describe('updateTranscriptLanguage', () => {\n    beforeEach(() => {\n      thunkActions.updateTranscriptLanguage({\n        newLanguageCode: mockLanguage,\n        languageBeforeChange: `${mockLanguage}i`,\n      })(dispatch, getState);\n      [[dispatchedAction]] = dispatch.mock.calls;\n    });\n    it('dispatches uploadTranscript action', () => {\n      expect(dispatchedAction.getTranscriptFile).not.toEqual(undefined);\n    });\n    it('dispatches actions.video.updateField on success', () => {\n      dispatch.mockClear();\n      dispatchedAction.getTranscriptFile.onSuccess({ data: 'sOme StRinG Data' });\n      expect(dispatch).toHaveBeenCalled();\n    });\n  });\n  describe('replaceTranscript', () => {\n    const spies = {};\n    beforeEach(() => {\n      spies.uploadTranscript = jest.spyOn(thunkActions, 'uploadTranscript')\n        .mockReturnValue(testReplaceUpload).mockName('uploadTranscript');\n      thunkActions.replaceTranscript({\n        newFile: mockFile,\n        newFilename: mockFilename,\n        language: mockLanguage,\n      })(dispatch, getState, spies.uploadTranscript);\n      [[dispatchedAction]] = dispatch.mock.calls;\n    });\n    it('dispatches deleteTranscript action', () => {\n      expect(dispatchedAction.deleteTranscript).not.toEqual(undefined);\n    });\n    it('dispatches actions.video.updateField and replaceTranscript success', () => {\n      dispatch.mockClear();\n      dispatchedAction.deleteTranscript.onSuccess();\n      expect(dispatch).toHaveBeenCalled();\n    });\n  });\n});\n"],"mappings":"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"}