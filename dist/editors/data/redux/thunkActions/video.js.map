{"version":3,"file":"video.js","names":["_","require","_utils","requests","_interopRequireWildcard","_module","_hooks","_api","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","_typeof","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","TypeError","iter","Symbol","iterator","Array","from","isArray","_arrayLikeToArray","_slicedToArray","i","_arrayWithHoles","_iterableToArrayLimit","_nonIterableRest","o","minLen","n","toString","slice","constructor","name","test","len","length","arr2","_i","_s","_e","_x","_r","_arr","_n","_d","next","done","push","value","err","loadVideoData","exports","dispatch","getState","_state$app$studioView","state","rawVideoData","app","blockValue","data","metadata","courseLicenseData","courseDetails","studioView","html","_module$determineVide","module","determineVideoSources","edxVideoId","edx_video_id","youtubeId","youtube_id_1_0","html5Sources","html5_sources","videoId","videoUrl","fallbackVideos","_module$parseLicense","parseLicense","licenseData","level","_module$parseLicense2","licenseType","licenseOptions","transcripts","parseTranscripts","transcriptsData","_module$parseLicense3","license","_module$parseLicense4","courseLicenseType","courseLicenseDetails","actions","video","load","videoSource","allowVideoDownloads","download_video","allowVideoSharing","public_access","allowTranscriptDownloads","download_track","showTranscriptByDefault","show_captions","duration","startTime","valueFromDuration","start_time","stopTime","end_time","total","handout","licenseDetails","attribution","by","noncommercial","nc","noDerivatives","nd","shareAlike","sa","thumbnail","fetchVideoFeatures","onSuccess","response","updateField","allowThumbnailUpload","videoSharingEnabledForCourse","videoSharingEnabled","youTubeId","parseYoutubeId","checkTranscriptsForImport","command","allowTranscriptImport","_ref","youtubeUrl","concat","_ref2","_ref3","cleanedStr","replace","startString","endString","transcriptsJson","substring","indexOf","transcriptsObj","JSON","parse","keys","error","SyntaxError","console","message","_ref4","metadataArr","split","forEach","parsedStr","includes","colonIndex","lastIndexOf","trim","optionStr","options","version","defaultVersion","option","_option$split","_option$split2","toLowerCase","saveVideoData","selectors","videoSettings","uploadThumbnail","_ref5","emptyCanvas","studioEndpointUrl","thumbnailUrl","image_url","startsWith","onFailure","e","log","UploadFailure","uploadHandout","_ref6","file","uploadAsset","asset","url","importTranscript","_state$video","transcriptsPlaceholderRemoved","removeItemOnce","uploadTranscript","_ref7","language","_state$video2","transcript","deleteTranscript","_ref8","_state$video3","updatedTranscripts","filter","langCode","updateTranscriptLanguage","_ref9","newLanguageCode","languageBeforeChange","_state$video4","getTranscriptDownloadUrl","getTranscriptFile","File","Blob","type","newTranscripts","replaceTranscript","_ref10","newFile","newFilename","filename","_default"],"sources":["../../../../../src/editors/data/redux/thunkActions/video.js"],"sourcesContent":["import { actions, selectors } from '..';\nimport { removeItemOnce } from '../../../utils';\nimport * as requests from './requests';\nimport * as module from './video';\nimport { valueFromDuration } from '../../../containers/VideoEditor/components/VideoSettingsModal/components/DurationWidget/hooks';\nimport { parseYoutubeId } from '../../services/cms/api';\n\nexport const loadVideoData = () => (dispatch, getState) => {\n  const state = getState();\n  const rawVideoData = state.app.blockValue.data.metadata ? state.app.blockValue.data.metadata : {};\n  const courseLicenseData = state.app.courseDetails.data ? state.app.courseDetails.data : {};\n  const studioView = state.app.studioView?.data?.html;\n  const {\n    videoId,\n    videoUrl,\n    fallbackVideos,\n  } = module.determineVideoSources({\n    edxVideoId: rawVideoData.edx_video_id,\n    youtubeId: rawVideoData.youtube_id_1_0,\n    html5Sources: rawVideoData.html5_sources,\n  });\n  const [licenseType, licenseOptions] = module.parseLicense({ licenseData: studioView, level: 'block' });\n  const transcripts = module.parseTranscripts({ transcriptsData: studioView });\n  const [courseLicenseType, courseLicenseDetails] = module.parseLicense({\n    licenseData: courseLicenseData.license,\n    level: 'course',\n  });\n\n  dispatch(actions.video.load({\n    videoSource: videoUrl || '',\n    videoId,\n    fallbackVideos,\n    allowVideoDownloads: rawVideoData.download_video,\n    allowVideoSharing: rawVideoData.public_access,\n    transcripts,\n    allowTranscriptDownloads: rawVideoData.download_track,\n    showTranscriptByDefault: rawVideoData.show_captions,\n    duration: { // TODO duration is not always sent so they should be calculated.\n      startTime: valueFromDuration(rawVideoData.start_time || '00:00:00'),\n      stopTime: valueFromDuration(rawVideoData.end_time || '00:00:00'),\n      total: 0, // TODO can we get total duration? if not, probably dropping from widget\n    },\n    handout: rawVideoData.handout,\n    licenseType,\n    licenseDetails: {\n      attribution: licenseOptions.by,\n      noncommercial: licenseOptions.nc,\n      noDerivatives: licenseOptions.nd,\n      shareAlike: licenseOptions.sa,\n    },\n    courseLicenseType,\n    courseLicenseDetails: {\n      attribution: courseLicenseDetails.by,\n      noncommercial: courseLicenseDetails.nc,\n      noDerivatives: courseLicenseDetails.nd,\n      shareAlike: courseLicenseDetails.sa,\n    },\n    thumbnail: rawVideoData.thumbnail,\n  }));\n  dispatch(requests.fetchVideoFeatures({\n    onSuccess: (response) => dispatch(actions.video.updateField({\n      allowThumbnailUpload: response.data.allowThumbnailUpload,\n      videoSharingEnabledForCourse: response.data.videoSharingEnabled,\n    })),\n  }));\n  const youTubeId = parseYoutubeId(videoUrl);\n  if (youTubeId) {\n    dispatch(requests.checkTranscriptsForImport({\n      videoId,\n      youTubeId,\n      onSuccess: (response) => {\n        if (response.data.command === 'import') {\n          dispatch(actions.video.updateField({\n            allowTranscriptImport: true,\n          }));\n        }\n      },\n    }));\n  }\n};\n\nexport const determineVideoSources = ({\n  edxVideoId,\n  youtubeId,\n  html5Sources,\n}) => {\n  const youtubeUrl = `https://youtu.be/${youtubeId}`;\n  let videoUrl;\n  let fallbackVideos;\n  if (youtubeId) {\n    [videoUrl, fallbackVideos] = [youtubeUrl, html5Sources];\n  } else if (Array.isArray(html5Sources) && html5Sources[0]) {\n    [videoUrl, fallbackVideos] = [html5Sources[0], html5Sources.slice(1)];\n  }\n  return {\n    videoId: edxVideoId || '',\n    videoUrl: videoUrl || '',\n    fallbackVideos: fallbackVideos || [],\n  };\n};\n\nexport const parseTranscripts = ({ transcriptsData }) => {\n  if (!transcriptsData) {\n    return [];\n  }\n  const cleanedStr = transcriptsData.replace(/&#34;/g, '\"');\n  const startString = '\"transcripts\": ';\n  const endString = ', \"youtube_id_0_75\": ';\n  const transcriptsJson = cleanedStr.substring(\n    cleanedStr.indexOf(startString) + startString.length,\n    cleanedStr.indexOf(endString),\n  );\n  // const transcriptsObj = JSON.parse(transcriptsJson);\n  try {\n    const transcriptsObj = JSON.parse(transcriptsJson);\n    return Object.keys(transcriptsObj.value);\n  } catch (error) {\n    if (error instanceof SyntaxError) {\n      console.error('Invalid JSON:', error.message);\n    } else {\n      throw error;\n    }\n    return [];\n  }\n};\n\n// partially copied from frontend-app-learning/src/courseware/course/course-license/CourseLicense.jsx\nexport const parseLicense = ({ licenseData, level }) => {\n  if (!licenseData) {\n    return [null, {}];\n  }\n  let license = licenseData;\n  if (level === 'block') {\n    const metadataArr = licenseData.split('data-metadata');\n    metadataArr.forEach(arr => {\n      const parsedStr = arr.replace(/&#34;/g, '\"');\n      if (parsedStr.includes('license')) {\n        license = parsedStr.substring(parsedStr.indexOf('\"value\"'), parsedStr.indexOf(', \"type\"')).replace(/\"value\": |\"/g, '');\n      }\n    });\n  }\n  if (!license || license.includes('null')) {\n    return [null, {}];\n  }\n  if (license === 'all-rights-reserved') {\n    // no options, so the entire thing is the license type\n    return [license, {}];\n  }\n  // Search for a colon character denoting the end\n  // of the license type and start of the options\n  const colonIndex = license.lastIndexOf(':');\n  // Split the license on the colon\n  const licenseType = license.slice(0, colonIndex).trim();\n  const optionStr = license.slice(colonIndex + 1).trim();\n  const options = {};\n  let version = '';\n\n  // Set the defaultVersion to 4.0\n  const defaultVersion = '4.0';\n  optionStr.split(' ').forEach(option => {\n    // Split the option into key and value\n    // Default the value to `true` if no value\n    let key = '';\n    let value = '';\n    if (option.indexOf('=') !== -1) {\n      [key, value] = option.split('=');\n    } else {\n      key = option;\n      value = true;\n    }\n\n    // Check for version\n    if (key === 'ver') {\n      version = value;\n    } else {\n      // Set the option key to lowercase to make\n      // it easier to query\n      options[key.toLowerCase()] = value;\n    }\n  });\n\n  // Set the version to whatever was included,\n  // using `defaultVersion` as a fallback if unset\n  version = version || defaultVersion;\n\n  return [licenseType, options, version];\n};\n\nexport const saveVideoData = () => (dispatch, getState) => {\n  const state = getState();\n  return selectors.video.videoSettings(state);\n};\n\nexport const uploadThumbnail = ({ thumbnail, emptyCanvas }) => (dispatch, getState) => {\n  const state = getState();\n  const { videoId } = state.video;\n  const { studioEndpointUrl } = state.app;\n  dispatch(requests.uploadThumbnail({\n    thumbnail,\n    videoId,\n    onSuccess: (response) => {\n      let thumbnailUrl;\n      if (response.data.image_url.startsWith('/')) {\n        // in local environments, image_url is a relative path\n        thumbnailUrl = studioEndpointUrl + response.data.image_url;\n      } else {\n        // in stage and production, image_url is an absolute path to the image\n        thumbnailUrl = response.data.image_url;\n      }\n      if (!emptyCanvas) {\n        dispatch(actions.video.updateField({\n          thumbnail: thumbnailUrl,\n        }));\n      }\n    },\n    onFailure: (e) => console.log({ UploadFailure: e }, 'Resampling thumbnail upload'),\n  }));\n};\n\n// Handout Thunks:\n\nexport const uploadHandout = ({ file }) => (dispatch) => {\n  dispatch(requests.uploadAsset({\n    asset: file,\n    onSuccess: (response) => {\n      const handout = response.data.asset.url;\n      dispatch(actions.video.updateField({ handout }));\n    },\n  }));\n};\n\n// Transcript Thunks:\n\nexport const importTranscript = () => (dispatch, getState) => {\n  const state = getState();\n  const { transcripts, videoSource } = state.video;\n  // Remove the placeholder '' from the unset language from the list of transcripts.\n  const transcriptsPlaceholderRemoved = (transcripts === []) ? transcripts : removeItemOnce(transcripts, '');\n\n  dispatch(requests.importTranscript({\n    youTubeId: parseYoutubeId(videoSource),\n    onSuccess: (response) => {\n      dispatch(actions.video.updateField({\n        transcripts: [\n          ...transcriptsPlaceholderRemoved,\n          'en'],\n      }));\n\n      if (selectors.video.videoId(state) === '') {\n        dispatch(actions.video.updateField({\n          videoId: response.data.edx_video_id,\n        }));\n      }\n    },\n  }));\n};\n\nexport const uploadTranscript = ({ language, file }) => (dispatch, getState) => {\n  const state = getState();\n  const { transcripts, videoId } = state.video;\n  // Remove the placeholder '' from the unset language from the list of transcripts.\n  const transcriptsPlaceholderRemoved = (transcripts === []) ? transcripts : removeItemOnce(transcripts, '');\n\n  dispatch(requests.uploadTranscript({\n    language,\n    videoId,\n    transcript: file,\n    onSuccess: (response) => {\n      // if we aren't replacing, add the language to the redux store.\n      if (!transcriptsPlaceholderRemoved.includes(language)) {\n        dispatch(actions.video.updateField({\n          transcripts: [\n            ...transcriptsPlaceholderRemoved,\n            language],\n        }));\n      }\n\n      if (selectors.video.videoId(state) === '') {\n        dispatch(actions.video.updateField({\n          videoId: response.data.edx_video_id,\n        }));\n      }\n    },\n  }));\n};\n\nexport const deleteTranscript = ({ language }) => (dispatch, getState) => {\n  const state = getState();\n  const { transcripts, videoId } = state.video;\n  dispatch(requests.deleteTranscript({\n    language,\n    videoId,\n    onSuccess: () => {\n      const updatedTranscripts = transcripts.filter((langCode) => langCode !== language);\n      dispatch(actions.video.updateField({ transcripts: updatedTranscripts }));\n    },\n  }));\n};\n\nexport const updateTranscriptLanguage = ({ newLanguageCode, languageBeforeChange }) => (dispatch, getState) => {\n  const state = getState();\n  const { video: { transcripts, videoId } } = state;\n  selectors.video.getTranscriptDownloadUrl(state);\n  dispatch(requests.getTranscriptFile({\n    videoId,\n    language: languageBeforeChange,\n    onSuccess: (response) => {\n      dispatch(requests.updateTranscriptLanguage({\n        languageBeforeChange,\n        file: new File([new Blob([response.data], { type: 'text/plain' })], `${videoId}_${newLanguageCode}.srt`, { type: 'text/plain' }),\n        newLanguageCode,\n        videoId,\n        onSuccess: () => {\n          const newTranscripts = transcripts\n            .filter(transcript => transcript !== languageBeforeChange);\n          newTranscripts.push(newLanguageCode);\n          dispatch(actions.video.updateField({ transcripts: newTranscripts }));\n        },\n      }));\n    },\n  }));\n};\n\nexport const replaceTranscript = ({ newFile, newFilename, language }) => (dispatch, getState) => {\n  const state = getState();\n  const { videoId } = state.video;\n  dispatch(requests.deleteTranscript({\n    language,\n    videoId,\n    onSuccess: () => {\n      dispatch(uploadTranscript({ language, file: newFile, filename: newFilename }));\n    },\n  }));\n};\n\nexport default {\n  loadVideoData,\n  determineVideoSources,\n  parseLicense,\n  saveVideoData,\n  uploadThumbnail,\n  importTranscript,\n  uploadTranscript,\n  deleteTranscript,\n  updateTranscriptLanguage,\n  replaceTranscript,\n  uploadHandout,\n};\n"],"mappings":"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"}