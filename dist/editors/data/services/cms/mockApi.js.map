{"version":3,"file":"mockApi.js","names":["urls","_interopRequireWildcard","require","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","_typeof","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","Symbol","iterator","constructor","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","value","_toPropertyKey","configurable","writable","arg","_toPrimitive","String","input","hint","prim","toPrimitive","undefined","res","TypeError","Number","mockPromise","returnValue","Promise","resolve","fetchBlockById","exports","_ref","blockId","studioEndpointUrl","data","display_name","metadata","download_track","download_video","edx_video_id","html5_sources","show_captions","sub","track","transcripts","en","filename","xml_attributes","youtube_id_1_0","markdown","attempts_before_showanswer_button","matlab_api_key","max_attempts","show_reset_button","showanswer","submission_wait_seconds","weight","fetchByUnitId","_ref2","ancestors","id","fetchAssets","_ref3","learningContextId","assets","displayName","contentType","dateAdded","url","externalUrl","portableUrl","thumbnail","locked","fetchCourseDetails","_ref4","license","checkTranscripts","_ref5","youTubeId","videoId","command","importTranscript","_ref6","fetchAdvanceSettings","_ref7","allow_unsupported_xblocks","fetchVideoFeatures","_ref8","allowThumbnailUpload","videoSharingEnabledForCourse","normalizeContent","_ref9","blockType","content","title","response","category","couseKey","has_changes","olx","settings","concat","saveBlock","_ref10","block","uploadAsset","_ref11","courseAssets","asset","content_type","date_added","external_url","portable_url","msg","fetchStudioView","_ref12","rerandomize","html","includes","checkTranscriptsForImport","uploadTranscript","fetchAdvancedSettings"],"sources":["../../../../../src/editors/data/services/cms/mockApi.js"],"sourcesContent":["/* istanbul ignore file */\nimport * as urls from './urls';\n\nconst mockPromise = (returnValue) => new Promise(resolve => resolve(returnValue));\n\n// TODO: update to return block data appropriate per block ID, which will equal block type\n// eslint-disable-next-line\nexport const fetchBlockById = ({ blockId, studioEndpointUrl }) => {\n  let data = {};\n  if (blockId === 'html-block-id') {\n    data = {\n      data: `<problem>\n      </problem>`,\n      display_name: 'My Text Prompt',\n      metadata: {\n        display_name: 'Welcome!',\n        download_track: true,\n        download_video: true,\n        edx_video_id: 'f36f06b5-92e5-47c7-bb26-bcf986799cb7',\n        html5_sources: [\n          'https://www.youtube.com/watch?v=dQw4w9WgXcQ',\n          'https://www.youtube.com/watch?v=dQw4w9WgXcQ',\n        ],\n        show_captions: true,\n        sub: '',\n        track: '',\n        transcripts: {\n          en: { filename: 'my-transcript-url' },\n        },\n        xml_attributes: {\n          source: '',\n        },\n        youtube_id_1_0: 'dQw4w9WgXcQ',\n      },\n    };\n  } else if (blockId === 'problem-block-id') {\n    data = {\n      data: `<problem>\n        </problem>`,\n      display_name: 'Dropdown',\n      metadata: {\n        markdown: `You can use this template as a guide to the simple editor markdown and OLX markup to use for dropdown problems. Edit this component to replace this template with your own assessment.\n        >>Add the question text, or prompt, here. This text is required.||You can add an optional tip or note related to the prompt like this. <<\n        [[\n        an incorrect answer\n        (the correct answer)\n        an incorrect answer\n        ]]`,\n        attempts_before_showanswer_button: 7,\n        matlab_api_key: 'sample_matlab_api_key',\n        max_attempts: 5,\n        show_reset_button: true,\n        showanswer: 'after_attempts',\n        submission_wait_seconds: 15,\n        weight: 29,\n      },\n    };\n  }\n  return mockPromise({ data: { ...data } });\n};\n\n// TODO: update to return block data appropriate per block ID, which will equal block type\n// eslint-disable-next-line\nexport const fetchByUnitId = ({ blockId, studioEndpointUrl }) => mockPromise({\n  data: { ancestors: [{ id: 'unitUrl' }] },\n});\n// eslint-disable-next-line\nexport const fetchAssets = ({ learningContextId, studioEndpointUrl }) => mockPromise({\n  data: {\n    assets: [\n      {\n        displayName: 'shahrukh.jpg',\n        contentType: 'image/jpeg',\n        dateAdded: 'Jan 05, 2022 at 17:38 UTC',\n        url: '/asset-v1:edX+test101+2021_T1+type@asset+block@shahrukh.jpg',\n        externalUrl: 'https://courses.edx.org/asset-v1:edX+test101+2021_T1+type@asset+block@shahrukh.jpg',\n        portableUrl: '/static/shahrukh.jpg',\n        thumbnail: '/asset-v1:edX+test101+2021_T1+type@thumbnail+block@shahrukh.jpg',\n        locked: false,\n        id: 'asset-v1:edX+test101+2021_T1+type@asset+block@shahrukh.jpg',\n      },\n      {\n        displayName: 'IMG_5899.jpg',\n        contentType: 'image/jpeg',\n        dateAdded: 'Nov 16, 2021 at 18:55 UTC',\n        url: '/asset-v1:edX+test101+2021_T1+type@asset+block@IMG_5899.jpg',\n        externalUrl: 'https://courses.edx.org/asset-v1:edX+test101+2021_T1+type@asset+block@IMG_5899.jpg',\n        portableUrl: '/static/IMG_5899.jpg',\n        thumbnail: '/asset-v1:edX+test101+2021_T1+type@thumbnail+block@IMG_5899.jpg',\n        locked: false,\n        id: 'asset-v1:edX+test101+2021_T1+type@asset+block@IMG_5899.jpg',\n      },\n      {\n        displayName: 'ccexample.srt',\n        contentType: 'application/octet-stream',\n        dateAdded: 'Nov 01, 2021 at 15:42 UTC',\n        url: '/asset-v1:edX+test101+2021_T1+type@asset+block@ccexample.srt',\n        externalUrl: 'https://courses.edx.org/asset-v1:edX+test101+2021_T1+type@asset+block@ccexample.srt',\n        portableUrl: '/static/ccexample.srt',\n        thumbnail: null,\n        locked: false,\n        id: 'asset-v1:edX+test101+2021_T1+type@asset+block@ccexample.srt',\n      },\n      {\n        displayName: 'Tennis Ball.jpeg',\n        contentType: 'image/jpeg',\n        dateAdded: 'Aug 04, 2021 at 16:52 UTC',\n        url: '/asset-v1:edX+test101+2021_T1+type@asset+block@Tennis_Ball.jpeg',\n        externalUrl: 'https://courses.edx.org/asset-v1:edX+test101+2021_T1+type@asset+block@Tennis_Ball.jpeg',\n        portableUrl: '/static/Tennis_Ball.jpeg',\n        thumbnail: '/asset-v1:edX+test101+2021_T1+type@thumbnail+block@Tennis_Ball-jpeg.jpg',\n        locked: false,\n        id: 'asset-v1:edX+test101+2021_T1+type@asset+block@Tennis_Ball.jpeg',\n      },\n    ],\n  },\n});\n// eslint-disable-next-line\nexport const fetchCourseDetails = ({ studioEndpointUrl, learningContextId }) => mockPromise({\n  data: {\n    // license: \"creative-commons: ver=4.0 BY NC\",\n    license: 'all-rights-reserved',\n  },\n});\n// eslint-disable-next-line\nexport const checkTranscripts = ({youTubeId, studioEndpointUrl, blockId, videoId}) => mockPromise({\n  data: {\n    command: 'import',\n  },\n});\n// eslint-disable-next-line\nexport const importTranscript = ({youTubeId, studioEndpointUrl, blockId}) => mockPromise({\n  data: {\n    edx_video_id: 'f36f06b5-92e5-47c7-bb26-bcf986799cb7',\n  },\n});\n// eslint-disable-next-line\nexport const fetchAdvanceSettings = ({ studioEndpointUrl, learningContextId }) => mockPromise({\n  data: { allow_unsupported_xblocks: { value: true } },\n});\n// eslint-disable-next-line\nexport const fetchVideoFeatures = ({ studioEndpointUrl, learningContextId }) => mockPromise({\n  data: {\n    allowThumbnailUpload: true,\n    videoSharingEnabledForCourse: true,\n  },\n});\n\nexport const normalizeContent = ({\n  blockId,\n  blockType,\n  content,\n  learningContextId,\n  title,\n}) => {\n  let response = {};\n  if (blockType === 'html') {\n    response = {\n      category: blockType,\n      couseKey: learningContextId,\n      data: content,\n      has_changes: true,\n      id: blockId,\n      metadata: { display_name: title },\n    };\n  } else if (blockType === 'problem') {\n    response = {\n      data: content.olx,\n      category: blockType,\n      couseKey: learningContextId,\n      has_changes: true,\n      id: blockId,\n      metadata: { display_name: title, ...content.settings },\n    };\n  } else {\n    throw new TypeError(`No Block in V2 Editors named /\"${blockType}/\", Cannot Save Content.`);\n  }\n  return { ...response };\n};\n\nexport const saveBlock = ({\n  blockId,\n  blockType,\n  content,\n  learningContextId,\n  studioEndpointUrl,\n  title,\n}) => mockPromise({\n  url: urls.block({ studioEndpointUrl, blockId }),\n  content: normalizeContent({\n    blockType,\n    content,\n    blockId,\n    learningContextId,\n    title,\n  }),\n});\n\nexport const uploadAsset = ({\n  learningContextId,\n  studioEndpointUrl,\n  // image,\n}) => mockPromise({\n  url: urls.courseAssets({ studioEndpointUrl, learningContextId }),\n  asset: {\n    asset: {\n      display_name: 'journey_escape.jpg',\n      content_type: 'image/jpeg',\n      date_added: 'Jan 05, 2022 at 21:26 UTC',\n      url: '/asset-v1:edX+test101+2021_T1+type@asset+block@journey_escape.jpg',\n      external_url: 'https://courses.edx.org/asset-v1:edX+test101+2021_T1+type@asset+block@journey_escape.jpg',\n      portable_url: '/static/journey_escape.jpg',\n      thumbnail: '/asset-v1:edX+test101+2021_T1+type@thumbnail+block@journey_escape.jpg',\n      locked: false,\n      id: 'asset-v1:edX+test101+2021_T1+type@asset+block@journey_escape.jpg',\n    },\n    msg: 'Upload completed',\n  },\n});\n\n// TODO: update to return block data appropriate per block ID, which will equal block type\n// eslint-disable-next-line\nexport const fetchStudioView = ({ blockId, studioEndpointUrl }) => {\n  let data = {};\n  if (blockId === 'html-block-id') {\n    data = {\n      data: '<p>Test prompt content</p>',\n      display_name: 'My Text Prompt',\n      metadata: {\n        display_name: 'Welcome!',\n        download_track: true,\n        download_video: true,\n        edx_video_id: 'f36f06b5-92e5-47c7-bb26-bcf986799cb7',\n        html5_sources: [\n          'https://www.youtube.com/watch?v=dQw4w9WgXcQ',\n          'https://www.youtube.com/watch?v=dQw4w9WgXcQ',\n        ],\n        show_captions: true,\n        sub: '',\n        track: '',\n        transcripts: {\n          en: { filename: 'my-transcript-url' },\n        },\n        xml_attributes: {\n          source: '',\n        },\n        youtube_id_1_0: 'dQw4w9WgXcQ',\n      },\n    };\n  } else if (blockId === 'problem-block-id') {\n    data = {\n      data: `<problem>\n      <optionresponse>\n          <p>You can use this template as a guide to the simple editor markdown and OLX markup to use for dropdown problems. Edit this component to replace this template with your own assessment.</p>\n          <label>Add the question text, or prompt, here. This text is required.</label>\n          <description>You can add an optional tip or note related to the prompt like this. </description>\n          <optioninput>\n              <option correct=\"False\">an incorrect answer</option>\n              <option correct=\"True\">the correct answer</option>\n              <option correct=\"False\">an incorrect answer</option>\n          </optioninput>\n      </optionresponse>\n  </problem>`,\n      display_name: 'Dropdown',\n      metadata: {\n        markdown: `You can use this template as a guide to the simple editor markdown and OLX markup to use for dropdown problems. Edit this component to replace this template with your own assessment.\n        >>Add the question text, or prompt, here. This text is required.||You can add an optional tip or note related to the prompt like this. <<\n        [[\n        an incorrect answer\n        (the correct answer)\n        an incorrect answer\n        ]]`,\n        attempts_before_showanswer_button: 7,\n        matlab_api_key: 'numerical_input_matlab_api_key',\n        max_attempts: 5,\n        rerandomize: 'per_student',\n        show_reset_button: true,\n        showanswer: 'after_attempts',\n        submission_wait_seconds: 15,\n        weight: 29,\n      },\n    };\n  }\n\n  return mockPromise({\n    data: {\n      // The following is sent for 'raw' editors.\n      html: blockId.includes('mockRaw') ? 'data-editor=\"raw\"' : '',\n      ...data,\n    },\n  });\n};\n\nexport const checkTranscriptsForImport = () => mockPromise({});\n\nexport const uploadTranscript = () => mockPromise({});\n\nexport const fetchAdvancedSettings = () => mockPromise({});\n"],"mappings":"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"}