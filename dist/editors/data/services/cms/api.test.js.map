{"version":3,"file":"api.test.js","names":["utils","_interopRequireWildcard","require","api","urls","_utils2","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","_typeof","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","Symbol","iterator","constructor","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","value","_toPropertyKey","configurable","writable","arg","_toPrimitive","String","input","hint","prim","toPrimitive","undefined","res","TypeError","Number","jest","mock","camelizeMap","camelized","requireActual","camelize","camelizeKeys","list","map","block","fn","mockName","blockAncestor","blockStudioView","courseAssets","videoTranscripts","allowThumbnailUpload","thumbnailUpload","checkTranscriptsForImport","replaceTranscript","videoFeatures","post","deleteObject","apiMethods","blockId","learningContextId","studioEndpointUrl","title","describe","beforeEach","clearAllMocks","it","fetchBlockById","expect","toHaveBeenCalledWith","fetchByUnitId","fetchStudioView","fetchAssets","test","content","normalizeContent","blockType","toEqual","category","courseKey","data","has_changes","id","metadata","display_name","videoSource","fallbackVideos","allowVideoDownloads","allowVideoSharing","thumbnail","transcripts","allowTranscriptDownloads","duration","startTime","stopTime","showTranscriptByDefault","handout","licenseType","licenseDetails","html5Sources","edxVideoId","youtubeId","license","spyOn","mockReturnValue","download_video","public_access","edx_video_id","html5_sources","youtube_id_1_0","download_track","track","show_captions","start_time","end_time","restoreAllMocks","toThrow","saveBlock","asset","photo","mockFormdata","FormData","append","uploadAsset","date","time","imageData","some","dateAdded","concat","loadImage","Date","getTime","_expect$toEqual","ids","testData","other","oldLoadImage","out","loadImages","videoId","uploadThumbnail","language","youTubeId","getJSON","parameters","encodeURIComponent","importTranscript","transcript","uploadTranscript","mockDeleteJSON","lang","deleteTranscript","mockJSON","getTranscript","youtubeUrl","afterEach","processVideoIds","videoUrl","isEdxVideo","testURLs","url","parseYoutubeId","badURL","processLicense","attribution","noncommercial","noDerivatives","shareAlike","args","fetchVideoFeatures"],"sources":["../../../../../src/editors/data/services/cms/api.test.js"],"sourcesContent":["import * as utils from '../../../utils';\nimport * as api from './api';\nimport * as urls from './urls';\nimport { get, post, deleteObject } from './utils';\n\njest.mock('../../../utils', () => {\n  const camelizeMap = (obj) => ({ ...obj, camelized: true });\n  return {\n    ...jest.requireActual('../../../utils'),\n    camelize: camelizeMap,\n    camelizeKeys: (list) => list.map(camelizeMap),\n  };\n});\n\njest.mock('./urls', () => ({\n  block: jest.fn().mockName('urls.block'),\n  blockAncestor: jest.fn().mockName('urls.blockAncestor'),\n  blockStudioView: jest.fn().mockName('urls.StudioView'),\n  courseAssets: jest.fn().mockName('urls.courseAssets'),\n  videoTranscripts: jest.fn().mockName('urls.videoTranscripts'),\n  allowThumbnailUpload: jest.fn().mockName('urls.allowThumbnailUpload'),\n  thumbnailUpload: jest.fn().mockName('urls.thumbnailUpload'),\n  checkTranscriptsForImport: jest.fn().mockName('urls.checkTranscriptsForImport'),\n  replaceTranscript: jest.fn().mockName('urls.replaceTranscript'),\n  videoFeatures: jest.fn().mockName('urls.videoFeatures'),\n}));\n\njest.mock('./utils', () => ({\n  get: jest.fn().mockName('get'),\n  post: jest.fn().mockName('post'),\n  deleteObject: jest.fn().mockName('deleteObject'),\n}));\n\nconst { camelize } = utils;\n\nconst { apiMethods } = api;\n\nconst blockId = 'coursev1:2uX@4345432';\nconst learningContextId = 'demo2uX';\nconst studioEndpointUrl = 'hortus.coa';\nconst title = 'remember this needs to go into metadata to save';\n\ndescribe('cms api', () => {\n  beforeEach(() => {\n    jest.clearAllMocks();\n  });\n  describe('apiMethods', () => {\n    describe('fetchBlockId', () => {\n      it('should call get with url.blocks', () => {\n        apiMethods.fetchBlockById({ blockId, studioEndpointUrl });\n        expect(get).toHaveBeenCalledWith(urls.block({ blockId, studioEndpointUrl }));\n      });\n    });\n\n    describe('fetchByUnitId', () => {\n      it('should call get with url.blockAncestor', () => {\n        apiMethods.fetchByUnitId({ blockId, studioEndpointUrl });\n        expect(get).toHaveBeenCalledWith(urls.blockAncestor({ studioEndpointUrl, blockId }));\n      });\n    });\n\n    describe('fetchStudioView', () => {\n      it('should call get with url.blockStudioView', () => {\n        apiMethods.fetchStudioView({ blockId, studioEndpointUrl });\n        expect(get).toHaveBeenCalledWith(urls.blockStudioView({ studioEndpointUrl, blockId }));\n      });\n    });\n\n    describe('fetchAssets', () => {\n      it('should call get with url.courseAssets', () => {\n        apiMethods.fetchAssets({ learningContextId, studioEndpointUrl });\n        expect(get).toHaveBeenCalledWith(urls.courseAssets({ studioEndpointUrl, learningContextId }));\n      });\n    });\n\n    describe('normalizeContent', () => {\n      test('return value for blockType: html', () => {\n        const content = 'Im baby palo santo ugh celiac fashion axe. La croix lo-fi venmo whatever. Beard man braid migas single-origin coffee forage ramps.';\n        expect(apiMethods.normalizeContent({\n          blockId,\n          blockType: 'html',\n          content,\n          learningContextId,\n          title,\n        })).toEqual({\n          category: 'html',\n          courseKey: learningContextId,\n          data: content,\n          has_changes: true,\n          id: blockId,\n          metadata: { display_name: title },\n        });\n      });\n      test('return value for blockType: video', () => {\n        const content = {\n          videoSource: 'viDeOSouRCE',\n          fallbackVideos: 'FalLBacKVidEOs',\n          allowVideoDownloads: 'alLOwViDeodownLOads',\n          allowVideoSharing: 'alloWviDeOshArinG',\n          thumbnail: 'THUmbNaIL',\n          transcripts: 'traNScRiPts',\n          allowTranscriptDownloads: 'aLloWTRaNScriPtdoWnlOADS',\n          duration: {\n            startTime: '00:00:00',\n            stopTime: '00:00:00',\n          },\n          showTranscriptByDefault: 'ShOWtrANscriPTBYDeFAulT',\n          handout: 'HAnDOuT',\n          licenseType: 'LiCeNsETYpe',\n          licenseDetails: 'liCENSeDetAIls',\n        };\n        const html5Sources = 'hTML5souRCES';\n        const edxVideoId = 'eDXviDEOid';\n        const youtubeId = 'yOUtUBeid';\n        const license = 'LiCEnsE';\n        jest.spyOn(api, 'processVideoIds').mockReturnValue({\n          html5Sources,\n          edxVideoId,\n          youtubeId,\n        });\n        jest.spyOn(api, 'processLicense').mockReturnValue(license);\n        expect(apiMethods.normalizeContent({\n          blockId,\n          blockType: 'video',\n          content,\n          learningContextId,\n          title,\n        })).toEqual({\n          category: 'video',\n          courseKey: learningContextId,\n          display_name: title,\n          id: blockId,\n          metadata: {\n            display_name: title,\n            download_video: content.allowVideoDownloads,\n            public_access: content.allowVideoSharing,\n            edx_video_id: edxVideoId,\n            html5_sources: html5Sources,\n            youtube_id_1_0: youtubeId,\n            thumbnail: content.thumbnail,\n            download_track: content.allowTranscriptDownloads,\n            track: '',\n            show_captions: content.showTranscriptByDefault,\n            handout: content.handout,\n            start_time: content.duration.startTime,\n            end_time: content.duration.stopTime,\n            license,\n          },\n        });\n        jest.restoreAllMocks();\n      });\n      test('throw error for invalid blockType', () => {\n        expect(() => { apiMethods.normalizeContent({ blockType: 'somethingINVALID' }); })\n          .toThrow(TypeError);\n      });\n    });\n\n    describe('saveBlock', () => {\n      const content = 'Im baby palo santo ugh celiac fashion axe. La croix lo-fi venmo whatever. Beard man braid migas single-origin coffee forage ramps.';\n      it('should call post with urls.block and normalizeContent', () => {\n        apiMethods.saveBlock({\n          blockId,\n          blockType: 'html',\n          content,\n          learningContextId,\n          studioEndpointUrl,\n          title,\n        });\n        expect(post).toHaveBeenCalledWith(\n          urls.block({ studioEndpointUrl }),\n          apiMethods.normalizeContent({\n            blockType: 'html',\n            content,\n            blockId,\n            learningContextId,\n            title,\n          }),\n        );\n      });\n    });\n\n    describe('uploadAsset', () => {\n      const asset = { photo: 'dAta' };\n      it('should call post with urls.courseAssets and imgdata', () => {\n        const mockFormdata = new FormData();\n        mockFormdata.append('file', asset);\n        apiMethods.uploadAsset({\n          learningContextId,\n          studioEndpointUrl,\n          asset,\n        });\n        expect(post).toHaveBeenCalledWith(\n          urls.courseAssets({ studioEndpointUrl, learningContextId }),\n          mockFormdata,\n        );\n      });\n    });\n  });\n  describe('loadImage', () => {\n    it('loads incoming image data, replacing the dateAdded with a date field', () => {\n      const [date, time] = ['Jan 20, 2022', '9:30 PM'];\n      const imageData = { some: 'image data', dateAdded: `${date} at ${time}` };\n      expect(api.loadImage(imageData)).toEqual({\n        ...imageData,\n        dateAdded: new Date(`${date} ${time}`).getTime(),\n      });\n    });\n  });\n  describe('loadImages', () => {\n    it('loads a list of images into an object by id, using loadImage to translate', () => {\n      const ids = ['id0', 'Id1', 'ID2', 'iD3'];\n      const testData = [\n        { id: ids[0], some: 'data' },\n        { id: ids[1], other: 'data' },\n        { id: ids[2], some: 'DATA' },\n        { id: ids[3], other: 'DATA' },\n      ];\n      const oldLoadImage = api.loadImage;\n      api.loadImage = (imageData) => ({ loadImage: imageData });\n      const out = api.loadImages(testData);\n      expect(out).toEqual({\n        [ids[0]]: api.loadImage(camelize(testData[0])),\n        [ids[1]]: api.loadImage(camelize(testData[1])),\n        [ids[2]]: api.loadImage(camelize(testData[2])),\n        [ids[3]]: api.loadImage(camelize(testData[3])),\n      });\n      api.loadImage = oldLoadImage;\n    });\n  });\n  describe('uploadThumbnail', () => {\n    describe('uploadThumbnail', () => {\n      const thumbnail = 'dAta';\n      const videoId = 'sOmeVIDeoiD';\n      it('should call post with urls.thumbnailUpload and thumbnail data', () => {\n        const mockFormdata = new FormData();\n        mockFormdata.append('file', thumbnail);\n        apiMethods.uploadThumbnail({\n          studioEndpointUrl,\n          learningContextId,\n          videoId,\n          thumbnail,\n        });\n        expect(post).toHaveBeenCalledWith(\n          urls.thumbnailUpload({ studioEndpointUrl, learningContextId, videoId }),\n          mockFormdata,\n        );\n      });\n    });\n  });\n  describe('videoTranscripts', () => {\n    const language = 'la';\n    const videoId = 'sOmeVIDeoiD';\n    const youTubeId = 'SOMeyoutUBeid';\n    describe('checkTranscriptsForImport', () => {\n      const getJSON = `{\"locator\":\"${blockId}\",\"videos\":[{\"mode\":\"youtube\",\"video\":\"${youTubeId}\",\"type\":\"youtube\"},{\"mode\":\"edx_video_id\",\"type\":\"edx_video_id\",\"video\":\"${videoId}\"}]}`;\n      it('should call get with url.checkTranscriptsForImport', () => {\n        apiMethods.checkTranscriptsForImport({\n          studioEndpointUrl,\n          blockId,\n          videoId,\n          youTubeId,\n        });\n        expect(get).toHaveBeenCalledWith(urls.checkTranscriptsForImport({\n          studioEndpointUrl,\n          parameters: encodeURIComponent(getJSON),\n        }));\n      });\n    });\n    describe('importTranscript', () => {\n      const getJSON = `{\"locator\":\"${blockId}\",\"videos\":[{\"mode\":\"youtube\",\"video\":\"${youTubeId}\",\"type\":\"youtube\"}]}`;\n      it('should call get with url.replaceTranscript', () => {\n        apiMethods.importTranscript({ studioEndpointUrl, blockId, youTubeId });\n        expect(get).toHaveBeenCalledWith(urls.replaceTranscript({\n          studioEndpointUrl,\n          parameters: encodeURIComponent(getJSON),\n        }));\n      });\n    });\n    describe('uploadTranscript', () => {\n      const transcript = { transcript: 'dAta' };\n      it('should call post with urls.videoTranscripts and transcript data', () => {\n        const mockFormdata = new FormData();\n        mockFormdata.append('file', transcript);\n        mockFormdata.append('edx_video_id', videoId);\n        mockFormdata.append('language_code', language);\n        mockFormdata.append('new_language_code', language);\n        apiMethods.uploadTranscript({\n          blockId,\n          studioEndpointUrl,\n          transcript,\n          videoId,\n          language,\n        });\n        expect(post).toHaveBeenCalledWith(\n          urls.videoTranscripts({ studioEndpointUrl, blockId }),\n          mockFormdata,\n        );\n      });\n    });\n    describe('transcript delete', () => {\n      it('should call deleteObject with urls.videoTranscripts and transcript data', () => {\n        const mockDeleteJSON = { data: { lang: language, edx_video_id: videoId } };\n        apiMethods.deleteTranscript({\n          blockId,\n          studioEndpointUrl,\n          videoId,\n          language,\n        });\n        expect(deleteObject).toHaveBeenCalledWith(\n          urls.videoTranscripts({ studioEndpointUrl, blockId }),\n          mockDeleteJSON,\n        );\n      });\n    });\n    describe('transcript get', () => {\n      it('should call get with urls.videoTranscripts and transcript data', () => {\n        const mockJSON = { data: { lang: language, edx_video_id: videoId } };\n        apiMethods.getTranscript({\n          blockId,\n          studioEndpointUrl,\n          videoId,\n          language,\n        });\n        expect(get).toHaveBeenCalledWith(\n          `${urls.videoTranscripts({ studioEndpointUrl, blockId })}?language_code=${language}`,\n          mockJSON,\n        );\n      });\n    });\n  });\n  describe('processVideoIds', () => {\n    const edxVideoId = 'eDXviDEoid';\n    const youtubeId = 'yOuTuBeUrL';\n    const youtubeUrl = `https://youtu.be/${youtubeId}`;\n    const html5Sources = [\n      'sOuRce1',\n      'sourCE2',\n    ];\n    afterEach(() => {\n      jest.restoreAllMocks();\n    });\n    describe('if there is a video id', () => {\n      beforeEach(() => {\n        jest.spyOn(api, 'isEdxVideo').mockReturnValue(true);\n        jest.spyOn(api, 'parseYoutubeId').mockReturnValue(youtubeId);\n      });\n      it('returns edxVideoId when there are no fallbackVideos', () => {\n        expect(api.processVideoIds({\n          videoUrl: '',\n          fallbackVideos: [],\n          videoId: edxVideoId,\n        })).toEqual({\n          edxVideoId,\n          html5Sources: [],\n          youtubeId: '',\n        });\n      });\n      it('returns edxVideoId and html5Sources when there are fallbackVideos', () => {\n        expect(api.processVideoIds({\n          videoUrl: youtubeUrl,\n          fallbackVideos: html5Sources,\n          videoId: edxVideoId,\n        })).toEqual({\n          edxVideoId,\n          html5Sources,\n          youtubeId,\n        });\n      });\n    });\n    describe('if there is a youtube url', () => {\n      beforeEach(() => {\n        jest.spyOn(api, 'isEdxVideo').mockReturnValue(false);\n        jest.spyOn(api, 'parseYoutubeId').mockReturnValue(youtubeId);\n      });\n      it('returns youtubeId when there are no fallbackVideos', () => {\n        expect(api.processVideoIds({\n          videoUrl: youtubeUrl,\n          fallbackVideos: [],\n          videoId: '',\n        })).toEqual({\n          edxVideoId: '',\n          html5Sources: [],\n          youtubeId,\n        });\n      });\n      it('returns youtubeId and html5Sources when there are fallbackVideos', () => {\n        expect(api.processVideoIds({\n          videoUrl: youtubeUrl,\n          fallbackVideos: html5Sources,\n          videoId: '',\n        })).toEqual({\n          edxVideoId: '',\n          html5Sources,\n          youtubeId,\n        });\n      });\n    });\n    describe('if the videoSource is an html5 source', () => {\n      beforeEach(() => {\n        jest.spyOn(api, 'isEdxVideo').mockReturnValue(false);\n        jest.spyOn(api, 'parseYoutubeId').mockReturnValue(null);\n      });\n      it('returns html5Sources when there are no fallbackVideos', () => {\n        expect(api.processVideoIds({\n          videoUrl: html5Sources[0],\n          fallbackVideos: [],\n          videoId: '',\n        })).toEqual({\n          edxVideoId: '',\n          html5Sources: [html5Sources[0]],\n          youtubeId: '',\n        });\n      });\n      it('returns html5Sources when there are fallbackVideos', () => {\n        expect(api.processVideoIds({\n          videoUrl: html5Sources[0],\n          fallbackVideos: [html5Sources[1]],\n          videoId: '',\n        })).toEqual({\n          edxVideoId: '',\n          html5Sources,\n          youtubeId: '',\n        });\n      });\n    });\n  });\n  describe('isEdxVideo', () => {\n    it('returns true if id is in uuid4 format', () => {\n      const id = 'c2afd8c8-3329-4dfc-95be-4ee6d986c3e5';\n      expect(api.isEdxVideo(id)).toEqual(true);\n    });\n    it('returns false if id is not in uuid4 format', () => {\n      const id = 'someB-ad-Id';\n      expect(api.isEdxVideo(id)).toEqual(false);\n    });\n  });\n  describe('parseYoutubeId', () => {\n    it('returns the youtube id in an url', () => {\n      const id = '3_yD_cEKoCk';\n      const testURLs = [\n        'https://www.youtube.com/watch?v=3_yD_cEKoCk&feature=featured',\n        'https://www.youtube.com/watch?v=3_yD_cEKoCk',\n        'http://www.youtube.com/watch?v=3_yD_cEKoCk',\n        '//www.youtube.com/watch?v=3_yD_cEKoCk',\n        'www.youtube.com/watch?v=3_yD_cEKoCk',\n        'https://youtube.com/watch?v=3_yD_cEKoCk',\n        'http://youtube.com/watch?v=3_yD_cEKoCk',\n        '//youtube.com/watch?v=3_yD_cEKoCk',\n        'youtube.com/watch?v=3_yD_cEKoCk',\n        'https://m.youtube.com/watch?v=3_yD_cEKoCk',\n        'http://m.youtube.com/watch?v=3_yD_cEKoCk',\n        '//m.youtube.com/watch?v=3_yD_cEKoCk',\n        'm.youtube.com/watch?v=3_yD_cEKoCk',\n        'https://www.youtube.com/v/3_yD_cEKoCk?fs=1&hl=en_US',\n        'http://www.youtube.com/v/3_yD_cEKoCk?fs=1&hl=en_US',\n        '//www.youtube.com/v/3_yD_cEKoCk?fs=1&hl=en_US',\n        'www.youtube.com/v/3_yD_cEKoCk?fs=1&hl=en_US',\n        'youtube.com/v/3_yD_cEKoCk?fs=1&hl=en_US',\n        'https://www.youtube.com/embed/3_yD_cEKoCk?autoplay=1',\n        'https://www.youtube.com/embed/3_yD_cEKoCk',\n        'http://www.youtube.com/embed/3_yD_cEKoCk',\n        '//www.youtube.com/embed/3_yD_cEKoCk',\n        'www.youtube.com/embed/3_yD_cEKoCk',\n        'https://youtube.com/embed/3_yD_cEKoCk',\n        'http://youtube.com/embed/3_yD_cEKoCk',\n        '//youtube.com/embed/3_yD_cEKoCk',\n        'youtube.com/embed/3_yD_cEKoCk',\n        'https://youtu.be/3_yD_cEKoCk?t=120',\n        'https://youtu.be/3_yD_cEKoCk',\n        'http://youtu.be/3_yD_cEKoCk',\n        '//youtu.be/3_yD_cEKoCk',\n        'youtu.be/3_yD_cEKoCk',\n      ];\n      testURLs.forEach((url) => {\n        expect(api.parseYoutubeId(url)).toEqual(id);\n      });\n    });\n    it('returns null if the url is not a youtube url', () => {\n      const badURL = 'https://someothersite.com/3_yD_cEKoCk';\n      expect(api.parseYoutubeId(badURL)).toEqual(null);\n    });\n  });\n  describe('processLicense', () => {\n    it('returns empty string when licenseType is empty or not a valid licnese type', () => {\n      expect(api.processLicense('', {})).toEqual('');\n      expect(api.processLicense('LiCeNsETYpe', {})).toEqual('');\n    });\n    it('returns empty string when licenseType equals creative commons', () => {\n      const licenseType = 'creative-commons';\n      const licenseDetails = {\n        attribution: true,\n        noncommercial: false,\n        noDerivatives: true,\n        shareAlike: false,\n      };\n      expect(api.processLicense(licenseType, licenseDetails)).toEqual('creative-commons: ver=4.0 BY ND');\n    });\n    it('returns empty string when licenseType equals creative commons', () => {\n      const licenseType = 'all-rights-reserved';\n      const licenseDetails = {};\n      expect(api.processLicense(licenseType, licenseDetails)).toEqual('all-rights-reserved');\n    });\n  });\n  describe('fetchVideoFeatures', () => {\n    it('should call get with url.videoFeatures', () => {\n      const args = { studioEndpointUrl, learningContextId };\n      apiMethods.fetchVideoFeatures({ ...args });\n      expect(get).toHaveBeenCalledWith(urls.videoFeatures({ ...args }));\n    });\n  });\n});\n"],"mappings":"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"}