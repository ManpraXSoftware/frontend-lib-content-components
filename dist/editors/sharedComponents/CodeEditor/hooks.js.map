{"version":3,"file":"hooks.js","names":["_react","_interopRequireWildcard","require","_codemirror","_state","_view","_langHtml","_langXml","_constants","_interopRequireDefault","obj","__esModule","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","_typeof","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","TypeError","o","minLen","_arrayLikeToArray","n","toString","slice","constructor","name","Array","from","test","len","length","arr2","_i","Symbol","iterator","_s","_e","_x","_r","_arr","_n","_d","next","done","push","value","err","isArray","CODEMIRROR_LANGUAGES","HTML","XML","state","exports","showBtnEscapeHTML","val","React","useState","prepareShowBtnEscapeHTML","_state$showBtnEscapeH","_state$showBtnEscapeH2","visibility","setVisibility","hide","hideBtn","cleanHTML","_ref","initialText","translateRegex","RegExp","concat","keys","alphanumericMap","join","translator","$0","$1","replace","createCodeMirrorDomNode","_ref2","ref","upstreamRef","lang","useEffect","languageExtension","html","xml","cleanText","newState","EditorState","create","doc","extensions","basicSetup","EditorView","lineWrapping","view","parent","current","focus","destroy","escapeHTMLSpecialChars","_ref3","text","pos","changes","forEach","escapedKeyword","indexOf","to","insert","dispatch"],"sources":["../../../../src/editors/sharedComponents/CodeEditor/hooks.js"],"sourcesContent":["import React, { useEffect } from 'react';\n\nimport { basicSetup } from 'codemirror';\nimport { EditorState } from '@codemirror/state';\nimport { EditorView } from '@codemirror/view';\nimport { html } from '@codemirror/lang-html';\nimport { xml } from '@codemirror/lang-xml';\n\nimport alphanumericMap from './constants';\nimport './index.scss';\n\nconst CODEMIRROR_LANGUAGES = { HTML: 'html', XML: 'xml' };\n\nexport const state = {\n  showBtnEscapeHTML: (val) => React.useState(val),\n};\n\nexport const prepareShowBtnEscapeHTML = () => {\n  const [visibility, setVisibility] = state.showBtnEscapeHTML(true);\n  const hide = () => setVisibility(false);\n  return { showBtnEscapeHTML: visibility, hideBtn: hide };\n};\n\nexport const cleanHTML = ({ initialText }) => {\n  const translateRegex = new RegExp(`&(${Object.keys(alphanumericMap).join('|')});`, 'g');\n  const translator = ($0, $1) => alphanumericMap[$1];\n  return initialText.replace(translateRegex, translator);\n};\n\nexport const createCodeMirrorDomNode = ({\n  ref,\n  initialText,\n  upstreamRef,\n  lang,\n}) => {\n  useEffect(() => {\n    const languageExtension = lang === CODEMIRROR_LANGUAGES.HTML ? html() : xml();\n    const cleanText = cleanHTML({ initialText });\n    const newState = EditorState.create({\n      doc: cleanText,\n      extensions: [basicSetup, languageExtension, EditorView.lineWrapping],\n    });\n    const view = new EditorView({ state: newState, parent: ref.current });\n    // eslint-disable-next-line no-param-reassign\n    upstreamRef.current = view;\n    view.focus();\n\n    return () => {\n      // called on cleanup\n      view.destroy();\n    };\n  }, []);\n};\n\nexport const escapeHTMLSpecialChars = ({ ref, hideBtn }) => {\n  const text = ref.current.state.doc.toString();\n  let pos = 0;\n  const changes = [];\n  Object.keys(alphanumericMap).forEach(\n    (escapedKeyword) => {\n      // eslint-disable-next-line no-cond-assign\n      for (let next; (next = text.indexOf(alphanumericMap[escapedKeyword], pos)) > -1;) {\n        changes.push({ from: next, to: next + 1, insert: `&${escapedKeyword};` });\n        pos = next + 1;\n      }\n    },\n  );\n\n  ref.current.dispatch({ changes });\n  hideBtn();\n};\n"],"mappings":"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"}