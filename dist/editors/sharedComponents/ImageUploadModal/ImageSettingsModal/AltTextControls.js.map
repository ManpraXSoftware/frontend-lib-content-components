{"version":3,"file":"AltTextControls.js","names":["_react","_interopRequireDefault","require","_propTypes","_paragon","_i18n","hooks","_interopRequireWildcard","_messages","_jsxRuntime","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","_typeof","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","Symbol","iterator","constructor","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","value","_toPropertyKey","configurable","writable","arg","_toPrimitive","String","input","hint","prim","toPrimitive","undefined","res","TypeError","Number","AltTextControls","exports","_ref","isDecorative","setIsDecorative","setValue","validation","intl","jsxs","Form","Group","className","children","jsx","Label","as","FormattedMessage","messages","accessibilityLabel","Control","disabled","floatingLabel","formatMessage","altTextFloatingLabel","isInvalid","show","onChange","onInputChange","type","Feedback","altTextLocalFeedback","Checkbox","checked","onCheckboxChange","decorativeAltTextCheckboxLabel","propTypes","error","PropTypes","shape","bool","isRequired","func","string","intlShape","_default","injectIntl"],"sources":["../../../../../src/editors/sharedComponents/ImageUploadModal/ImageSettingsModal/AltTextControls.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Form } from '@edx/paragon';\nimport { FormattedMessage, injectIntl, intlShape } from '@edx/frontend-platform/i18n';\n\nimport * as hooks from './hooks';\nimport messages from './messages';\n\n/**\n * Wrapper for alt-text input and isDecorative checkbox control\n * @param {obj} errorProps - props for error handling\n *   {bool} isValid - are alt-text fields valid for saving?\n * @param {bool} isDecorative - is the image decorative?\n * @param {func} setIsDecorative - handle isDecorative change event\n * @param {func} setValue - update alt-text value\n * @param {string} value - current alt-text value\n */\nexport const AltTextControls = ({\n  isDecorative,\n  setIsDecorative,\n  setValue,\n  validation,\n  value,\n  // inject\n  intl,\n}) => (\n  <Form.Group className=\"mt-4.5\">\n    <Form.Label as=\"h4\">\n      <FormattedMessage {...messages.accessibilityLabel} />\n    </Form.Label>\n    <Form.Control\n      className=\"mt-4.5\"\n      disabled={isDecorative}\n      floatingLabel={intl.formatMessage(messages.altTextFloatingLabel)}\n      isInvalid={validation.show}\n      onChange={hooks.onInputChange(setValue)}\n      type=\"input\"\n      value={value}\n    />\n    {validation.show\n      && (\n        <Form.Control.Feedback type=\"invalid\">\n          <FormattedMessage {...messages.altTextLocalFeedback} />\n        </Form.Control.Feedback>\n      )}\n    <Form.Checkbox\n      checked={isDecorative}\n      className=\"mt-4.5 decorative-control-label\"\n      onChange={hooks.onCheckboxChange(setIsDecorative)}\n    >\n      <Form.Label>\n        <FormattedMessage {...messages.decorativeAltTextCheckboxLabel} />\n      </Form.Label>\n    </Form.Checkbox>\n  </Form.Group>\n);\nAltTextControls.propTypes = {\n  error: PropTypes.shape({\n    show: PropTypes.bool,\n  }).isRequired,\n  isDecorative: PropTypes.bool.isRequired,\n  setValue: PropTypes.func.isRequired,\n  setIsDecorative: PropTypes.func.isRequired,\n  validation: PropTypes.shape({\n    show: PropTypes.bool,\n  }).isRequired,\n  value: PropTypes.string.isRequired,\n  // inject\n  intl: intlShape.isRequired,\n};\n\nexport default injectIntl(AltTextControls);\n"],"mappings":"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"}