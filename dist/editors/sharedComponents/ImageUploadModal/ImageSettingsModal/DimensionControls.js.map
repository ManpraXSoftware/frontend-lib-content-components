{"version":3,"file":"DimensionControls.js","names":["_react","_interopRequireDefault","require","_propTypes","_paragon","_icons","_i18n","_hooks","_messages","_jsxRuntime","obj","__esModule","_typeof","Symbol","iterator","constructor","prototype","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","value","_toPropertyKey","configurable","writable","arg","_toPrimitive","String","input","hint","prim","toPrimitive","undefined","res","call","TypeError","Number","DimensionControls","exports","_ref","isLocked","lock","setHeight","setWidth","unlock","updateDimensions","intl","jsxs","Form","Group","children","jsx","Label","as","FormattedMessage","messages","imageDimensionsLabel","className","Control","width","onChange","hooks","onInputChange","onBlur","floatingLabel","formatMessage","widthFloatingLabel","height","heightFloatingLabel","IconButton","alt","unlockDimensionsLabel","lockDimensionsLabel","iconAs","Icon","src","Locked","Unlocked","onClick","defaultProps","propTypes","PropTypes","shape","string","func","isRequired","bool","intlShape","_default","injectIntl"],"sources":["../../../../../src/editors/sharedComponents/ImageUploadModal/ImageSettingsModal/DimensionControls.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Form,\n  Icon,\n  IconButton,\n} from '@edx/paragon';\nimport {\n  Locked,\n  Unlocked,\n} from '@edx/paragon/icons';\nimport { FormattedMessage, injectIntl, intlShape } from '@edx/frontend-platform/i18n';\n\nimport hooks from './hooks';\nimport messages from './messages';\n\n/**\n * Wrapper for image dimension inputs and the lock checkbox.\n * @param {bool} isLocked - are dimensions locked\n * @param {func} lock - lock dimensions\n * @param {func} setHeight - updates dimensions based on new height\n * @param {func} setWidth - updates dimensions based on new width\n * @param {func} unlock - unlock dimensions\n * @param {func} updateDimensions - update dimensions callback\n * @param {obj} value - local dimension values { height, width }\n */\nexport const DimensionControls = ({\n  isLocked,\n  lock,\n  setHeight,\n  setWidth,\n  unlock,\n  updateDimensions,\n  value,\n  // inject\n  intl,\n}) => ((value !== null) && (\n  <Form.Group>\n    <Form.Label as=\"h4\">\n      <FormattedMessage {...messages.imageDimensionsLabel} />\n    </Form.Label>\n    <div className=\"mt-4.5\">\n      <Form.Control\n        className=\"dimension-input\"\n        value={value.width}\n        onChange={hooks.onInputChange(setWidth)}\n        onBlur={updateDimensions}\n        floatingLabel={intl.formatMessage(messages.widthFloatingLabel)}\n      />\n      <Form.Control\n        className=\"dimension-input\"\n        value={value.height}\n        onChange={hooks.onInputChange(setHeight)}\n        onBlur={updateDimensions}\n        floatingLabel={intl.formatMessage(messages.heightFloatingLabel)}\n      />\n      <IconButton\n        className=\"d-inline-block\"\n        alt={\n          isLocked\n            ? intl.formatMessage(messages.unlockDimensionsLabel)\n            : intl.formatMessage(messages.lockDimensionsLabel)\n        }\n        iconAs={Icon}\n        src={isLocked ? Locked : Unlocked}\n        onClick={isLocked ? unlock : lock}\n      />\n    </div>\n  </Form.Group>\n));\nDimensionControls.defaultProps = {\n  value: {\n    height: '100',\n    width: '100',\n  },\n};\nDimensionControls.propTypes = ({\n  value: PropTypes.shape({\n    height: PropTypes.string,\n    width: PropTypes.string,\n  }),\n  setHeight: PropTypes.func.isRequired,\n  setWidth: PropTypes.func.isRequired,\n  isLocked: PropTypes.bool.isRequired,\n  lock: PropTypes.func.isRequired,\n  unlock: PropTypes.func.isRequired,\n  updateDimensions: PropTypes.func.isRequired,\n  // inject\n  intl: intlShape.isRequired,\n});\n\nexport default injectIntl(DimensionControls);\n"],"mappings":"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"}