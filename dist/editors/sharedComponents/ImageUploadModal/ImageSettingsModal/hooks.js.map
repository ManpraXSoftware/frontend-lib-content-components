{"version":3,"file":"hooks.js","names":["_react","_interopRequireDefault","require","_utils","_module","_interopRequireWildcard","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","_typeof","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","value","_toPropertyKey","configurable","writable","arg","_toPrimitive","String","input","hint","prim","Symbol","toPrimitive","undefined","res","TypeError","Number","_slicedToArray","arr","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","o","minLen","_arrayLikeToArray","n","toString","slice","constructor","name","Array","from","test","len","arr2","_i","iterator","_s","_e","_x","_r","_arr","_n","_d","next","done","err","isArray","state","exports","altText","val","React","useState","dimensions","showAltTextDismissibleError","showAltTextSubmissionError","isDecorative","isLocked","local","lockDims","lockInitialized","dimKeys","StrictDict","height","width","findGcd","a","b","checkEqual","d1","d2","getValidDimensions","_ref","out","iter","isMin","changed","other","direction","Math","max","round","dimensionLockHooks","_module$state$lockDim","module","_module$state$lockDim2","setLockDims","_module$state$isLocke","_module$state$isLocke2","setIsLocked","initializeLock","_ref2","gcd","some","v","isInteger","lock","unlock","dimensionHooks","altTextHook","_module$state$dimensi","_module$state$dimensi2","setDimensions","_module$state$local","_module$state$local2","setLocal","setAll","_ref3","setIsDecorative","setValue","_module$dimensionLock","onImgLoad","selection","_ref4","img","imageDims","naturalHeight","naturalWidth","setHeight","match","heightPercent","parseInt","setWidth","widthPercent","updateDimensions","altTextHooks","savedText","_module$state$altText","_module$state$altText2","_module$state$isDecor","_module$state$isDecor2","_module$state$showAlt","_module$state$showAlt2","setShowAltTextDismissibleError","_module$state$showAlt3","_module$state$showAlt4","setShowAltTextSubmissionError","validateAltText","newVal","newDecorative","decorative","error","show","dismiss","validation","onInputChange","handleValue","e","onCheckboxChange","checked","checkFormValidation","_ref5","onAltTextFail","onSaveClick","_ref6","saveToEditor","_default"],"sources":["../../../../../src/editors/sharedComponents/ImageUploadModal/ImageSettingsModal/hooks.js"],"sourcesContent":["import React from 'react';\n\nimport { StrictDict } from '../../../utils';\nimport * as module from './hooks';\n\n// Simple wrappers for useState to allow easy mocking for tests.\nexport const state = {\n  altText: (val) => React.useState(val),\n  dimensions: (val) => React.useState(val),\n  showAltTextDismissibleError: (val) => React.useState(val),\n  showAltTextSubmissionError: (val) => React.useState(val),\n  isDecorative: (val) => React.useState(val),\n  isLocked: (val) => React.useState(val),\n  local: (val) => React.useState(val),\n  lockDims: (val) => React.useState(val),\n  lockInitialized: (val) => React.useState(val),\n};\n\nexport const dimKeys = StrictDict({\n  height: 'height',\n  width: 'width',\n});\n\n/**\n * findGcd(numerator, denominator)\n * Find the greatest common denominator of a ratio or fraction.\n * @param {number} numerator - ratio numerator\n * @param {number} denominator - ratio denominator\n * @return {number} - ratio greatest common denominator\n */\nexport const findGcd = (a, b) => (b ? findGcd(b, a % b) : a);\nconst checkEqual = (d1, d2) => (d1.height === d2.height && d1.width === d2.width);\n\n/**\n * getValidDimensions({ dimensions, local, locked })\n * Find valid ending dimensions based on start state, request, and lock state\n * @param {obj} dimensions - current stored dimensions\n * @param {obj} local - local (active) dimensions in the inputs\n * @param {obj} locked - locked dimensions\n * @return {obj} - output dimensions after move ({ height, width })\n */\nexport const getValidDimensions = ({\n  dimensions,\n  local,\n  isLocked,\n  lockDims,\n}) => {\n  if (!isLocked || checkEqual(local, dimensions)) {\n    return local;\n  }\n  const out = {};\n  let iter;\n  const isMin = dimensions.height === lockDims.height;\n\n  const keys = (local.height !== dimensions.height)\n    ? { changed: dimKeys.height, other: dimKeys.width }\n    : { changed: dimKeys.width, other: dimKeys.height };\n\n  const direction = local[keys.changed] > dimensions[keys.changed] ? 1 : -1;\n\n  // don't move down if already at minimum size\n  if (direction < 0 && isMin) { return dimensions; }\n  // find closest valid iteration of the changed field\n  iter = Math.max(Math.round(local[keys.changed] / lockDims[keys.changed]), 1);\n  // if closest valid iteration is current iteration, move one iteration in the change direction\n  if (iter === (dimensions[keys.changed] / lockDims[keys.changed])) { iter += direction; }\n\n  out[keys.changed] = Math.round(iter * lockDims[keys.changed]);\n  out[keys.other] = Math.round(out[keys.changed] * (lockDims[keys.other] / lockDims[keys.changed]));\n\n  return out;\n};\n\n/**\n * dimensionLockHooks({ dimensions })\n * Returns a set of hooks pertaining to the dimension locks.\n * Locks the dimensions initially, on lock initialization.\n * @param {obj} dimensions - current stored dimensions\n * @return {obj} - dimension lock hooks\n *   {func} initializeLock - enable the lock mechanism\n *   {bool} isLocked - are dimensions locked?\n *   {obj} lockDims - image dimensions ({ height, width })\n *   {func} lock - lock the dimensions\n *   {func} unlock - unlock the dimensions\n */\nexport const dimensionLockHooks = () => {\n  const [lockDims, setLockDims] = module.state.lockDims(null);\n  const [isLocked, setIsLocked] = module.state.isLocked(true);\n\n  const initializeLock = ({ width, height }) => {\n    // find minimum viable increment\n    let gcd = module.findGcd(width, height);\n    if ([width, height].some(v => !Number.isInteger(v / gcd))) {\n      gcd = 1;\n    }\n    setLockDims({ width: width / gcd, height: height / gcd });\n  };\n\n  return {\n    initializeLock,\n    isLocked,\n    lock: () => setIsLocked(true),\n    lockDims,\n    unlock: () => setIsLocked(false),\n  };\n};\n\n/**\n * dimensionHooks()\n * Returns an object of dimension-focused react hooks.\n * @return {obj} - dimension hooks\n *   {func} onImgLoad - initializes image dimension fields\n *     @param {object} selection - selected image object with possible override dimensions.\n *     @return {callback} - image load event callback that loads dimensions.\n *   {object} locked - current locked state\n *   {func} lock - lock current dimensions\n *   {func} unlock - unlock dimensions\n *   {object} value - current dimension values\n *   {func} setHeight - set height\n *     @param {string} - new height string\n *   {func} setWidth - set width\n *     @param {string} - new width string\n *   {func} updateDimensions - set dimensions based on state\n *   {obj} errorProps - props for user feedback error\n *     {bool} isError - true if dimensions are blank\n *     {func} setError - sets isError to true\n *     {func} dismissError - sets isError to false\n *     {bool} isHeightValid - true if height field is ready to save\n *     {func} setHeightValid - sets isHeightValid to true\n *     {func} setHeightNotValid - sets isHeightValid to false\n *     {bool} isWidthValid - true if width field is ready to save\n *     {func} setWidthValid - sets isWidthValid to true\n *     {func} setWidthNotValid - sets isWidthValid to false\n */\nexport const dimensionHooks = (altTextHook) => {\n  const [dimensions, setDimensions] = module.state.dimensions(null);\n  const [local, setLocal] = module.state.local(null);\n  const setAll = ({ height, width, altText }) => {\n    if (altText === '' || altText) {\n      if (altText === '') {\n        altTextHook.setIsDecorative(true);\n      }\n      altTextHook.setValue(altText);\n    }\n    setDimensions({ height, width });\n    setLocal({ height, width });\n  };\n  const {\n    initializeLock,\n    isLocked,\n    lock,\n    lockDims,\n    unlock,\n  } = module.dimensionLockHooks({ dimensions });\n\n  return {\n    onImgLoad: (selection) => ({ target: img }) => {\n      const imageDims = { height: img.naturalHeight, width: img.naturalWidth };\n      setAll(selection.height ? selection : imageDims);\n      initializeLock(imageDims);\n    },\n    isLocked,\n    lock,\n    unlock,\n    value: local,\n    setHeight: (height) => {\n      if (height.match(/[0-9]+[%]{1}/)) {\n        const heightPercent = height.match(/[0-9]+[%]{1}/)[0];\n        setLocal({ ...local, height: heightPercent });\n      } else if (height.match(/[0-9]/)) {\n        setLocal({ ...local, height: parseInt(height, 10) });\n      }\n    },\n    setWidth: (width) => {\n      if (width.match(/[0-9]+[%]{1}/)) {\n        const widthPercent = width.match(/[0-9]+[%]{1}/)[0];\n        setLocal({ ...local, width: widthPercent });\n      } else if (width.match(/[0-9]/)) {\n        setLocal({ ...local, width: parseInt(width, 10) });\n      }\n    },\n    updateDimensions: () => setAll(module.getValidDimensions({\n      dimensions,\n      local,\n      isLocked,\n      lockDims,\n    })),\n  };\n};\n\n/**\n * altTextHooks(savedText)\n * Returns a set of react hooks focused around alt text\n * @return {obj} - alt text hooks\n *   {string} value - alt text value\n *   {func} setValue - set alt test value\n *     @param {string} - new alt text\n *   {bool} isDecorative - is the image decorative?\n *   {func} setIsDecorative - set isDecorative field\n *   {obj} error - error at top of page\n *     {bool} show - is error being displayed?\n *     {func} set - set show to true\n *     {func} dismiss - set show to false\n *   {obj} validation - local alt text error\n *     {bool} show - is validation error being displayed?\n *     {func} set - set validation to true\n *     {func} dismiss - set validation to false\n */\nexport const altTextHooks = (savedText) => {\n  const [value, setValue] = module.state.altText(savedText || '');\n  const [isDecorative, setIsDecorative] = module.state.isDecorative(false);\n  const [showAltTextDismissibleError, setShowAltTextDismissibleError] = module.state.showAltTextDismissibleError(false);\n  const [showAltTextSubmissionError, setShowAltTextSubmissionError] = module.state.showAltTextSubmissionError(false);\n\n  const validateAltText = (newVal, newDecorative) => {\n    if (showAltTextSubmissionError) {\n      if (newVal || newDecorative) {\n        setShowAltTextSubmissionError(false);\n      }\n    }\n  };\n\n  return {\n    value,\n    setValue: (val) => {\n      setValue(val);\n      validateAltText(val, null);\n    },\n    isDecorative,\n    setIsDecorative: (decorative) => {\n      setIsDecorative(decorative);\n      validateAltText(null, decorative);\n    },\n    error: {\n      show: showAltTextDismissibleError,\n      set: () => setShowAltTextDismissibleError(true),\n      dismiss: () => setShowAltTextDismissibleError(false),\n    },\n    validation: {\n      show: showAltTextSubmissionError,\n      set: () => setShowAltTextSubmissionError(true),\n      dismiss: () => setShowAltTextSubmissionError(false),\n    },\n  };\n};\n\n/**\n * onInputChange(handleValue)\n * Simple event handler forwarding the event target value to a given callback\n * @param {func} handleValue - event value handler\n * @return {func} - evt callback that will call handleValue with the event target value.\n */\nexport const onInputChange = (handleValue) => (e) => handleValue(e.target.value);\n\n/**\n * onCheckboxChange(handleValue)\n * Simple event handler forwarding the event target checked prop to a given callback\n * @param {func} handleValue - event value handler\n * @return {func} - evt callback that will call handleValue with the event target checked prop.\n */\nexport const onCheckboxChange = (handleValue) => (e) => handleValue(e.target.checked);\n\n/**\n * checkFormValidation({ altText, isDecorative, onAltTextFail })\n * Handle saving the image context to the text editor\n * @param {string} altText - image alt text\n * @param {bool} isDecorative - is the image decorative?\n * @param {func} onAltTextFail - called if alt text validation fails\n */\nexport const checkFormValidation = ({\n  altText,\n  isDecorative,\n  onAltTextFail,\n}) => {\n  if (!isDecorative && altText === '') {\n    onAltTextFail();\n    return false;\n  }\n  return true;\n};\n\n/**\n * onSave({ altText, dimensions, isDecorative, saveToEditor })\n * Handle saving the image context to the text editor\n * @param {string} altText - image alt text\n * @param {object} dimensions - image dimensions ({ width, height })\n * @param {bool} isDecorative - is the image decorative?\n * @param {func} saveToEditor - save method for submitting image settings.\n */\nexport const onSaveClick = ({\n  altText,\n  dimensions,\n  isDecorative,\n  saveToEditor,\n}) => () => {\n  if (module.checkFormValidation({\n    altText: altText.value,\n    isDecorative,\n    onAltTextFail: () => {\n      altText.error.set();\n      altText.validation.set();\n    },\n  })) {\n    altText.error.dismiss();\n    altText.validation.dismiss();\n    saveToEditor({\n      altText: altText.value,\n      dimensions,\n      isDecorative,\n    });\n  }\n};\n\nexport default {\n  altText: altTextHooks,\n  dimensions: dimensionHooks,\n  onCheckboxChange,\n  onInputChange,\n  onSaveClick,\n  checkFormValidation,\n};\n"],"mappings":"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"}